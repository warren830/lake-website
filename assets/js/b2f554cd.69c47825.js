"use strict";(self.webpackChunkwww=self.webpackChunkwww||[]).push([[1477],{30010:e=>{e.exports=JSON.parse('{"blogPosts":[{"id":"/2022/07/15/welcome-open-source","metadata":{"permalink":"/blog/2022/07/15/welcome-open-source","editUrl":"https://github.com/apache/incubator-devlake-website/edit/main/blog/2022-07-15-welcome-open-source/index.md","source":"@site/blog/2022-07-15-welcome-open-source/index.md","title":"\u62e5\u62b1\u5f00\u6e90\u6307\u5357","description":"\u62e5\u62b1\u5f00\u6e90\u6307\u5357\\n","date":"2022-07-15T00:00:00.000Z","formattedDate":"July 15, 2022","tags":[],"readingTime":9.833333333333334,"hasTruncateMarker":false,"authors":[{"name":"Likyh","title":"Apache DevLake Contributor","url":"https://github.com/likyh","imageURL":"https://avatars.githubusercontent.com/u/3294100?v=4","key":"likyh"}],"frontMatter":{"title":"\u62e5\u62b1\u5f00\u6e90\u6307\u5357","authors":"likyh","description":"\u62e5\u62b1\u5f00\u6e90\u6307\u5357\\n"},"nextItem":{"title":"Compatibility of Apache DevLake with PostgreSQL","permalink":"/blog/compatibility-of-apache-devLake-with-postgreSQL"}},"content":"\u8fd1\u5e74\u6765\uff0c\u5f00\u6e90\u6b63\u5728\u53d8\u5f97\u8d8a\u6765\u8d8a\u706b\uff0c\u5728\u5f88\u591a\u5f00\u53d1\u8005\u773c\u4e2d\uff0c\u300c\u5f00\u6e90\u300d\u4e5f\u662f\u975e\u5e38\u6781\u5ba2\u7684\u4f53\u73b0\u3002\u540c\u65f6\u53c2\u4e0e\u5f00\u6e90\u9879\u76ee\u4e5f\u80fd\u7ed9\u804c\u4e1a\u53d1\u5c55\u5e26\u6765\u5de8\u5927\u7684\u597d\u5904\u3002\u53ef\u4e00\u4e9b\u5c0f\u4f19\u4f34\u5374\u56e0\u4e3a\u4e0d\u77e5\u9053\u53c2\u4e0e\u7684\u65b9\u6cd5\u548c\u9014\u5f84\u6ca1\u80fd\u53c2\u4e0e\uff0c\u8fd9\u91cc\u5c31\u5411\u5927\u5bb6\u4ecb\u7ecd\u4e00\u4e0b\u4f5c\u4e3a\u5f00\u53d1\u8005\uff0c\u53ef\u4ee5\u600e\u4e48\u62e5\u62b1\u5f00\u6e90\u8f6f\u4ef6\uff0c\u4ee5\u53ca\u600e\u4e48\u6210\u4e3a\u5927\u5bb6\u8ba4\u53ef\u7684\u5f00\u6e90\u8d21\u732e\u8005\u3002\\n\\n\u5f53\u7136\uff0c\u672c\u6587\u4f1a\u66f4\u591a\u7684\u4ece\u5927\u7684\u80cc\u666f\u77e5\u8bc6\u4e0a\u8fdb\u884c\u53d9\u8ff0\uff0c\u5173\u4e8e\u4ee3\u7801\u63d0\u4ea4\u7684\u8be6\u7ec6\u6b65\u9aa4\uff0c\u53ef\u4ee5\u770b\u770b\u8fd9\u4e00\u7bc7\u6587\u7ae0\uff1a[\u5982\u4f55\u53c2\u4e0e\u5f00\u6e90\u9879\u76ee - \u7ec6\u8bf4 GitHub \u4e0a\u7684 PR \u5168\u8fc7\u7a0b](https://mp.weixin.qq.com/s/b1mKPgOm1mnwsBbEBDRvKw)\u3002\\n\\n## \u4ec0\u4e48\u662f\u5f00\u6e90\u8f6f\u4ef6\\n\\n\u5f00\u6e90\u662f\u6e90\u4ee3\u7801\u53ef\u4ee5\u4efb\u610f\u83b7\u53d6\u7684\u8ba1\u7b97\u673a\u8f6f\u4ef6\uff0c\u4efb\u4f55\u4eba\u90fd\u80fd\u67e5\u770b\u3001\u4fee\u6539\u548c\u5206\u53d1\u4ed6\u4eec\u8ba4\u4e3a\u5408\u9002\u7684\u4ee3\u7801\uff0c\u4f46\u8fd9\u5e76\u4e0d\u610f\u5473\u7740\u53ef\u4ee5\u4f7f\u7528\u6e90\u4ee3\u7801\u800c\u6ca1\u6709\u4efb\u4f55\u8457\u4f5c\u6743\u6216\u53d1\u884c\u6743\u7684\u7ea6\u675f\uff0c\u6211\u4eec\u63a5\u89e6\u5230\u7684\u5f00\u6e90\u8f6f\u4ef6\u4e00\u822c\u90fd\u6709\u5bf9\u5e94\u7684\u5f00\u6e90\u8bb8\u53ef\u8bc1\uff08Open Source License\uff09\u5bf9\u8f6f\u4ef6\u7684\u4f7f\u7528\u3001\u590d\u5236\u3001\u4fee\u6539\u548c\u518d\u53d1\u5e03\u7b49\u8fdb\u884c\u9650\u5236\u3002\u8bb8\u53ef\u8bc1\u5373\u6388\u6743\u6761\u6b3e\uff0c\u5f00\u6e90\u8bb8\u53ef\u8bc1\u5c31\u662f\u8bf4\u660e\u8fd9\u4e9b\u9650\u5236\u7684\u6587\u4ef6\uff0c\u5e38\u89c1\u7684\u5f00\u6e90\u8bb8\u53ef\u8bc1\u4e3b\u8981\u6709 Apache\u3001MIT\u3001BSD\u3001GPL\u3001LGPL\u3001MPL\u3001SSPL \u7b49\u3002\\n\\n\u4e0b\u9762\uff0c\u6211\u4eec\u901a\u8fc7\u4e00\u5f20\u8868\u6765\u7b80\u5355\u4e86\u89e3\u4e00\u4e0b\u5e38\u89c1**\u5bbd\u677e**\u5f00\u6e90\u8bb8\u53ef\u8bc1\u4e4b\u95f4\u7684\u533a\u522b\uff1a\\n\\n![\u5e38\u89c1\u5f00\u6e90\u8bb8\u53ef\u8bc1\u4e4b\u95f4\u7684\u533a\u522b](http://www.ruanyifeng.com/blogimg/asset/201105/bg2011050101.png)\\n\\n\uff08\u56fe\u7247\u6765\u81ea: https://www.ruanyifeng.com/blog/2011/05/how_to_choose_free_software_licenses.html\uff09\\n\\n\u5176\u4e2d\uff0cApache \u8bb8\u53ef\u8bc1\uff08Apache License\uff09\u662f\u76ee\u524d\u5168\u7403\u6700\u5927\u7684\u5f00\u6e90\u8f6f\u4ef6\u57fa\u91d1\u4f1a\u4e4b\u4e00ASF (Apache Software Foundation) \u53d1\u5e03\u7684License\u3002\u8fd9\u662f\u4e00\u4e2a\u6700\u521d\u4e3a Apache http \u670d\u52a1\u5668\u800c\u64b0\u5199\u3002\u6b64\u8bb8\u53ef\u8bc1\u6700\u65b0\u7248\u672c\u4e8e 2004 \u5e74 1 \u6708\u53d1\u5e03\uff0c\u5e76\u8981\u6c42\u6240\u6709ASF\u7684\u9879\u76ee\u5747\u91c7\u7528\u6b64\u9879License\u3002\\n\\n## \u5bfb\u627e\u8fd0\u884c\u826f\u597d\u7684\u5f00\u6e90\u9879\u76ee\\n\\n\u76ee\u524d\uff0c\u5f00\u6e90\u9879\u76ee\u4e3b\u8981\u662f\u4e24\u7c7b\uff0c\u4e00\u7c7b\u7531\u56e2\u961f\u81ea\u884c\u7ef4\u62a4\uff0c\u4e00\u7c7b\u7531\u7279\u5b9a\u7684\u57fa\u91d1\u4f1a\u8fd0\u884c\u3002\u73b0\u5728\u5927\u90e8\u5206\u9879\u76ee\u5747\u6258\u7ba1\u5728 GitHub \u4e0a\uff0c\u56e0\u6b64\u5728GitHub\u4e0a\u76f4\u63a5\u641c\u7d22\u70b9\u8d5e\u8f83\u9ad8\u8f83\u6d3b\u8dc3\u7684\u9879\u76ee\uff0c\u5f80\u5f80\u5c31\u662f\u4e00\u4e2a\u4e0d\u9519\u7684\u9009\u62e9\u3002\u6bd4\u5982\u60f3\u53c2\u4e0e\u6570\u636e\u5206\u6790\u76f8\u5173\u7684\u9879\u76ee\uff0c\u53ef\u4ee5\u5728GitHub\u641c\u7d22 data analyzes\uff0c\u6ce8\u610f\u89c2\u5bdf\u9879\u76ee\u6700\u8fd1\u7684\u63d0\u4ea4\u65f6\u95f4\u548cissue\u6570\u91cf\uff0c\u66f4\u65b0\u5feb\u8bf4\u660e\u9879\u76ee\u6210\u5458\u6d3b\u8dc3\uff0c\u6709issue\u8bf4\u660e\u662f\u4e00\u4e2a\u6b63\u5728\u5feb\u901f\u53d1\u5c55\u7684\u9879\u76ee\uff0c\u66f4\u9002\u5408\u53c2\u4e0e\u3002\\n\\n![image](https://user-images.githubusercontent.com/3294100/177321877-e1b295a9-2e33-499d-98d8-0a789f96c375.png)\\n\\n\u7b2c\u4e8c\u79cd\u5bfb\u627e\u65b9\u5f0f\uff0c\u7531\u5f00\u6e90\u57fa\u91d1\u4f1a\u7ef4\u62a4\u7684\u8fd0\u884c\u826f\u597d\u7684\u9879\u76ee\uff0c\u8fd8\u53ef\u4ee5\u5728\u5bf9\u5e94\u7684\u5f00\u6e90\u57fa\u91d1\u4f1a\u5b98\u7f51\u627e\u5230\u3002\\n\\n\u6bd4\u5982Linux\u57fa\u91d1\u4f1a\u7684\u9879\u76ee\u5730\u5740\uff1ahttps://www.linuxfoundation.org/projects/\\n\\n![Linux\u57fa\u91d1\u4f1a\u7684\u9879\u76ee\u5730\u5740](https://user-images.githubusercontent.com/3294100/177315987-75429570-d357-4170-aa81-755cf93690b6.png)\\n\\n\u6bd4\u5982CNCF\u7684\u9879\u76ee\u9875\uff1ahttps://landscape.cncf.io/\\n\\n![CNCF\u7684\u9879\u76ee\u9875](https://user-images.githubusercontent.com/3294100/177316817-2818565d-ae07-4f1a-9c9d-a3b334276714.png)\\n\\n\u6bd4\u5982ASF\u7684\u9879\u76ee\u9875\uff1ahttps://projects.apache.org/projects.html\\n\\n![ASF\u7684\u9879\u76ee\u9875](https://user-images.githubusercontent.com/3294100/177317430-35c08429-9d18-44f9-9e4b-b3172527572d.png)\\n\\n\u6700\u540e\uff0c\u8fd8\u6709\u4e00\u4e9b\u7b2c\u4e09\u65b9\u7684\u8bc4\u4f30\u9762\u677f\uff0c\u4ece\u4e00\u4e9b\u72ec\u7279\u7684\u89c6\u89d2\u4e86\u89e3\u73b0\u5b58\u7684\u5f00\u6e90\u9879\u76ee\u3002\\n\u6bd4\u5982ossinsight\uff1ahttps://ossinsight.io/collections/open-source-database \uff0c\u53ef\u4ee5\u4e86\u89e3\u672c\u6708\u70b9\u8d5e\u6700\u591a\u7684\u9879\u76ee\u6709\u4e9b\u4ec0\u4e48\uff0c\\n![ossinsight](https://user-images.githubusercontent.com/3294100/179458318-bc6d753c-01da-41e5-b059-ea1a8d888e80.png)\\n\u518d\u6bd4\u5982\u4ece DevLake \u7684 [OSS \u9879\u76ee\u9762\u677f](https://grafana-oss.demo.devlake.io/d/KXWvOFQnz/github_basic_metrics?orgId=1&var-repo_id=github:GithubRepo:482676524&from=1642498327554&to=1658136727554) \u66f4\u52a0\u6df1\u5165\u7684\u4e86\u89e3\u9879\u76ee\uff0c\u8fd9\u90fd\u662f\u4e86\u89e3\u5f00\u6e90\u9879\u76ee\u8fd0\u884c\u72b6\u51b5\u7684\u6709\u6548\u9014\u5f84\u3002\\n![devlake oss](https://user-images.githubusercontent.com/3294100/179483669-cc954d0c-68ed-4af3-8170-9cf4f0f16abd.png)\\n\\n\\n## Apache\u5f00\u6e90\u8f6f\u4ef6\u57fa\u91d1\u4f1a\\n\\n\u56e0\u4e3a\u7b14\u8005\u66f4\u4e86\u89e3 ASF \uff0c\u6240\u4ee5\u8fd9\u91cc\u5c31\u5bf9\u5b83\u505a\u4e00\u4e9b\u66f4\u8be6\u7ec6\u7684\u4ecb\u7ecd\u3002\\n\\nApache \u5f00\u6e90\u57fa\u91d1\u4f1a\u76ee\u524d\u7ef4\u62a4\u7740380\u4f59\u4e2a\u5f00\u6e90\u9879\u76ee\uff0c\u4f46\u4e00\u5e74\u7684\u5f00\u9500\u4ec5\u4e00\u767e\u591a\u4e07\u7f8e\u5143\u5de6\u53f3\u3002\u8fd9\u662f\u4e00\u4e2a\u975e\u5e38\u4f4e\u7684\u6570\uff08\u800c\u5176\u4ed6\u57fa\u91d1\u4f1a\u6bd4\u5982Linux\u57fa\u91d1\u4f1a\uff0c\u6bcf\u5e74\u5f00\u9500\u5728\u4e0a\u4ebf\u7f8e\u5143\uff09\uff0c\u5e73\u5747\u6bcf\u4e2a\u9879\u76ee\u4ec52000\u4f59\u7f8e\u5143\uff0c\u8fd9\u5c31\u51b3\u5b9a\u4e86Apache\u7684\u5f00\u6e90\u9879\u76ee\u66f4\u4f9d\u8d56\u793e\u533a\u548c\u5f00\u6e90\u8d21\u732e\u8005\uff0c\u5728Apache\u793e\u533a\u4e2d\uff0c\u300cCommunity over Code\u300d\u5373\u793e\u533a\u5148\u4e8e\u7f16\u7801\u4f53\u73b0\u5f97\u6dcb\u6f13\u5c3d\u81f4\u3002Apache \u57fa\u91d1\u4f1a\u6bcf\u5e74\u7684\u652f\u51fa\u5176\u4e2d80%\u7528\u5728**\u57fa\u7840\u8bbe\u65bd**\uff0c\u5176\u4f59\u4f1a\u7528\u5728**\u8425\u9500\u3001\u5ba3\u4f20\u548c\u54c1\u724c\u7ba1\u7406\u670d\u52a1\uff0c\u7814\u8ba8\u4f1a\u548c\u53d1\u5c55\u793e\u533a\uff0c\u6cd5\u5f8b\u54a8\u8be2\u7b49\u65b9\u9762**\uff0c\u800c\u5176\u4ed6\u8bf8\u5982\u65e5\u5e38\u7ef4\u62a4\u3001\u7f16\u7801\u7b49\u5de5\u4f5c\u5747\u7531\u5404\u4e2a\u9879\u76ee\u7684\u6210\u5458\u7ef4\u62a4\u3002\\n\\nApache\u5f00\u6e90\u9879\u76ee\u4e2d\uff0c\u4e00\u822c\u6709\u5982\u4e0b\u51e0\u4e2a\u57fa\u672c\u7684\u89d2\u8272\uff1a\\n\\n* Contributor\\n    \u666e\u901a\u8d21\u732e\u8005\uff0c\u8fd9\u79cd\u5c31\u662f\u5f88\u5bb9\u6613\u83b7\u5f97\uff0c\u53ea\u9700\u8981\u63d0\u4ea4\u4e00\u4e2aPR\u5e76\u88ab\u5b98\u65b9\u5408\u5e76\u5230\u4e3b\u5206\u652f\u5373\u53ef\u83b7\u5f97\uff0c\u4f8b\u5982\u63d0\u4ea4\u4e00\u4e2a\u6587\u6863\uff0c\u4fee\u6539\u51e0\u884c\u4ee3\u7801\u5c31\u884c\u3002\\n\\n* Committer \\n    \u6838\u5fc3\u5f00\u53d1\uff0c\u5bf9\u8d21\u732e\u7279\u522b\u5927\u7684 Contributor\uff0c\u5b98\u65b9\u793e\u533a\u4f1a\u8003\u8651\u5c06\u5176\u5438\u6536\uff0c\u63d0\u5347\u5230commiter\uff0c\u6210\u4e3a\u6838\u5fc3\u5f00\u53d1\uff0c\u6b64\u65f6\u5c31\u6709\u9879\u76ee\u7684\u5199\u5165\u6743\u9650\uff0c**\u5e76\u53ef\u4ee5\u7533\u8bf7@apache.com\u7ed3\u5c3e\u7684\u90ae\u7bb1**\u3002\\n\\n* PMC\\n    \u5f00\u6e90\u9879\u76ee\u51b3\u7b56\u6210\u5458\u3002\\n\\n\\n\\n## \u53c2\u4e0e\u9879\u76ee\u8ba8\u8bba\\n\\n\u4e00\u65e6\u9009\u62e9\u597d\u4e00\u4e2a\u5f00\u6e90\u9879\u76ee\u540e\uff0c\u6211\u4eec\u53c8\u8be5\u5982\u4f55\u627e\u5230\u7ec4\u7ec7\u5462\uff1f\\n\\n\u9996\u5148\u662f\u9605\u8bfb\u5b98\u65b9\u6587\u6863\uff0c\u5168\u9762\u4e86\u89e3\u8be5\u9879\u76ee\u7684\u67b6\u6784\u8bbe\u8ba1\u6587\u6863\u548c\u89e3\u51b3\u7684\u95ee\u9898\uff0c\u4e4b\u540e\u53ef\u4ee5\u5c1d\u8bd5\u53c2\u4e0e\u9879\u76ee\u65e5\u5e38\u7684\u8ba8\u8bba\u3002\u5c3d\u7ba1\u5728\u5fae\u4fe1\u7fa4\u4e2d\u63d0\u95ee\u5f88\u65b9\u4fbf\uff0c\u4f46 Apache \u9879\u76ee\u7684\u5927\u90e8\u5206\u8ba8\u8bba\u9700\u8981\u516c\u5f00\u5730\u5728\u90ae\u4ef6\u5217\u8868\u4e2d\u8fdb\u884c\uff0c\u65b9\u4fbf\u6240\u6709\u4eba\u67e5\u770b\u53ca\u67e5\u8be2\uff0c\u56e0\u6b64\u6211\u4eec\u4e5f\u9700\u8981\u4e86\u89e3\u5982\u4f55\u53c2\u4e0e Apache \u7684\u90ae\u4ef6\u8ba8\u8bba\u3002\\n\\nApache\u4e0b\u9762\u7684\u6bcf\u4e00\u4e2a\u9879\u76ee\u90fd\u6709\u81ea\u5df1\u7684\u90ae\u4ef6\u5217\u8868\uff0c\u540c\u65f6\u5206\u4e0d\u540c\u7684\u90ae\u4ef6\u7ec4\uff0c\u4ee5Apache DevLake\u4e3a\u4f8b\uff0c\u6709\u5982\u4e0b\u8ba2\u9605\u5217\u8868\uff1a\\n\\n| \u90ae\u7bb1                                                         | \u7528\u9014                                       |\\n| :----------------------------------------------------------- | :----------------------------------------- |\\n| [user-subscribe@devlake.apache.org](mailto:user-subscribe@devlake.apache.org) | \u8ba2\u9605\u8be5\u90ae\u4ef6\u53ef\u4ee5\u53c2\u4e0e\u8ba8\u8bba\u666e\u901a\u7528\u6237\u9047\u5230\u7684\u95ee\u9898   |\\n| [dev-subscribe@devlake.apache.org](mailto:dev-subscribe@devlake.apache.org) | \u8ba2\u9605\u8be5\u90ae\u4ef6\u53ef\u4ee5\u53c2\u4e0e\u8ba8\u8bba**\u5f00\u53d1\u8005**\u9047\u5230\u7684\u95ee\u9898 |\\n| commits-subscribe@devlake.apache.org                         | \u6240\u6709\u7684\u4ee3\u7801\u7684\u63d0\u4ea4\u53d8\u52a8\u4fe1\u606f\u90fd\u4f1a\u53d1\u5230\u8be5\u90ae\u4ef6     |\\n\\n\u5177\u4f53\u64cd\u4f5c\u662f\u9996\u5148\u7ed9dev-subscribe@devlake.apache.org\u53d1\u4e00\u5c01\u90ae\u4ef6\uff0c\u7b49\u6536\u5230\u786e\u8ba4\u90ae\u4ef6\u540e\u518d\u6b21\u786e\u8ba4\u5373\u53ef\u3002\\n\\n\u6dfb\u52a0\u540e\u5c31\u53ef\u4ee5\u6536\u5230\u6240\u6709\u5f00\u53d1\u8ba8\u8bba\u7684\u4fe1\u606f\u4e86\uff0c\u53e6\u5916\u4e5f\u53ef\u4ee5\u5173\u6ce8\u5b98\u7f51\u7684 maillist(https://lists.apache.org/list.html?dev@devlake.apache.org) \u67e5\u770b\u5168\u90e8\u5386\u53f2\u90ae\u4ef6\u3002\\n\\n\u53e6\u5916\uff0c\u5927\u90e8\u5206\u9879\u76ee\u4f1a\u6709\u4e00\u4e9b\u7ebf\u4e0a\u7684\u805a\u4f1a\uff0c\u5f80\u5f80\u53ef\u4ee5\u5728Readme\u9875\u9762\u627e\u5230\uff0c\u53c2\u4e0e\u7ebf\u4e0a\u805a\u4f1a\u53ef\u4ee5\u66f4\u76f4\u63a5\u7684\u83b7\u53d6\u6240\u9700\u7684\u4fe1\u606f\uff0c\u4e5f\u80fd\u6709\u673a\u4f1a\u548c\u9879\u76eePMC\u76f4\u63a5\u4ea4\u6d41\u3002\\n\\n## \u5411\u5f00\u6e90\u9879\u76ee\u53cd\u9988\u95ee\u9898\\n\\n\u5982\u679c\u5728\u9879\u76ee\u7684\u4f7f\u7528\u4e2d\uff0c\u9047\u5230\u4e86 bug\uff0c\u6216\u8005\u5e0c\u671b\u64b8\u8d77\u8896\u5b50\u4fee\u6539\u67d0\u4e2a\u529f\u80fd\u70b9\uff0c\u4f46\u8fd9\u4e2a\u529f\u80fd\u70b9\u9700\u8981\u8fdb\u4e00\u6b65\u8ba8\u8bba\u3002\u53ef\u4ee5\u5728\u524d\u9762\u7684\u90ae\u4ef6\u4e2d\u53d1\u8d77\u8ba8\u8bba\uff0c\u5f53\u7136\u4e5f\u53ef\u4ee5\u5728 GitHub \u7684 issue \u4e2d\u505a\u4e00\u4e2a\u8f83\u6b63\u5f0f\u7684\u8bb0\u5f55\u3002\\n\\n\u4e00\u822c\u7684\u9879\u76ee\u90fd\u4f1a\u9488\u5bf9\u4e0d\u540c\u7684\u76ee\u7684\uff0c\u63d0\u4f9b\u4e00\u4e9b issue \u521b\u5efa\u7684\u6a21\u677f\u3002\\n\\n![create issue](https://user-images.githubusercontent.com/3294100/178148411-fc570ab5-91e8-4c13-984a-99dc19604d35.png)\\n\\n\u5e38\u89c1\u7684\u7c7b\u578b\u6709\uff1a\\n\\n* Bug \u63d0\u51fa\u4e00\u4e2a\u529f\u80fd\u5b9e\u73b0\u7684\u9519\u8bef\\n* Document Issue \u63d0\u51fa\u4e00\u9879\u6587\u6863\u6539\u8fdb\u7684\u5efa\u8bae\\n* Feature Request \u8bf7\u6c42\u589e\u52a0\u6216\u8868\u793a\u4f60\u5c06\u589e\u52a0\u4e00\u4e2a\u4ea7\u54c1\u7279\u6027\\n* Refactor \u53d1\u8d77\u4e00\u9879\u4e0d\u5f71\u54cd\u529f\u80fd\u7684\u91cd\u6784\\n* Security Vulnerability \u62a5\u544a\u4e00\u4e2a\u5b89\u5168\u95ee\u9898\uff0c\u5728\u95ee\u9898\u4fee\u590d\u4ee5\u524d\uff0c\u8be5\u95ee\u9898\u4e0d\u4f1a\u516c\u5e03\u3002\\n\\n\u63d0\u51fa\u4e00\u4e2a\u6e05\u6670\u660e\u4e86\u7684 issue \u5f80\u5f80\u4f1a\u8ba9\u793e\u533a\u7684\u5176\u4ed6\u6210\u5458\u66f4\u613f\u610f\u54cd\u5e94\u4f60\u7684\u53f7\u53ec\uff0c\u76f8\u4fe1\u6211\uff0c\u8fd9\u4f1a\u662f\u4e00\u4e2a\u975e\u5e38\u4eab\u53d7\u7684\u8fc7\u7a0b~\\n\\n## \u6210\u4e3a\u9879\u76ee\u7684\u8d21\u732e\u8005\\n\\n\u5728\u53c2\u4e0e\u8ba8\u8bba\u7684\u57fa\u7840\u4e0a\uff0c\u53ea\u8981\u80fd\u5728 GitHub \u793e\u533a\u4e2d\u5e2e\u52a9\u9a8c\u8bc1\u4e00\u4e9b\u53d1\u5e03\u7684\u65b0\u529f\u80fd\u6216\u8005\u63d0\u4e00\u4e9b\u5efa\u8bae\u6216\u8005\u7f3a\u9677\uff0c\u6216\u8005\u4fee\u6539\u6e90\u7801\uff0c\u5c31\u80fd\u6210\u4e3a\u8be5\u9879\u76ee\u7684\u8d21\u732e\u8005(Contributor)\u3002\\n\\n\u521a\u53c2\u4e0e\u9879\u76ee\u65f6\uff0c\u53ef\u4ee5\u8003\u8651\u7f16\u5199\u6587\u6863\uff0c\u6216\u5b8c\u5584\u4e00\u4e9b\u6a21\u5757\u7684\u5355\u5143\u6d4b\u8bd5\uff0c\u6216\u8005\u8fdb\u884c\u4e00\u4e9b\u7b80\u5355\u7f16\u7801\u5de5\u4f5c\u3002\u6bd4\u5982\u53ef\u4ee5\u5728 GitHub Issues \u5217\u8868\u4e2d\u5bfb\u627e\u5e26\u6709`good first issue`\u6807\u8bb0\u4e14\u6682\u672a\u88ab\u8ba4\u9886\u7684\u4e8b\u60c5\uff0c\u8fd9\u5f80\u5f80\u662f\u793e\u533a\u7ef4\u62a4\u8005\u4e3a\u4e86\u5f15\u5bfc\u8d21\u732e\u8005\u4e13\u95e8\u521b\u5efa\u7684issue\uff0c\u5f88\u9002\u5408\u4f5c\u4e3a\u7b2c\u4e00\u4e2a\u63d0\u4ea4\u3002\u5b8c\u6210\u7b2c\u4e00\u4e2a\u63d0\u4ea4\u540e\uff0c\u53ef\u4ee5\u518d\u53bb\u770b\u770b\u5176\u4ed6open\u7684issue\u5e76\u89e3\u51b3\u3002\\n\\n\u76ee\u524d\u5f00\u6e90\u9879\u76ee\u4e00\u822c\u91c7\u7528 Git \u6765\u7ba1\u7406\u6e90\u4ee3\u7801\uff0c\u5982\u679c\u4f60\u4ece\u672a\u4f7f\u7528\u8fc7\u4ee3\u7801\u7ba1\u7406\u5de5\u5177\u7684\u8bdd\uff0c\u53ef\u4ee5\u73b0\u5728\u7f51\u4e0a\u5bfb\u627e\u6559\u7a0b\u4e86\u89e3\uff0c\u6bd4\u5982\uff1ahttps://www.liaoxuefeng.com/wiki/896043488029600 \u3002\u4e00\u822c\u7684\u63d0\u4ea4\u6d41\u7a0b\u662f\uff1a\u5148 fork \u5bf9\u5e94\u7684\u9879\u76ee\uff0c\u5728 fork \u9879\u76ee\u63d0\u4ea4\u4ee3\u7801\u540e\uff0c\u5411\u5f00\u6e90\u9879\u76ee\u53d1\u8d77\u4ee3\u7801\u5408\u5e76\u8bf7\u6c42\u7b49\u5f85\u5408\u5e76\u3002\\n\\n\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u4efb\u4f55\u4ee3\u7801\u63d0\u4ea4\u540e\uff0c\u90fd\u4e0d\u4f1a\u7acb\u523b\u5408\u5e76\uff0c\u9700\u8981\u5bfb\u627e\u793e\u533a\u7ef4\u62a4\u8005 Review \u540e\u624d\u4f1a\u8fdb\u5165\u4e3b\u5e72\u3002\\n\\n### \u7f16\u5199\u597d\u4ee3\u7801\u7684\u6ce8\u610f\u4e8b\u9879\\n\\n![img](http://p0.itc.cn/images01/20200714/7a66a58fb11448198086e1976887bfe3.png)\\n\\n\uff08\u56fe\u7247\u6765\u81ea\u7f51\u7edc\uff09\\n\\n\u4ee3\u7801\u4e0d\u662f\u5199\u5b8c\u5c31\u597d\uff0c\u8fd8\u9700\u8981\u5176\u4ed6\u4eba\u9605\u8bfb\u7684\u3002\u56e0\u6b64\uff0c\u5199\u51fa\u8d4f\u5fc3\u60a6\u76ee\u7684\u4ee3\u7801\u5f88\u503c\u5f97\u70b9\u8d5e\uff0c\u5f53\u7136\uff0c\u6c34\u5e73\u7684\u63d0\u5347\u603b\u662f\u6709\u4e00\u4e2a\u8fc7\u7a0b\uff0c\u56e0\u6b64\u4efb\u4f55\u5f00\u6e90\u9879\u76ee\u90fd\u662f\u9f13\u52b1\u5c1d\u8bd5\u4e0e\u63d0\u5347\u7684\u8fc7\u7a0b\u3002\u8fd9\u91cc\u5c31\u53ea\u8bf4\u51e0\u70b9\u66f4\u5bb9\u6613\u5f97\u5230\u793e\u533a\u6210\u5458\u5e2e\u52a9\u7684\u6ce8\u610f\u4e8b\u9879\uff1a\\n\\n1. \u5199\u5b8c\u4ee3\u7801\u63d0\u4ea4 PR \u540e\uff0c\u6ce8\u610f\u5728 PR \u63cf\u8ff0\u4e2d\u8865\u5145\u5b8c\u5584\u7684\u7f16\u7801\u601d\u8def\u548c\u80cc\u666f\u77e5\u8bc6\uff0c\u8fd9\u4f1a\u8ba9\u5176\u4ed6\u6210\u5458\u66f4\u5bb9\u6613\u4e86\u89e3\u4fee\u6539\u76ee\u6807\uff1b\\n2. \u6ce8\u610f\u63a7\u5236 PR \u7684\u5927\u5c0f\uff0c\u4e00\u4e2a\u5c0f\u7684 PR \u66f4\u5bb9\u6613\u8ba9\u5176\u4ed6\u4eba\u4e86\u89e3\u5168\u90e8\u4fee\u6539\u9879\uff0c\u5982\u679c\u6709\u4e00\u4e2a\u5927\u7684\u529f\u80fd\uff0c\u53ef\u4ee5\u6309\u7167\u6a21\u5757\u62c6\u6210\u51e0\u4e2a\u80fd\u5206\u522b\u8fd0\u884c\u7684 PR\uff1b\\n3. \u6ce8\u610f\u8865\u5145\u9002\u5f53\u7684\u5355\u5143\u6d4b\u8bd5\uff0c\u56e0\u4e3a Reviewer \u5e76\u4e0d\u8d1f\u8d23\u786e\u5b9a\u4ee3\u7801\u80fd\u8dd1\uff0c\u53ea\u8d1f\u8d23\u770b\u4ee3\u7801\u8bbe\u8ba1\u601d\u8def\u662f\u5426\u6b63\u786e\u3002\u56e0\u6b64\u589e\u52a0\u5408\u9002\u7684\u6d4b\u8bd5\uff0c\u80fd\u8ba9 Reviewer \u786e\u5b9a\u8fd9\u6bb5\u4ee3\u7801\u662f\u53ef\u4ee5\u8fd0\u884c\u7684\u3002\u6709\u65f6 Reviewer \u4e5f\u4f1a\u9488\u5bf9\u5bb9\u6613\u51fa\u9519\u7684\u5730\u65b9\u63d0\u51fa\u8865\u5145\u6d4b\u8bd5\u7684\u5efa\u8bae\u3002\\n\\n![img](http://p2.itc.cn/images01/20200714/29be57703b6c408588a9efec2e5fcb76.png)\\n\\n\uff08\u56fe\u7247\u6765\u81ea\u7f51\u7edc\uff0c\u8d85\u5927\u7684\u63d0\u4ea4\u4f1a\u8ba9 Reviewer \u6b32\u4ed9\u6b32\u6b7b\u7684 \ud83d\ude39\uff09\\n\\n### Code Review \u5e38\u89c1\u672f\u8bed\\n\\n\u5728\u63d0\u4ea4\u4ee3\u7801\u4e0eCode Review\u7684\u8fc7\u7a0b\u4e2d\uff0c\u6709\u65f6\u4f1a\u9047\u5230\u4e0b\u9762\u8fd9\u4e9b\u7f29\u5199\uff0c\u4e86\u89e3\u540e\u53c2\u4e0e\u5f00\u6e90\u793e\u533a\u66f4\u8f7b\u677e\u3002\\n\\n| \u7f29\u5199      | \u5168\u79f0                      | \u4f7f\u7528\u573a\u666f                                                     |\\n| --------- | ------------------------- | ------------------------------------------------------------ |\\n| -         | I\'ll take it.             | \u8868\u793a\u4f1a\u5c1d\u8bd5\u505a\u8fd9\u4e2a\u4efb\u52a1                                         |\\n| PR/MR/CR  | Pull/Merge/Change Request | \u5982\u679c\u8981\u63d0\u4ea4\u4ee3\u7801\u7ed9\u5f00\u6e90\u9879\u76ee\uff0c\u5c31\u4f1a\u53d1\u8d77\u4e00\u4e2a\u5408\u5e76\u8bf7\u6c42\uff0c\u5728\u4e0d\u540c\u5e73\u53f0\u6709\u4e0d\u540c\u7684\u540d\u5b57\uff0c\u4f46\u90fd\u662f\u540c\u4e00\u4e2a\u4e1c\u897f |\\n| WIP       | Work In Progress          | \u8868\u793aPR\u5c1a\u672a\u5b8c\u6210\uff0c\u6682\u65f6\u8fd8\u4e0d\u9700\u8981review                           |\\n| PTAL      | Please Take A Look        | \u8bf7\u6c42\u9879\u76ee\u7ef4\u62a4\u4eba\u5458\u8fdb\u884c code review                             |\\n| TBD       | To Be Done                | \u63d0\u793a\u6709\u4e00\u4e2a\u4e8b\u60c5\u9700\u8981\u5b8c\u6210                                       |\\n| TL;DR     | Too Long; Didn\'t Read     | \u592a\u957f\u4e86\uff0c\u61d2\u5f97\u770b\u3002\u4e5f\u6709\u65f6\u5728\u6587\u6863\u4e2d\u7528\u4f5c\u6982\u89c8\u4fe1\u606f\u7684\u6807\u9898             |\\n| LGTM/SGTM | Looks/Sounds Good To Me   | \u8868\u793areview\u5b8c\u5e76\u89c9\u5f97\u53ef\u4ee5\u5408\u5e76\u4e86\uff0c\u5373Approve\u7684\u610f\u601d                |\\n| CC to     | Carbon Copy to            | \u6284\u9001\u7ed9                                                       |\\n\\n\u987a\u4fbf\u518d\u8bf4\u51e0\u4e2a GitHub \u4e2d\u5b9e\u7528\u7684\u5c0f\u6280\u5de7\uff1a\\n\\n1. \u5982\u679c\u4f60\u7684 PR \u89e3\u51b3\u4e86\u67d0\u4e2a issue\uff0c\u53ef\u4ee5\u5728\u63cf\u8ff0\u4e2d\u52a0\u4e0a close #1234\uff0c1234\u9700\u8981\u6539\u6210\u5bf9\u5e94\u7684issue\u53f7\uff0c\u5728 PR \u5408\u5e76\u65f6\u8be5issue\u4e5f\u4f1a\u540c\u65f6\u5173\u95ed\uff08[\u66f4\u591a\u4fe1\u606f](https://docs.github.com/en/issues/tracking-your-work-with-issues/linking-a-pull-request-to-an-issue#linking-a-pull-request-to-an-issue-using-a-keyword#linking-a-pull-request-to-an-issue-using-a-keyword)\uff09\\n    ![image-20220710215354120](https://user-images.githubusercontent.com/3294100/178149926-f4f647e4-3765-47be-8b3a-9b19381294dd.png)\\n2. GitHub \u7684 Markdown \u7f16\u8f91\u5668\u53ef\u4ee5\u5c06\u9ed8\u8ba4\u5b57\u4f53\u8bbe\u7f6e\u4e3a\u7b49\u5bbd\u5b57\u4f53\uff0c\u4fbf\u4e8e\u4ee3\u7801\u7684\u4e66\u5199\uff0c\u5177\u4f53\u8bbe\u7f6e\u4e3a\uff1a **Settings** -  **Appearance** - **Use a fixed-width (monospace) font when editing Markdown**. \uff08[\u66f4\u591a\u4fe1\u606f](https://docs.github.com/en/get-started/writing-on-github/getting-started-with-writing-and-formatting-on-github/about-writing-and-formatting-on-github)\uff09\\n    ![Screenshot showing the GitHub comment field with fixed width fonts enabled](https://docs.github.com/assets/cb-14573/images/help/writing/enable-fixed-width.png)\\n3. \u5f53\u53d1\u73b0\u4e00\u4e2a issue \u548c\u5176\u4ed6 issue \u91cd\u590d\u65f6\uff0c\u53ef\u4ee5\u8bbe\u7f6e\u5728\u8bc4\u8bba\u533a\u7559\u4e0b Duplicate of #1234 \u6765\u6807\u8bb0\u4e0e\u67d0\u4e2aissue\u91cd\u590d\uff08[\u66f4\u591a\u4fe1\u606f](https://docs.github.com/en/issues/tracking-your-work-with-issues/marking-issues-or-pull-requests-as-a-duplicate)\uff09\\n    ![Duplicate issue syntax](https://docs.github.com/assets/cb-29676/images/help/issues/duplicate-issue-syntax.png)\\n\\n## \u7ed3\u8bed\\n\\n\u597d\u5566\uff0c\u5927\u4f53\u7684\u60c5\u51b5\u5e94\u8be5\u4ecb\u7ecd\u7684\u5dee\u4e0d\u591a\u4e86\uff0c\u5176\u5b9e\u53c2\u4e0e\u5f00\u6e90\u9879\u76ee\u5e76\u6ca1\u6709\u60f3\u8c61\u4e2d\u7684\u96be\uff0c\u6210\u4e3a\u4e00\u4e2a\u5f00\u6e90\u9879\u76ee\u7684Commiter\uff0c\u7ed9\u804c\u573a\u548c\u6280\u672f\u5b9e\u529b\u5e26\u6765\u7684\u52a9\u529b\u5c06\u4e0d\u53ef\u4f30\u91cf\u3002\u53e6\u5916\uff0c\u5982\u679c\u4f60\u8fd8\u662f\u8f83\u4e3a\u521d\u7ea7\u7684\u5f00\u53d1\u8005\uff0c\u8feb\u5207\u7684\u60f3\u8981\u77e5\u9053\u5177\u4f53\u7684\u53c2\u4e0e\u6b65\u9aa4\uff0c\u53ef\u4ee5\u770b\u770b\u5f00\u5934\u63d0\u5230\u7684\u8fd9\u7bc7\u6587\u7ae0\uff0c[\u5982\u4f55\u53c2\u4e0e\u5f00\u6e90\u9879\u76ee - \u7ec6\u8bf4 GitHub \u4e0a\u7684 PR \u5168\u8fc7\u7a0b](https://mp.weixin.qq.com/s/b1mKPgOm1mnwsBbEBDRvKw)\u3002\\n\\n\u6211\u4eec\u7684 DevLake (https://github.com/apache/incubator-devlake)  \u548c DevStream (https://github.com/devstream-io/devstream) \u4e5f\u662f\u4f18\u79c0\u7684\u5f00\u6e90\u9879\u76ee\uff0c\u6b22\u8fce\u4f60\u7684\u53c2\u4e0e\u54e6~"},{"id":"compatibility-of-apache-devLake-with-postgreSQL","metadata":{"permalink":"/blog/compatibility-of-apache-devLake-with-postgreSQL","editUrl":"https://github.com/apache/incubator-devlake-website/edit/main/blog/2022-06-23-compatibility-of-apache-devLake-with-postgreSQL/index.md","source":"@site/blog/2022-06-23-compatibility-of-apache-devLake-with-postgreSQL/index.md","title":"Compatibility of Apache DevLake with PostgreSQL","description":"Apache DevLake is a dev data platform that can collect and integrate data from different dev tools including Jira, Github, Gitlab and Jenkins.","date":"2022-06-23T00:00:00.000Z","formattedDate":"June 23, 2022","tags":[{"label":"devlake","permalink":"/blog/tags/devlake"},{"label":"database","permalink":"/blog/tags/database"},{"label":"postgresql","permalink":"/blog/tags/postgresql"}],"readingTime":2.5833333333333335,"hasTruncateMarker":false,"authors":[{"name":"Geyu Chen","title":"Apache DevLake Contributor","url":"https://github.com/fredtheflat","imageURL":"https://github.com/fredtheflat.png","key":"Geyu"}],"frontMatter":{"slug":"compatibility-of-apache-devLake-with-postgreSQL","title":"Compatibility of Apache DevLake with PostgreSQL","authors":"Geyu","tags":["devlake","database","postgresql"]},"prevItem":{"title":"\u62e5\u62b1\u5f00\u6e90\u6307\u5357","permalink":"/blog/2022/07/15/welcome-open-source"},"nextItem":{"title":"refdiff\u63d2\u4ef6\u7684\u8ba1\u7b97\u63d0\u4ea4\u7248\u672c\u5dee\u5f02\u7b97\u6cd5","permalink":"/blog/refdiff-calculate-commits-diff"}},"content":"Apache DevLake is a dev data platform that can collect and integrate data from different dev tools including Jira, Github, Gitlab and Jenkins.\\n\\nThis blog will not aim at a comprehensive summary of the compatibility of database but a record of issues for future reference.\\n\\n## 1.Different  Data Types\\n### PostgreSQL does not have a uint type\\n```sql=\\ntype JenkinsBuild struct {\\n common.NoPKModel\\n JobName           string  `gorm:\\"primaryKey;type:varchar(255)\\"`\\n Duration          float64 // build time\\n DisplayName       string  // \\"#7\\"\\n EstimatedDuration float64\\n Number            int64 `gorm:\\"primaryKey;type:INT(10) UNSIGNED NOT NULL\\"`\\n Result            string\\n Timestamp         int64     // start time\\n StartTime         time.Time // convered by timestamp\\n CommitSha         string\\n}\\n```\\n\\nIn `JenkinsBuild.Number`, the`gorm`struct tag used `UNSIGNED`, which will lead to the failure to create table and should be removed.\\n\\n![](https://i.imgur.com/N7E9Vwd.png)\\n\\n\\n### MySQL does not have a bool data type\\n\\nFor a field defined as bool type in model, gorm will map it to MySQL\'s TINYINT data type, which can be queried directly with 0 or 1 in SQL, but PostgreSQL has a bool type, so gorm will map it to the BOOL type. If 0 or 1 is still used in SQL to query, there will be a report of error.\\n\\nHere is an example(only relevant fields are shown in the example). The lookup statement works in MySQL, but will lead to an error in PostgreSQL.\\n\\n```sql=\\ntype GitlabMergeRequestNote struct {\\n MergeRequestId  int    `gorm:\\"index\\"`\\n System          bool \\n}\\n \\ndb.Where(\\"merge_request_id = ? AND `system` = 0\\", gitlabMr.GitlabId).\\n```\\n\\nAfter changing the sentence as it follows, an error will still be reported. The reason will be shown in the part about backticks.\\n\\n```sql=\\ndb.Where(\\"merge_request_id = ? AND `system` = ?\\", gitlabMr.GitlabId, false)\\n```\\n\\n## 2.Different Behaviors\\n\\n### Bulk insertion\\nWhen `ON CONFLIT UPDATE ALL` was used to achieve bulk insertion, and if there are multiple records with the same primary key, it will report errors in PostgreSQL but not in MySQL.\\n![](https://i.imgur.com/zaExAUG.png)\\n\\n![](https://i.imgur.com/BpZY8dN.png)\\n\\n### Inconsistent definition of model with schema\\nFor example, in the model definition, `GithubPullRequest.AuthorId` is of the int type, but this field in the database is of VARCHAR type. When inserting data, MySQL will accept it, but ProstgresSQL will report an error.\\n```sql=\\ntype GithubPullRequest struct {\\n GithubId        int    `gorm:\\"primaryKey\\"`\\n RepoId          int    `gorm:\\"index\\"`\\n Number          int    `gorm:\\"index\\"` \\n State           string `gorm:\\"type:varchar(255)\\"`\\n Title           string `gorm:\\"type:varchar(255)\\"`\\n GithubCreatedAt time.Time\\n GithubUpdatedAt time.Time `gorm:\\"index\\"`\\n ClosedAt        *time.Time\\n // In order to get the following fields, we need to collect PRs individually from GitHub\\n Additions      int\\n Deletions      int\\n Comments       int\\n Commits        int\\n ReviewComments int\\n Merged         bool\\n MergedAt       *time.Time\\n Body           string\\n Type           string `gorm:\\"type:varchar(255)\\"`\\n Component      string `gorm:\\"type:varchar(255)\\"`\\n MergeCommitSha string `gorm:\\"type:varchar(40)\\"`\\n HeadRef        string `gorm:\\"type:varchar(255)\\"`\\n BaseRef        string `gorm:\\"type:varchar(255)\\"`\\n BaseCommitSha  string `gorm:\\"type:varchar(255)\\"`\\n HeadCommitSha  string `gorm:\\"type:varchar(255)\\"`\\n Url            string `gorm:\\"type:varchar(255)\\"`\\n AuthorName     string `gorm:\\"type:varchar(100)\\"`\\n AuthorId       int\\n common.NoPKModel\\n}\\n```\\n![](https://i.imgur.com/onxGG8d.png)\\n\\n## 3.MySQL-Specific Functions\\n\\nWe used the `GROUP_CONCAT`function in a complex query. Although there are similar functions in PostgreSQL, the function names are different and the usage is slightly different.\\n\\n```sql=\\ncursor2, err := db.Table(\\"pull_requests pr1\\").\\n  Joins(\\"left join pull_requests pr2 on pr1.parent_pr_id = pr2.id\\").Group(\\"pr1.parent_pr_id, pr2.created_date\\").Where(\\"pr1.parent_pr_id != \'\'\\").\\n  Joins(\\"left join repos on pr2.base_repo_id = repos.id\\").\\n  Order(\\"pr2.created_date ASC\\").\\n  Select(`pr2.key as parent_pr_key, pr1.parent_pr_id as parent_pr_id, GROUP_CONCAT(pr1.base_ref order by pr1.base_ref ASC) as cherrypick_base_branches, \\n   GROUP_CONCAT(pr1.key order by pr1.base_ref ASC) as cherrypick_pr_keys, repos.name as repo_name, \\n   concat(repos.url, \'/pull/\', pr2.key) as parent_pr_url`).Rows()\\n```\\n\\nSolution:\\nWe finally decided to use two steps to achieve the `GROUP_CONCAT` function. First we used the simplest SQL query to get multiple pieces of the sorted data, and then used the code to group them.\\n\\nAfter modification:\\n```sql=\\n    cursor2, err := db.Raw(\\n  `\\n   SELECT pr2.pull_request_key                 AS parent_pr_key,\\n          pr1.parent_pr_id                     AS parent_pr_id,\\n          pr1.base_ref                         AS cherrypick_base_branch,\\n          pr1.pull_request_key                 AS cherrypick_pr_key,\\n          repos.NAME                           AS repo_name,\\n          Concat(repos.url, \'/pull/\', pr2.pull_request_key) AS parent_pr_url,\\n        pr2.created_date\\n   FROM   pull_requests pr1\\n          LEFT JOIN pull_requests pr2\\n                 ON pr1.parent_pr_id = pr2.id\\n          LEFT JOIN repos\\n                 ON pr2.base_repo_id = repos.id\\n   WHERE  pr1.parent_pr_id != \'\'\\n   ORDER  BY pr1.parent_pr_id,\\n             pr2.created_date,\\n       pr1.base_ref ASC\\n   `).Rows()\\n```\\n\\n## 4.Different Grammar\\n### Backticks\\nWe used backticks in some SQL statements to protect field names from conflicting with MySQL reserved words, which can lead to errors in PostgreSQL. To solve this problem we revisited our code, modified all field names that conflict with reserved words, and removed the backticks in the SQL statement. In the example just mentioned:\\n\\n```sql=\\ndb.Where(\\"merge_request_id = ? AND `system` = ?\\", gitlabMr.GitlabId, false)\\n```\\n\\nSolution:\\nWe changed `system` to `is_system` to avoid the usage of backticks.\\n```sql=\\ndb.Where(\\"merge_request_id = ? AND is_system = ?\\", gitlabMr.GitlabId, false)\\n```\\n\\n### Non-standard delete statement\\nThere were delete statements as followed in our code, which are legal in MySQL but will report an error in PostgreSQL.\\n```sql=\\nerr := db.Exec(`\\n DELETE ic\\n FROM jira_issue_commits ic\\n LEFT JOIN jira_board_issues bi ON (bi.source_id = ic.source_id AND bi.issue_id = ic.issue_id)\\n WHERE ic.source_id = ? AND bi.board_id = ?\\n `, sourceId, boardId).Error\\n```"},{"id":"refdiff-calculate-commits-diff","metadata":{"permalink":"/blog/refdiff-calculate-commits-diff","editUrl":"https://github.com/apache/incubator-devlake-website/edit/main/blog/2022-06-22-refdiff\u63d2\u4ef6\u7684\u8ba1\u7b97\u63d0\u4ea4\u7248\u672c\u5dee\u5f02\u7b97\u6cd5/index.md","source":"@site/blog/2022-06-22-refdiff\u63d2\u4ef6\u7684\u8ba1\u7b97\u63d0\u4ea4\u7248\u672c\u5dee\u5f02\u7b97\u6cd5/index.md","title":"refdiff\u63d2\u4ef6\u7684\u8ba1\u7b97\u63d0\u4ea4\u7248\u672c\u5dee\u5f02\u7b97\u6cd5","description":"\u672c\u6587\u4f5c\u8005\uff1aNddtfjiang","date":"2022-06-22T00:00:00.000Z","formattedDate":"June 22, 2022","tags":[{"label":"devlake","permalink":"/blog/tags/devlake"},{"label":"refdiff","permalink":"/blog/tags/refdiff"},{"label":"algorithm","permalink":"/blog/tags/algorithm"},{"label":"graph","permalink":"/blog/tags/graph"}],"readingTime":18.34,"hasTruncateMarker":false,"authors":[{"name":"Nddtfjiang","title":"Apache DevLake Committer","url":"http://nddtf.com/github","imageURL":"http://nddtf.com/github/png.html","key":"Nddtfjiang"}],"frontMatter":{"slug":"refdiff-calculate-commits-diff","title":"refdiff\u63d2\u4ef6\u7684\u8ba1\u7b97\u63d0\u4ea4\u7248\u672c\u5dee\u5f02\u7b97\u6cd5","authors":"Nddtfjiang","tags":["devlake","refdiff","algorithm","graph"]},"prevItem":{"title":"Compatibility of Apache DevLake with PostgreSQL","permalink":"/blog/compatibility-of-apache-devLake-with-postgreSQL"},"nextItem":{"title":"Apache DevLake \u517c\u5bb9 PostgreSQL \u8e29\u5751\u5c0f\u7ed3","permalink":"/blog/some-practices-of-supporting-postgresql"}},"content":"\u672c\u6587\u4f5c\u8005\uff1aNddtfjiang\\n\u4e2a\u4eba\u4e3b\u9875\uff1ahttps://nddtf.com/github\\n\\n## \u4ec0\u4e48\u662f `\u8ba1\u7b97\u63d0\u4ea4\u7248\u672c\u5dee\u5f02`\uff08CalculateCommitsDiff\uff09\uff1f\\n\u6211\u4eec\u5e38\u5e38\u9700\u8981\u8ba1\u7b97\u4e24\u4e2a`\u63d0\u4ea4\u7248\u672c`\u4e4b\u95f4\u7684\u5dee\u5f02\u3002\u5177\u4f53\u7684\u8bf4\uff0c\u5c31\u662f\u9700\u8981\u77e5\u9053\u4e24\u4e2a\u4e0d\u540c\u7684`\u5206\u652f/\u6807\u7b7e`\u4e4b\u95f4\u76f8\u5dee\u4e86\u54ea\u4e9b`\u63d0\u4ea4\u7248\u672c`\u3002\\n\\n\u5bf9\u4e8e\u4e00\u822c\u7528\u6237\u6765\u8bf4\uff0c\u901a\u8fc7`\u8ba1\u7b97\u63d0\u4ea4\u7248\u672c\u5dee\u5f02`\uff0c\u7528\u6237\u80fd\u8fc5\u901f\u7684\u5224\u65ad\u4e24\u4e2a\u4e0d\u540c\u7684`\u5206\u652f/\u6807\u7b7e`\u4e4b\u95f4\u5728\u529f\u80fd\u3001BUG \u4fee\u590d\u7b49\u7b49\u65b9\u9762\u7684\u533a\u522b\u3002\u4ee5\u5e2e\u52a9\u7528\u6237\u9009\u62e9\u4e0d\u540c\u7684`\u5206\u652f/\u6807\u7b7e`\u6765\u4f7f\u7528\u3002\\n\\n\u800c\u5982\u679c\u53ea\u662f\u4f7f\u7528 `diff` \u547d\u4ee4\u6765\u67e5\u770b\u8fd9\u4e24\u4e2a\u4e0d\u540c\u7684`\u5206\u652f/\u6807\u7b7e`\u7684\u8bdd\uff0c\u5927\u91cf\u5e9e\u6742\u5197\u4f59\u7684\u4ee3\u7801\u4fee\u6539\u4fe1\u606f\u5c31\u4f1a\u6beb\u65e0\u7ec4\u7ec7\u7684\u6df7\u6742\u5728\u5176\u4e2d\uff0c\u8981\u4ece\u4e2d\u63d0\u53d6\u51fa\u5177\u4f53\u7684\u529f\u80fd\u53d8\u66f4\u4e4b\u7c7b\u7684\u4fe1\u606f\uff0c\u7b49\u540c\u4e8e\u5927\u6d77\u635e\u9488\u3002\\n\\n\u5bf9\u4e8e\u4e00\u6b3e\u81f4\u529b\u4e8e\u63d0\u5347\u7814\u53d1\u6548\u80fd\u7684\u4ea7\u54c1\u6765\u8bf4\uff0c\u901a\u8fc7`\u8ba1\u7b97\u63d0\u4ea4\u7248\u672c\u5dee\u5f02`\uff0c\u5c31\u80fd\u67e5\u770b\u4e00\u7ec4\u7ec4\u4e0d\u540c\u7684`\u5206\u652f/\u6807\u7b7e`\u7684\u53d8\u8fc1\u72b6\u51b5\uff0c\u8fd9\u4e00\u6570\u636e\u7684\u83b7\u53d6\uff0c\u6709\u52a9\u4e8e\u6211\u4eec\u505a\u8fdb\u4e00\u6b65\u7684\u6548\u80fd\u5206\u6790\u3002\\n\\n\u4f8b\u5982\uff0c\u5f53\u4e00\u4e2a\u9879\u76ee\u7684\u7ba1\u7406\u8005\uff0c\u60f3\u8981\u770b\u770b\u4e3a\u4ec0\u4e48\u6700\u8fd1\u7684\u51e0\u4e2a\u7248\u672c\u53d1\u7248\u8d8a\u6765\u8d8a\u6162\u4e86\u7684\u65f6\u5019\u3002\u5c31\u53ef\u4ee5\u5bf9\u6700\u8fd1\u7684\u51e0\u7ec4`\u5206\u652f/\u6807\u7b7e`\u6765\u8ba1\u7b97`\u8ba1\u7b97\u63d0\u4ea4\u7248\u672c\u5dee\u5f02`\u3002\u6b64\u65f6\u6709\u4e9b`\u5206\u652f/\u6807\u7b7e`\u7ec4\u4e4b\u95f4\u6709\u7740\u5927\u91cf\u7684`\u63d0\u4ea4\u7248\u672c`\uff0c\u800c\u6709\u4e9b`\u5206\u652f/\u6807\u7b7e`\u7ec4\u4e4b\u95f4\u6709\u7740\u8f83\u5c11\u7684\u63d0\u4ea4\u7248\u672c\u3002\u9879\u76ee\u7ba1\u7406\u8005\u53ef\u4ee5\u66f4\u8fdb\u4e00\u6b65\u7684\u8ba1\u7b97\u8fd9\u4e9b\u63d0\u4ea4\u7248\u672c\u5404\u81ea\u7684\u4ee3\u7801\u5f53\u91cf\uff0c\u628a\u8fd9\u4e9b\u6570\u636e\u4ee5\u56fe\u8868\u7684\u5f62\u5f0f\u5c55\u793a\u51fa\u6765\uff0c\u6700\u7ec8\u5f97\u5230\u4e00\u7ec4\u5f88\u76f4\u89c2\u7684`\u5206\u652f/\u6807\u7b7e`\u7684\u56fe\u50cf\u3002\u6b64\u65f6\u4ed6\u6216\u8bb8\u5c31\u80fd\u53d1\u73b0\uff0c\u539f\u6765\u662f\u56e0\u4e3a\u6700\u8fd1\u7684\u51e0\u6b21\u53d1\u7248\u6d89\u53ca\u5230\u7684\u53d8\u66f4\u8d8a\u6765\u8d8a\u590d\u6742\u4e86\u3002\u901a\u8fc7\u8fd9\u6837\u7684\u76f4\u89c2\u7684\u4fe1\u606f\uff0c\u5f00\u53d1\u8005\u548c\u7ba1\u7406\u8005\u4eec\u90fd\u80fd\u505a\u51fa\u76f8\u5e94\u7684\u8c03\u6574\uff0c\u4ee5\u4fbf\u63d0\u5347\u7814\u53d1\u6548\u80fd\u3002\\n\\n![](\u9762\u677f\u56fe\u7247.png)\\n\\n## \u5df2\u6709\u7684\u89e3\u51b3\u65b9\u6848\\n\\n\u5f53\u6211\u4eec\u5728 `GitLab` \u4e0a\u6253\u5f00\u4e00\u4e2a\u4ee3\u7801\u4ed3\u5e93\u7684\u65f6\u5019\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5728 url \u672b\u5c3e\u8ffd\u52a0 compare \u7684\u65b9\u5f0f\u6765\u8fdb\u5165\u5230\u4ed3\u5e93\u7684\u6bd4\u5bf9\u9875\u9762\u3002\\n\\n![](\u6dfb\u52a0Compare.png)\\n\\n![](\u6e90\u5206\u652f-\u76ee\u6807\u5206\u652f.png)\\n\\n\u5728\u8be5\u9875\u9762\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u8bbe\u7f6e`\u6e90\u5206\u652f/\u6807\u7b7e` \u548c`\u76ee\u6807\u5206\u652f/\u6807\u7b7e`\u8ba9 `GitLab` \u5411\u6211\u4eec\u5c55\u793a \u76ee\u6807\u5206\u652f\u843d\u540e\u4e8e\u6e90\u5206\u652f\u54ea\u4e9b\u7248\u672c\uff0c\u4ee5\u53ca\u843d\u540e\u4e86\u591a\u5c11\u4e2a\u7248\u672c\u3002\\n\\n\u8bbe\u7f6e\u5b8c\u6bd5\u540e\uff0c`GitLab` \u4f1a\u5c55\u793a\u5982\u4e0b\uff1a\\n\\n![](\u7248\u672c\u5bf9\u6bd4.png)\\n\\n\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u80fd\u770b\u5230\u6211\u4eec\u9009\u62e9\u7684`\u76ee\u6807\u5206\u652f/\u6807\u7b7e`\u6bd4`\u6e90\u5206\u652f/\u6807\u7b7e`\u5c11\u4e86\u5982\u56fe\u6240\u793a\u7684`\u63d0\u4ea4\u7248\u672c`\uff08Commits\uff09\\n\\n\u7136\u800c\u9057\u61be\u7684\u662f\uff0c\u50cf `GitLab` \u8fd9\u7c7b\u89e3\u51b3\u65b9\u6848\uff0c\u90fd\u6ca1\u6709\u505a\u6279\u91cf\u5316\uff0c\u81ea\u52a8\u5316\u7684\u5904\u7406\u3002\u4e5f\u66f4\u6ca1\u6709\u5bf9\u540e\u7eed\u7684\u8ba1\u7b97\u51fa\u6765\u7684\u7ed3\u679c\u8fdb\u884c\u76f8\u5e94\u7684\u6570\u636e\u6c47\u603b\u5904\u7406\u3002\u7528\u6237\u9762\u5bf9\u6d77\u91cf\u7684\u5206\u652f\u63d0\u4ea4\u7684\u65f6\u5019\uff0c\u65e2\u4e0d\u53ef\u80fd\u624b\u52a8\u7684\u4e00\u4e2a\u4e00\u4e2a\u53bb\u6bd4\u8f83\uff0c\u4e5f\u4e0d\u53ef\u80fd\u624b\u52a8\u7684\u53bb\u628a\u6570\u636e\u7ed3\u679c\u81ea\u5df1\u590d\u5236\u7c98\u8d34\u540e\u518d\u5206\u6790\u3002\\n\\n\u56e0\u6b64 `DevLake` \u5c31\u5fc5\u987b\u8981\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\\n\\n## \u6240\u8c13\u7684`\u8ba1\u7b97\u63d0\u4ea4\u7248\u672c\u5dee\u5f02`\u5177\u4f53\u662f\u5728\u8ba1\u7b97\u4ec0\u4e48\uff1f\\n\\n\u4ee5 `GitLab` \u7684\u8ba1\u7b97\u8fc7\u7a0b\u4e3a\u4f8b\u6765\u8bf4\u7684\u8bdd\uff0c\u6240\u8c13\u7684`\u8ba1\u7b97\u63d0\u4ea4\u7248\u672c\u5dee\u5f02`\u4e5f\u5c31\u662f\u5f53\u4e00\u4e2a`\u63d0\u4ea4\u7248\u672c`\u5728`\u6e90\u5206\u652f/\u6807\u7b7e`\u4e2d`\u5b58\u5728`\uff0c\u4f46\u662f\u5728`\u76ee\u6807\u5206\u652f/\u6807\u7b7e`\u4e2d**\u4e0d\u5b58\u5728**\u7684\u65f6\u5019\uff0c\u8fd9\u4e2a\u63d0\u4ea4\u7248\u672c\u5c31\u4f1a\u88ab `GitLab` \u7ed9\u902e\u51fa\u6765\u3002\\n\\n\\n\u90a3\u4e48\uff0c\u6216\u8bb8\u6709\u4eba\u4f1a\u95ee\uff0c\u5047\u5982\u4e00\u4e2a`\u63d0\u4ea4\u7248\u672c`\u5728`\u6e90\u5206\u652f/\u6807\u7b7e`\u4e2d**\u4e0d\u5b58\u5728**\uff0c\u76f8\u53cd\u7684\uff0c\u5728`\u76ee\u6807\u5206\u652f/\u6807\u7b7e`\u4e2d`\u5b58\u5728`\uff0c\u90a3\u662f\u4e0d\u662f\u4e5f\u4f1a\u88ab\u6293\u8d77\u6765\u5462\uff1f\\n\\n\u7b54\u6848\u662f\uff0c**\u4e0d\u4f1a**\u3002\\n\\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u5f53\u6211\u4eec\u8ba1\u7b97`\u63d0\u4ea4\u7248\u672c`\u7684\u5dee\u5f02\u7684\u65f6\u5019\uff0c\u6211\u4eec\u53ea\u5173\u5fc3`\u76ee\u6807\u5206\u652f/\u6807\u7b7e`\u7f3a\u5c11\u4e86\u4ec0\u4e48\uff0c\u800c\u5e76\u4e0d\u5173\u5fc3`\u76ee\u6807\u5206\u652f/\u6807\u7b7e`\u591a\u51fa\u6765\u4e86\u4ec0\u4e48\u4e1c\u897f\u3002\\n\\n\u8fd9\u5c31\u597d\u50cf\u4ee5\u524d\u6709\u4e00\u4f4d\u7b97\u6cd5\u7ade\u8d5b\u7684\u5b66\u751f\uff0c\u5728 NOI \u6bd4\u8d5b\u7ed3\u675f\u540e\u88ab\u76f8\u5173\u5b66\u6821\u9762\u8bd5\u7684\u65f6\u5019\uff0c\u4e00\u4e2a\u52b2\u7684\u81ea\u6211\u4ecb\u7ecd\u81ea\u5df1\u62c5\u4efb\u8fc7\u4ec0\u4e48\u5e7f\u64ad\u7ad9\u9752\u534f\u5b66\u751f\u4f1a\uff0c\u4ec0\u4e48\u4f1a\u957f\u526f\u4f1a\u957f\u4e4b\u7c7b\u7684\u7ecf\u5386\u3002\u7ed3\u679c\u5f88\u5feb\u5c31\u60f9\u5f97\u9762\u8bd5\u5b98\u8001\u5e08\u4eec\u5fcd\u65e0\u53ef\u5fcd\u7684\u544a\u8beb\u9053\uff1a\\n\\n> \u6211\u4eec\u53ea\u60f3\u77e5\u9053\u4f60\u4fe1\u606f\u5b66\u65b9\u9762\u7684\u81ea\u6211\u4ecb\u7ecd\uff0c\u5176\u4f59\u7684\u6211\u90fd\u4e0d\u611f\u5174\u8da3\uff01\uff01\uff01\\n\\n\u5728\u8ba1\u7b97`\u63d0\u4ea4\u7248\u672c`\u5dee\u5f02\u65f6\uff0c`GitLab` \u662f\u8fd9\u6837\u3002 `GitHub` \u4e5f\u662f\u8fd9\u6837\u3002\u4e8b\u5b9e\u4e0a\uff0c\u5728\u4f7f\u7528 git \u547d\u4ee4  `git log branch1...branch2`  \u7684\u65f6\u5019\uff0cgit \u4e5f\u662f\u8fd9\u6837\u7684\u3002\\n\\n\u5b83\u4eec\u90fd\u53ea\u5173\u5fc3`\u76ee\u6807\u5206\u652f/\u6807\u7b7e`\u76f8\u5bf9\u4e8e`\u6e90\u5206\u652f/\u6807\u7b7e`\u7f3a\u5c11\u7684\u90e8\u5206\u3002\\n\\n\u8ba1\u7b97`\u63d0\u4ea4\u7248\u672c`\u5dee\u5f02\u5b9e\u9645\u4e0a\u5c31\u662f\uff1a\\n\\n- \u8ba1\u7b97\u5f85\u8ba1\u7b97\u7684`\u76ee\u6807\u5206\u652f/\u6807\u7b7e`\u76f8\u5bf9\u4e8e`\u6e90\u5206\u652f/\u6807\u7b7e`\u7f3a\u5c11\u4e86\u54ea\u4e9b`\u63d0\u4ea4\u7248\u672c`\u3002\\n\\n## \u5bf9`\u63d0\u4ea4\u7248\u672c`\u8fdb\u884c\u6570\u5b66\u5efa\u6a21\\n\\n\u60f3\u8981\u505a\u8ba1\u7b97\uff0c\u90a3\u4e48\u9996\u5148\uff0c\u6211\u4eec\u9700\u8981\u628a\u4e00\u4e2a\u62bd\u8c61\u7684\u73b0\u5b9e\u95ee\u9898\uff0c\u8f6c\u6362\u6210\u4e00\u4e2a\u6570\u5b66\u95ee\u9898\u3002\\n\\n\u8fd9\u91cc\u6211\u4eec\u5c31\u9700\u8981\u8fdb\u884c\u6570\u5b66\u5efa\u6a21\u4e86\u3002\\n\\n\u6211\u4eec\u9700\u8981\u628a\u50cf`\u76ee\u6807\u5206\u652f/\u6807\u7b7e`\u3001`\u6e90\u5206\u652f/\u6807\u7b7e`\u3001`\u63d0\u4ea4\u7248\u672c` \u8fd9\u6837\u4e00\u7cfb\u5217\u7684\u6982\u5ff5\u53d8\u6210\u6570\u5b66\u6a21\u578b\u4e2d\u7684\u5bf9\u8c61\u3002\\n\\n\u5982\u6b64\u6211\u4eec\u624d\u80fd\u4e3a\u5176\u8bbe\u8ba1\u7b97\u6cd5\u3002\\n\\n\u60f3\u5f53\u7136\u7684\uff0c\u6211\u4eec\u5c31\u60f3\u5230\u4e86\u4f7f\u7528\u56fe\u7684\u65b9\u5f0f\u6765\u8fdb\u884c\u6570\u5b66\u5efa\u6a21\u3002\\n\\n\u6211\u4eec\u5c06\u6bcf\u4e00\u4e2a`\u63d0\u4ea4\u7248\u672c`\u90fd\u770b\u4f5c\u662f\u56fe\u4e0a\u7684\u4e00\u4e2a\u8282\u70b9\uff0c\u628a`\u63d0\u4ea4\u7248\u672c`\u5408\u5e76\u4e4b\u524d\u7684\u4e00\u7ec4`\u63d0\u4ea4\u7248\u672c`\u4e0e\u5f53\u524d`\u63d0\u4ea4\u7248\u672c`\u4e4b\u95f4\u7684\u7236\u5b50\u5173\u7cfb\uff0c\u770b\u4f5c\u6210\u662f\u4e00\u6761`\u6709\u5411\u8fb9`\u3002\\n\\n\u7531\u4e8e`\u76ee\u6807\u5206\u652f`\u548c`\u6e90\u5206\u652f`\u4e8b\u5b9e\u4e0a\u4e5f\u5404\u81ea\u4e0e\u4e00\u4e2a\u7279\u5b9a\u7684`\u63d0\u4ea4\u7248\u672c`\u76f8\u7ed1\u5b9a\uff0c\u56e0\u6b64\u4e5f\u80fd\u5c06\u5b83\u4eec\u770b\u4f5c\u662f\u56fe\u4e0a\u7684\u7279\u522b\u8282\u70b9\u3002\\n\\n- \u5c06`\u76ee\u6807\u5206\u652f/\u6807\u7b7e`\u6240\u5bf9\u5e94\u7684\u8282\u70b9\uff0c\u547d\u540d\u4e3a`\u65e7\u8282\u70b9`\\n- \u5c06`\u6e90\u5206\u652f/\u6807\u7b7e`\u6240\u5bf9\u5e94\u7684\u8282\u70b9\uff0c\u547d\u540d\u4e3a`\u65b0\u8282\u70b9`\\n\\n\u5f53\u7136\uff0c\u8fd9\u91cc\u6211\u4eec\u8fd8\u6709\u4e00\u4e2a\u9700\u8981\u7279\u522b\u5173\u6ce8\u7684\u8282\u70b9\uff0c\u5c31\u662f\u521d\u59cb\u7684`\u63d0\u4ea4\u7248\u672c`\u6240\u4ee3\u8868\u7684\u8282\u70b9\\n\\n- \u5c06\u521d\u59cb`\u63d0\u4ea4\u7248\u672c`\u6240\u5bf9\u5e94\u7684\u8282\u70b9\uff0c\u547d\u540d\u4e3a`\u6839\u8282\u70b9`\\n\\n\\n\u4e0a\u8ff0\u7684\u63cf\u8ff0\u6216\u8bb8\u663e\u5f97\u6709\u70b9\u513f\u62bd\u8c61\u3002\\n\\n\u6211\u4eec\u73b0\u5728\u6765\u5b9e\u9645\u4e3e\u4e00\u4e2a\u4f8b\u5b50\u3002\u6765\u770b\u770b\u5982\u4f55\u5bf9\u4e00\u4e2a\u4ed3\u5e93\u8fdb\u884c\u4e0a\u8ff0\u6570\u5b66\u5efa\u6a21\u3002\\n\\n\u5047\u8bbe\u73b0\u5728\u6709\u57fa\u4e8e\u5982\u4e0b\u63cf\u8ff0\u800c\u4ea7\u751f\u7684\u4e00\u4e2a\u4ed3\u5e93\uff1a\\n\\n1. \u521b\u5efa\u7a7a\u4ed3\u5e93\\n1. \u5728 `main` \u5206\u652f\u4e0a\u521b\u5efa`\u63d0\u4ea4\u7248\u672c` `1` \u4f5c\u4e3a\u521d\u59cb\u63d0\u4ea4\\n1. \u5728 `main` \u5206\u652f\u4e0a\u521b\u5efa`\u63d0\u4ea4\u7248\u672c` `2`\\n1. \u5728 `main` \u5206\u652f\u4e0a\u521b\u5efa\u65b0\u5206\u652f `nd`\\n1. \u5728 `nd` \u5206\u652f\u4e0a\u521b\u5efa`\u63d0\u4ea4\u7248\u672c` `3`\\n1. \u5728 `main` \u5206\u652f\u4e0a\u521b\u5efa`\u63d0\u4ea4\u7248\u672c` `4`\\n1. \u5728 `main` \u5206\u652f\u4e0a\u521b\u5efa\u65b0\u5206\u652f `dtf`\\n1. \u5728 `main` \u5206\u652f\u4e0a\u521b\u5efa`\u63d0\u4ea4\u7248\u672c` `5`\\n1. \u5728 `dtf` \u5206\u652f\u4e0a\u521b\u5efa`\u63d0\u4ea4\u7248\u672c` `6`\\n1. \u5728 `main` \u5206\u652f\u4e0a\u521b\u5efa\u65b0\u5206\u652f `nddtf`\\n1. \u5728 `nddtf` \u5206\u652f\u4e0a\u521b\u5efa`\u63d0\u4ea4\u7248\u672c` `7`\\n1. \u628a `nd` \u5206\u652f\u5408\u5e76\u5230 `nddtf`\u5206\u652f\\n1. \u628a `dtf` \u5206\u652f\u5408\u5e76\u5230 `nddtf`\u5206\u652f\\n1. \u5728 `main` \u5206\u652f\u4e0a\u521b\u5efa`\u63d0\u4ea4\u7248\u672c` `8`\\n1. \u5728 `nddtf` \u5206\u652f\u4e0a\u521b\u5efa`\u63d0\u4ea4\u7248\u672c` `9`\\n\\n\u6211\u4eec\u5bf9\u4e0a\u8ff0\u7684\u4ed3\u5e93\u8fdb\u884c\u6784\u56fe\u4e4b\u540e\uff0c\u6700\u7ec8\u4f1a\u5f97\u5230\u5982\u4e0b\u56fe\u6240\u793a\u7684\u4e00\u4e2a\u6709\u5411\u56fe\uff1a\\n\\n![](\u6570\u5b66\u6a21\u578b\u6784\u56fe.png)\\n\\n\\n- \u6b64\u65f6\u5f69\u8272\u8282\u70b9 `1` \u4e3a`\u6839\u8282\u70b9`\\n- `main` \u5206\u652f\u4e3a `1` `2` `4` `5` `8`\\n- `nd` \u5206\u652f\u4e3a `1` `2` `3` \u968f\u540e\u5408\u5e76\u5165 `nddtf` \u5206\u652f\\n- `dtf` \u5206\u652f\u4e3a `1` `2` `4` `6` \u968f\u540e\u5408\u5e76\u5165 `nddtf` \u5206\u652f\\n- `nddtf` \u5206\u652f\u4e3a `1` `2` `3` `4` `5` `6` `7` `9`\\n\\n\\n\u53ef\u4ee5\u770b\u5230\uff0c\u6bcf\u4e00\u4e2a`\u63d0\u4ea4\u7248\u672c`\u5728\u56fe\u4e2d\u90fd\u76f8\u5bf9\u5e94\u7684\u6709\u4e00\u4e2a\u8282\u70b9\\n\\n\u6b64\u65f6\u6211\u4eec\u628a`\u63d0\u4ea4\u7248\u672c` `1` \u6240\u4ee3\u8868\u7684\u8282\u70b9\uff0c\u4f5c\u4e3a`\u6839\u8282\u70b9`\\n\\n\u5f53\u7136\u8fd9\u91cc\u53ef\u80fd\u4f1a\u6709\u540c\u5b66\u63d0\u95ee\u4e86\uff1a\\n\\n- \u5047\u5982\u6211\u8fd9\u4e2a\u4ed3\u5e93\u6709**\u4e00\u4e07\u4e2a**`\u6839\u8282\u70b9`\u600e\u4e48\u7834\uff1f\\n\\n\u76f8\u4fe1\u4e00\u4e9b\u7ecf\u5e38\u505a\u56fe\u7684\u5efa\u6a21\u7684\u540c\u5b66\u5e94\u8be5\u90fd\u77e5\u9053\u7834\u6cd5\u3002\\n\\n- \u521b\u5efa\u4e00\u4e2a\u540d\u53eb\u4e3a`\u4e00\u4e07\u4e2a\u6839\u8282\u70b9`\u7684\u865a\u62df\u8282\u70b9\uff0c\u628a\u5b83\u8bbe\u4e3a\u8fd9\u4e9b\u4e2a\u865a\u5047\u7684`\u6839\u8282\u70b9`\u7684\u7236\u8282\u70b9\uff0c\u6765\u5f53\u4f5c\u771f\u6b63\u7684`\u6839\u8282\u70b9`\u5373\u53ef\u3002\\n\\n\u5728\u8fd9\u4e2a\u6709\u5411\u56fe\u4e2d\uff0c\u6211\u4eec\u5e76\u6ca1\u6709\u5b9e\u9645\u7684\u53bb\u6307\u5b9a\u5177\u4f53\u7684`\u76ee\u6807\u5206\u652f/\u6807\u7b7e`\u6216\u8005`\u6e90\u5206\u652f/\u6807\u7b7e`\\n\\n\u5728\u5b9e\u9645\u4f7f\u7528\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u4efb\u610f\u7684\u4e24\u4e2a`\u63d0\u4ea4\u7248\u672c`\u4f5c\u4e3a\u4e00\u5bf9`\u76ee\u6807\u5206\u652f/\u6807\u7b7e`\u548c`\u6e90\u5206\u652f/\u6807\u7b7e`\\n\u5f53\u7136\uff0c\u6709\u7684\u540c\u5b66\u5728\u8fd9\u91cc\u53ef\u80fd\u53c8\u4f1a\u4ea7\u751f\u4e00\u4e2a\u95ee\u9898\uff1a\\n\\n- `\u76ee\u6807\u5206\u652f/\u6807\u7b7e`\u548c`\u6e90\u5206\u652f/\u6807\u7b7e` \u867d\u7136\u90fd\u80fd\u6620\u5c04\u5230\u5176\u6700\u540e\u7684`\u63d0\u4ea4\u7248\u672c`\u4e0a\uff0c\u4f46\u662f\u5b9e\u9645\u4e0a\u6765\u8bf4`\u63d0\u4ea4\u7248\u672c`\u4e0e`\u5206\u652f/\u6807\u7b7e`\u672c\u8d28\u4e0a\u5c31\u662f\u4e24\u79cd\u4e0d\u540c\u7684\u6982\u5ff5\u3002\\n\\n`\u5206\u652f/\u6807\u7b7e`\u7684\u5b9e\u8d28\uff0c\u662f\u5305\u542b\u4e00\u7cfb\u5217\u7684`\u63d0\u4ea4\u7248\u672c`\u7684\u96c6\u5408\u3002\u800c\u7279\u5b9a\u7684`\u63d0\u4ea4\u7248\u672c`\u4ec5\u4ec5\u662f\u8fd9\u4e2a\u96c6\u5408\u4e2d\u7684\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u7f62\u4e86\u3002\\n\\n\u5f53\u6211\u4eec\u628a\u4e00\u4e2a\u4ed3\u5e93\u901a\u8fc7\u4e0a\u8ff0\u6570\u5b66\u5efa\u6a21\u62bd\u8c61\u6210\u4e00\u4e2a\u6709\u5411\u56fe\u4e4b\u540e\uff0c\u8fd9\u4e2a\u96c6\u5408\u7684\u4fe1\u606f\uff0c\u4f1a\u56e0\u6b64\u800c\u4e22\u5931\u6389\u5417\uff1f\\n\\n\u5bf9\u4e8e\u4e00\u4e2a\u5408\u6cd5\u7684\u4ed3\u5e93\u6765\u8bf4\uff0c\u7b54\u6848\u663e\u7136\u662f\uff0c`\u4e0d\u4f1a`\\n\\n\u5b9e\u9645\u4e0a\uff0c\u8fd9\u4e5f\u5c31\u662f\u4e3a\u4ec0\u4e48\u6211\u4eec\u4e00\u5b9a\u8981\u5728\u8be5\u6709\u5411\u56fe\u4e2d\u5f3a\u8c03`\u6839\u8282\u70b9`\u7684\u539f\u56e0\u3002\\n\\n\u6211\u4eec\u8fd9\u91cc\u8fd9\u91cc\uff0c\u5148\u7ed9\u51fa\u7ed3\u8bba\uff1a\\n\\n**`\u5206\u652f/\u6807\u7b7e`\u6240\u5bf9\u5e94\u7684\u8282\u70b9\uff0c\u5230`\u6839\u8282\u70b9`\u7684\u5168\u90e8\u8def\u5f84\u4e2d\u9014\u5f84\u7684`\u6240\u6709\u8282\u70b9`\u7684\u96c6\u5408\uff0c\u5373\u4e3a\u8be5`\u5206\u652f/\u6807\u7b7e`\u6240\u5305\u542b\u7684`\u63d0\u4ea4\u7248\u672c`\u96c6\u5408\u3002**\\n\\n## \u7b80\u5355\u8bc1\u660e \u4e0a\u8ff0\u7ed3\u8bba\\n- \u8bbe`\u6839\u8282\u70b9`\u4e3a\u8282\u70b9 `A`\\n- \u8bbe\u8981\u6c42\u7684`\u5206\u652f/\u6807\u7b7e`\u6240\u4ee3\u8868\u7684\u8282\u70b9\u4e3a\u8282\u70b9 `B`\\n\\n----------\\n\\n- \u5f53 \u8282\u70b9 `C` \u662f\u5c5e\u4e8e\u8981\u6c42\u7684`\u5206\u652f/\u6807\u7b7e`\\n- \u56e0\u4e3a \u8282\u70b9 `C` \u662f\u5c5e\u4e8e\u8981\u6c42\u7684`\u5206\u652f/\u6807\u7b7e`\\n- \u6240\u4ee5 \u5fc5\u7136\u5b58\u5728\u4e00\u7ec4\u63d0\u4ea4\u6216\u8005\u5408\u5e76 \u4f7f\u5f97 \u8282\u70b9 `C` \u53ef\u4ee5\u4e00\u76f4\u63d0\u4ea4\u5230\u8282\u70b9 `B`\\n- \u53c8\u56e0\u4e3a \u6bcf\u4e00\u4e2a\u65b0\u589e\u7684\u63d0\u4ea4 \u6216\u8005 \u5408\u5e76\u64cd\u4f5c\uff0c\u5747\u4f1a\u5207\u5b9e\u7684\u5efa\u7acb\u4e00\u6761\u4ece\u65b0\u589e\u7684\u63d0\u4ea4/\u5408\u5e76\u5230\u5f53\u524d\u63d0\u4ea4\u7684\u8fb9\\n- \u6240\u4ee5\uff0c\u53cd\u8fc7\u6765\u8bf4\uff0c\u6bcf\u4e00\u4e2a\u63d0\u4ea4\u6216\u8005\u5408\u5e76\u540e\u7684\u8282\u70b9\uff0c\u5747\u53ef\u4ee5\u62b5\u8fbe\u8282\u70b9 `C`\\n- \u6240\u4ee5 \u8282\u70b9 `B` \u5b58\u5728\u81f3\u5c11\u4e00\u6761\u8def\u5f84 \u53ef\u4ee5 \u62b5\u8fbe\u8282\u70b9 `C`\\n- \u540c\u7406\u53ef\u8bc1\uff0c\u8282\u70b9 `C` \u5b58\u5728\u81f3\u5c11\u4e00\u6761\u8def\u5f84\u62b5\u8fbe`\u6839\u8282\u70b9` \u4e5f\u5c31\u662f\u8282\u70b9 `A`\\n- \u7efc\u4e0a\uff0c\u5b58\u5728\u4e00\u6761\u4ece\u8282\u70b9 `B` \u5230\u8282\u70b9 `A` \u7684\u8def\u5f84\uff0c\u7ecf\u8fc7\u8282\u70b9 `C`\\n\\n----------\\n\\n- \u5f53 \u8282\u70b9 `C` \u4e0d\u5c5e\u4e8e\u8981\u6c42\u7684`\u5206\u652f/\u6807\u7b7e`\\n- \u5047\u8bbe \u5b58\u5728\u4e00\u6761\u4ece\u8282\u70b9 `B` \u5230\u8282\u70b9 `A` \u7684\u8def\u5f84\uff0c\u7ecf\u8fc7\u8282\u70b9 `C`\\n- \u56e0\u4e3a \u6bcf\u4e00\u6761\u8fb9\u90fd\u662f\u7531\u65b0\u589e\u7684\u63d0\u4ea4\u6216\u8005\u5408\u5e76\u64cd\u4f5c\u5efa\u7acb\u7684\\n- \u6240\u4ee5 \u5fc5\u7136\u5b58\u5728\u4e00\u7cfb\u5217\u7684\u65b0\u589e\u63d0\u4ea4\u6216\u8005\u5408\u5e76\u64cd\u4f5c\uff0c\u4f7f\u5f97\u8282\u70b9 `C` \u6210\u4e3a\u8282\u70b9 `B`\\n- \u53c8\u56e0\u4e3a \u6bcf\u4e00\u4e2a\u63d0\u4ea4\u5728\u62bd\u8c61\u903b\u8f91\u4e0a\u90fd\u662f\u72ec\u4e00\u65e0\u4e8c\u7684\\n- \u56e0\u6b64\uff0c\u5982\u679c\u7f3a\u5931\u4e86\u8282\u70b9 `C` \u5219\u5fc5\u7136\u5bfc\u81f4\u5728\u6784\u5efa\u8282\u70b9 `B` \u6240\u4ee3\u8868\u7684`\u5206\u652f/\u6807\u7b7e`\u7684\u8fc7\u7a0b\u4e2d\uff0c\u81f3\u5c11\u5b58\u5728\u4e00\u4e2a\u63d0\u4ea4\u6216\u8005\u5408\u5e76\u64cd\u4f5c\u65e0\u6cd5\u6267\u884c\u3002\\n- \u8fd9\u5c06\u5bfc\u81f4\u5206\u652f\u975e\u6cd5\\n- \u56e0\u6b64 \u5047\u8bbe\u4e0d\u6210\u7acb\\n- \u56e0\u6b64 \u5176\u9006\u5426\u547d\u9898 \u5bf9\u4efb\u610f\u4e00\u6761\u4ece\u8282\u70b9 `B` \u5230\u8282\u70b9 `A` \u7684\u8def\u5f84\uff0c\u90fd\u4e0d\u4f1a\u7ecf\u8fc7\u8282\u70b9 `C` \u6210\u7acb\\n\\n----------\\n\\n- \u6839\u636e \\n- \u5f53 \u8282\u70b9 `C` \u662f\u5c5e\u4e8e\u8981\u6c42\u7684`\u5206\u652f/\u6807\u7b7e`\uff0c\u5b58\u5728\u4e00\u6761\u4ece\u8282\u70b9 `B` \u5230\u8282\u70b9 `A` \u7684\u8def\u5f84\uff0c\u7ecf\u8fc7\u8282\u70b9 `C` \uff08\u5fc5\u8981\u6027\uff09\\n- \u5f53 \u8282\u70b9 `C` \u4e0d\u5c5e\u4e8e\u8981\u6c42\u7684`\u5206\u652f/\u6807\u7b7e`\uff0c\u5bf9\u4efb\u610f\u4e00\u6761\u4ece\u8282\u70b9 `B` \u5230\u8282\u70b9 `A` \u7684\u8def\u5f84\uff0c\u90fd\u4e0d\u4f1a\u7ecf\u8fc7\u8282\u70b9 `C` \uff08\u5145\u5206\u6027\uff09\\n- \u53ef\u5f97 `\u5206\u652f/\u6807\u7b7e`\u6240\u5bf9\u5e94\u7684\u8282\u70b9\uff0c\u5230`\u6839\u8282\u70b9`\u7684\u5168\u90e8\u8def\u5f84\u4e2d\u9014\u5f84\u7684`\u6240\u6709\u8282\u70b9`\u7684\u96c6\u5408\uff0c\u5373\u4e3a\u8be5`\u5206\u652f/\u6807\u7b7e`\u6240\u5305\u542b\u7684`\u63d0\u4ea4\u7248\u672c`\u96c6\u5408\u3002\\n\\n\\n\\n\\n\\n\\n## \u7b97\u6cd5\u9009\u62e9\\n\\n\u6211\u4eec\u73b0\u5728\u5df2\u7ecf\u5b8c\u6210\u4e86\u6570\u5b66\u5efa\u6a21\uff0c\u5e76\u4e14\u5df2\u7ecf\u4e3a\u6570\u5b66\u5efa\u6a21\u505a\u4e86\u57fa\u672c\u7684\u8bc1\u660e\u3002\u73b0\u5728\uff0c\u6211\u4eec\u7ec8\u4e8e\u53ef\u4ee5\u5f00\u59cb\u5728\u8fd9\u4e2a\u6570\u5b66\u6a21\u578b\u7684\u57fa\u7840\u4e0a\u6765\u8bbe\u8ba1\u5e76\u5b9e\u73b0\u6211\u4eec\u7684\u7b97\u6cd5\u4e86\u3002\\n\\n\u5982\u679c\u6ca1\u6709\u505a\u4e0a\u8ff0\u57fa\u672c\u8bba\u8bc1\u7684\u540c\u5b66\uff0c\u8fd9\u91cc\u53ef\u80fd\u4f1a\u72af\u4e00\u4e2a\u5c0f\u9519\u8bef\uff1a\u90a3\u5c31\u662f\u5b83\u4eec\u4f1a\u8bef\u4ee5\u4e3a\uff0c\u53ea\u8981\u8ba1\u7b97\u4e24\u4e2a\u8282\u70b9\u4e4b\u95f4\u7684\u6700\u77ed\u8def\u5f84\u5373\u53ef\u3002\u82e5\u771f\u662f\u5982\u6b64\u7684\u8bdd\uff0c`SPFA`\uff0c`\u8fea\u6770\u65af\u7279\u62c9`\uff08Dijkstra\uff09\uff0c\u751a\u81f3\u5934\u94c1\u4e00\u70b9\u513f\uff0c\u6765\u4e2a`\u5f17\u6d1b\u4f0a\u5fb7`\uff08Floyd\uff09\u90fd\u662f\u5f88\u5bb9\u6613\u60f3\u5230\u7684\u3002\u5f53\u7136\u7531\u4e8e\u8be5\u6709\u5411\u56fe\u7684\u6240\u6709\u8fb9\u957f\u90fd\u662f 1\uff0c\u6240\u4ee5\u66f4\u7b80\u5355\u7684\u65b9\u6cd5\u662f\u76f4\u63a5\u4f7f\u7528`\u5e7f/\u5bbd\u5ea6\u4f18\u5148\u641c\u7d22\u7b97\u6cd5\uff08BFS\uff09`\u6765\u8ba1\u7b97\u6700\u77ed\u8def\u3002\\n\\n\u4e0a\u8ff0\u7684\u4e00\u7cfb\u5217\u8033\u719f\u80fd\u8be6\u7684\u7b97\u6cd5\uff0c\u6216\u591a\u6216\u5c11\u90fd\u6709\u6210\u719f\u7684\u5e93\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u3002\u4f46\u662f\u9057\u61be\u7684\u662f\uff0c\u5982\u679c\u771f\u7684\u662f\u53bb\u7b97\u6700\u77ed\u8def\u7684\u8bdd\uff0c\u90a3\u6700\u7ec8\u7ed3\u679c\u6050\u6015\u4f1a\u4e0d\u5c3d\u5982\u4eba\u610f\u3002\\n\\n\u5728 `DevLake` \u7684\u65e9\u671f\u4e0d\u6210\u719f\u7684\u7248\u672c\u4e2d\uff0c\u66fe\u7ecf\u4f7f\u7528\u8fc7\u6700\u77ed\u8def\u7684\u7b97\u6cd5\u6765\u8ba1\u7b97\u3002\u5c3d\u7ba1\u5bf9\u4e8e\u6bd4\u8f83\u7b80\u5355\u7ebf\u6027\u7684\u4ed3\u5e93\u6765\u8bf4\uff0c\u53ef\u4ee5\u6b6a\u6253\u6b63\u7740\u7684\u7b97\u51fa\u7ed3\u679c\u3002\u4f46\u662f\u5f53\u4ed3\u5e93\u7684\u5206\u652f\u548c\u5408\u5e76\u53d8\u5f97\u590d\u6742\u7684\u65f6\u5019\uff0c\u6700\u77ed\u8def\u6240\u8ba1\u7b97\u7684\u7ed3\u679c\u5f80\u5f80\u90fd\u4f1a\u9057\u6f0f\u5927\u91cf\u7684`\u63d0\u4ea4\u7248\u672c`\u3002\\n\\n\u56e0\u4e3a\u5728\u521a\u624d\u6211\u4eec\u5df2\u7ecf\u8bba\u8bc1\u8fc7\u4e86\uff0c\u8fd9\u4e2a`\u5206\u652f/\u6807\u7b7e`\u6240\u5305\u542b\u7684`\u63d0\u4ea4\u7248\u672c`\u96c6\u5408\uff0c\u662f\u5fc5\u987b\u8981\u5168\u90e8\u8def\u5f84\u624d\u884c\u7684\u3002\u53ea\u6709\u5168\u90e8\u8def\u5f84\uff0c\u624d\u80fd\u6ee1\u8db3\u5145\u5206\u4e14\u5fc5\u8981\u6761\u4ef6\u3002\\n\\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u4e2d\u95f4\u53ea\u8981\u6f0f\u4e86\u4e00\u6761\u8def\u5f84\uff0c\u90a3\u5c31\u4f1a\u6f0f\u6389\u4e00\u7cfb\u5217\u7684`\u63d0\u4ea4\u7248\u672c`\u3002\\n\\n\u8981\u8ba1\u7b97\u8fd9\u4e2a\u6709\u5411\u56fe\u4e0a\u7684`\u65e7\u8282\u70b9`\u6240\u4ee3\u8868\u7684`\u5206\u652f/\u6807\u7b7e`\u6bd4`\u65b0\u8282\u70b9`\u6240\u4ee3\u8868\u7684`\u5206\u652f/\u6807\u7b7e`\u7f3a\u5c11\u4e86\u54ea\u4e9b`\u63d0\u4ea4\u7248\u672c`\u3002\\n\\n\u5b9e\u8d28\u4e0a\u5c31\u662f\u5728\u8ba1\u7b97`\u65e7\u8282\u70b9`\u5230`\u6839\u8282\u70b9`\u7684\u5168\u90e8\u8def\u5f84\u6240\u7ecf\u8282\u70b9\uff0c\u5bf9\u6bd4`\u65b0\u8282\u70b9`\u5230`\u6839\u8282\u70b9`\u7684\u5168\u90e8\u8def\u5f84\u6240\u7ecf\u8282\u70b9\uff0c\u7f3a\u5c11\u4e86\u54ea\u4e9b\u8282\u70b9\u3002\\n\\n\u5982\u679c\u6211\u4eec\u6570\u5b66\u5efa\u6a21\u7684\u65f6\u5019\uff0c\u628a\u8fd9\u4e2a\u6709\u5411\u56fe\u5efa\u7acb\u6210\u4e00\u68f5\u6811\u7684\u8bdd\u3002\\n\\n\u90a3\u4e48\u719f\u6089\u7b97\u6cd5\u7684\u540c\u5b66\uff0c\u5c31\u53ef\u4ee5\u5f88\u81ea\u7136\u7684\u4f7f\u7528\u6700\u8fd1\u516c\u5171\u7956\u5148\uff08LCA\uff09\u7b97\u6cd5\uff0c\u6c42\u51fa\u5176\u5e76\u96c6\uff0c\u7136\u540e\u518d\u6765\u8ba1\u7b97\u5176\u5bf9\u5e94\u7684\u7f3a\u5931\u7684\u90e8\u5206\u3002\\n\\n\u4f46\u662f\u4f5c\u4e3a\u4e00\u4e2a\u6709\u5411\u56fe\u6765\u8bf4\uff0c\u6811\u7ed3\u6784\u7684\u7b97\u6cd5\u662f\u6ca1\u6cd5\u76f4\u63a5\u4f7f\u7528\u7684\u3002\u6240\u5e78\u7684\u662f\uff0c\u6211\u4eec\u7684\u8fd9\u4e2a\u56fe\uff0c\u5728\u7531\u5408\u6cd5\u4ed3\u5e93\u751f\u6210\u7684\u60c5\u51b5\u4e0b\uff0c\u5fc5\u7136\u662f\u4e00\u4e2a\u6709\u5411\u65e0\u73af\u56fe\u3002\\n\\n\u4e00\u4e2a\u6709\u5411\u65e0\u73af\u56fe\uff0c\u4e5f\u662f\u6709\u81ea\u5df1\u7684\u6700\u8fd1\u516c\u5171\u7956\u5148\uff08LCA\uff09\u7b97\u6cd5\u7684\u3002\\n\\n\u53ea\u662f\uff0c\u8fd9\u91cc\u6709\u4e24\u4e2a\u95ee\u9898\uff1a\\n- \u6211\u4eec\u771f\u7684\u5bf9 \u6700\u8fd1\u516c\u5171\u7956\u5148 \u8fd9\u4e2a\u7279\u5b9a\u7684\u8282\u70b9\u611f\u5174\u8da3\u5417\uff1f\\n- \u5728\u6709\u591a\u4e2a\u4e0d\u540c\u8def\u5f84\u7684\u516c\u5171\u7956\u5148\u7684\u60c5\u51b5\u4e0b\uff0c\u53ea\u6c42\u4e00\u4e2a\u6700\u8fd1\u516c\u5171\u7956\u5148\u6709\u4ec0\u4e48\u610f\u4e49\u5462\uff1f\\n\\n\u9996\u5148\uff0c\u6211\u4eec\u9700\u8981\u660e\u786e\u6211\u4eec\u7684\u9700\u6c42\u3002\\n\\n\u6211\u4eec\u53ea\u662f\u4e3a\u4e86\u8ba1\u7b97 \u3002\\n- `\u65e7\u8282\u70b9`\u5230`\u6839\u8282\u70b9`\u7684\u5168\u90e8\u8def\u5f84\u6240\u7ecf\u8282\u70b9\uff0c\u5bf9\u6bd4`\u65b0\u8282\u70b9`\u5230`\u6839\u8282\u70b9`\u7684\u5168\u90e8\u8def\u5f84\u6240\u7ecf\u8282\u70b9\uff0c\u7f3a\u5c11\u4e86\u54ea\u4e9b\u8282\u70b9\u3002\\n\\n\u9664\u6b64\u4e4b\u5916\u7684\uff0c\u6211\u4eec\u4e0d\u611f\u5174\u8da3\u3002\\n\\n\u6362\u53e5\u8bdd\u8bf4\uff0c\u6211\u4eec\u60f3\u77e5\u9053\u5176\u516c\u5171\u7956\u5148\uff0c\u4f46\u662f\uff0c\u4e0d\u5173\u5fc3\u5b83\u662f\u4e0d\u662f\u6700\u8fd1\u7684\u3002\\n\\n\u5b83\u662f\u8fd1\u7684\u4e5f\u597d\uff0c\u5b83\u662f\u8fdc\u7684\u4e5f\u7f62\uff0c\u53ea\u8981\u662f\u516c\u5171\u7956\u5148\uff0c\u90fd\u5f97\u6293\u8d77\u6765\u3002\u53bb\u6c42\u6700\u8fd1\u516c\u5171\u7956\u5148\uff0c\u5728\u6811\u7ed3\u6784\u4e0b\uff0c\u53ef\u4ee5\u8fd1\u4f3c\u7b49\u4ef7\u4e8e\u6c42\u5176\u5168\u90e8\u7956\u5148\u3002\u56e0\u6b64\u53ef\u4ee5\u4f7f\u7528\u8be5\u7b97\u6cd5\u3002\\n\\n\u4f46\u662f\u5728\u6709\u5411\u65e0\u73af\u56fe\u4e0b\uff0c\u6700\u8fd1\u516c\u5171\u7956\u5148\u5c31\u662f\u4e2a\u5e9f\u7269\u3002\u6c42\u51fa\u6765\u4e86\u53c8\u80fd\u5982\u4f55\uff1f\\n\\n\u6839\u672c\u4e0a\uff0c\u8fd8\u662f\u5e94\u8be5\u53bb\u6c42\u5168\u90e8\u7684\u516c\u5171\u7956\u5148\u3002\\n\\n\u6240\u4ee5\u6211\u4eec\u522b\u65e0\u9009\u62e9\uff0c\u53ea\u80fd\u7528\u6700\u76f4\u63a5\u7684\u7b97\u6cd5\u3002\\n\\n- \u8ba1\u7b97\u51fa`\u65e7\u8282\u70b9`\u5230`\u6839\u8282\u70b9`\u7684\u5168\u90e8\u8def\u5f84\u6240\u7ecf\u8282\u70b9\\n- \u8ba1\u7b97\u51fa`\u65b0\u8282\u70b9`\u5230`\u6839\u8282\u70b9`\u7684\u5168\u90e8\u8def\u5f84\u6240\u7ecf\u8282\u70b9\\n- \u68c0\u67e5`\u65b0\u8282\u70b9`\u7684\u5168\u90e8\u8def\u5f84\u6240\u7ecf\u8282\u70b9\u7f3a\u5c11\u4e86\u54ea\u4e9b\u8282\u70b9\\n\\n\u5982\u4f55\u8ba1\u7b97\u4efb\u610f\u8282\u70b9\u5230`\u6839\u8282\u70b9`\u7684\u5168\u90e8\u8def\u5f84\u6240\u7ecf\u8282\u70b9\uff1f\\n\\n\u5728 OI \u4e0a\u719f\u7ec3\u4e8e\u9a97\u5206\u5bfc\u8bba\u7684\u540c\u5b66\u4eec\uff0c\u5e94\u8be5\u5f88\u81ea\u7136\u7684\u5c31\u610f\u8bc6\u5230\u4e86\\n\\n`\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\uff08DFS\uff09`\\n\\n\u5f53\u7136\uff0c\u8fd9\u91cc\u8865\u5145\u4e00\u4e0b\uff0c\u7531\u4e8e`\u6839\u8282\u70b9`\u7684\u6027\u8d28\uff0c\u4e8b\u5b9e\u4e0a\uff0c\u65e0\u8bba\u662f\u4ece\u54ea\u4e2a\u65b9\u5411\u51fa\u53d1\uff0c\u65e0\u8bba\u8d70\u90a3\u6761\u8fb9\uff0c\u53ea\u8981\u662f\u80fd\u8d70\u7684\u8fb9\uff0c\u6700\u7ec8\u90fd\u4f1a\u62b5\u8fbe`\u6839\u8282\u70b9`\\n\\n\u56e0\u6b64\uff0c\u5728\u4e0a\u8ff0\u6761\u4ef6\u6210\u7acb\u7684\u57fa\u7840\u4e0a\uff0c\u6ca1\u6709\u8bb0\u5f55\u8def\u5f84\u72b6\u6001\u7684`\u5e7f/\u5bbd\u5ea6\u4f18\u5148\u641c\u7d22\uff08BFS\uff09`\u4e5f\u662f\u53ef\u4ee5\u4f7f\u7528\u7684\u3002\u56e0\u4e3a\u5728\u5fc5\u7136\u80fd\u62b5\u8fbe`\u6839\u8282\u70b9`\u7684\u524d\u63d0\u4e0b\uff0c\u53ef\u4ee5\u5ffd\u7565\u8def\u5f84\u72b6\u6001\uff0c\u4e0d\u505a\u8def\u5f84\u7684\u53ef\u884c\u6027\u5224\u65ad\u3002\\n\\n\u5f53\u7136\uff0c\u8fd9\u4e00\u524d\u63d0\uff0c\u4e5f\u6709\u5229\u4e8e\u6211\u4eec`\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\uff08DFS\uff09`\u8fdb\u884c\u4f18\u5316\u3002\\n\\n\u5728\u6211\u4eec\u6267\u884c`\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\uff08DFS\uff09`\u7684\u65f6\u5019\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u6240\u6709\u8bbf\u95ee\u5230\u7684\u8282\u70b9\uff0c\u5747\u6dfb\u52a0\u5230\u96c6\u5408\u4e2d\uff0c\u800c\u65e0\u9700\u7b49\u5f85\u786e\u8ba4\u8be5\u8282\u70b9\u80fd\u786e\u5b9e\u62b5\u8fbe`\u6839\u8282\u70b9`\u540e\u518d\u8fdb\u884c\u6dfb\u52a0\u3002\\n\\n\u5b9e\u9645\u4e0a\u8fd9\u91cc\u5728\u4e00\u4e2a\u95ee\u9898\u4e0a\u6211\u4eec\u53c8\u4f1a\u51fa\u73b0\u4e86\u4e24\u79cd\u5206\u6b67\u3002\\n\u95ee\u9898\u662f\uff0c\u5982\u4f55\u5c06\u4e00\u4e2a\u8282\u70b9\u6dfb\u52a0\u5230\u96c6\u5408\u4e2d\u3002\u65b9\u6848\u6709\u5982\u4e0b\u4e24\u79cd\u3002\\n\\n\u67d3\u8272\u6cd5\uff1a\u6dfb\u52a0\u5230\u96c6\u5408\u4e2d\u7684\u8282\u70b9\u8fdb\u884c\u67d3\u8272\uff0c\u672a\u6dfb\u52a0\u5230\u96c6\u5408\u4e2d\u7684\u8282\u70b9\u4e0d\u8fdb\u884c\u67d3\u8272\u3002\\n\u96c6\u5408\u6cd5\uff1a\u4f7f\u7528\u5e73\u8861\u6811\u7b97\u6cd5\u5efa\u7acb\u4e00\u4e2a\u96c6\u5408\uff0c\u5c06\u8282\u70b9\u6dfb\u52a0\u5230\u8be5\u96c6\u5408\u4e2d\u3002\\n\\n\u8fd9\u4e24\u79cd\u7b97\u6cd5\u5404\u6709\u4f18\u52a3\u3002\\n\\n- \u67d3\u8272\u6cd5\u7684\u4f18\u52bf\u5728\u4e8e\uff0c\u67d3\u8272\u6cd5\u6dfb\u52a0\u4e00\u4e2a\u5143\u7d20\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f O(1) \u7684\uff0c\u5feb\u51c6\u72e0\u3002\u76f8\u6bd4\u8f83\u800c\u8a00\uff0c\u96c6\u5408\u6cd5\u6dfb\u52a0\u4e00\u4e2a\u5143\u7d20\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f O(log(n))\u3002\\n- \u96c6\u5408\u6cd5\u7684\u4f18\u52bf\u5728\u4e8e\uff0c\u96c6\u5408\u6cd5\u904d\u5386\u6240\u6709\u5143\u7d20\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f O(n) \u7684\uff0c\u800c\u67d3\u8272\u6cd5\u4e0b\uff0c\u8981\u904d\u5386\u6240\u6709\u5143\u7d20\u65f6\u95f4\u590d\u6742\u5ea6\u4f1a\u662f O(m)\uff0c\u540c\u65f6\u96c6\u5408\u6cd5\u53ef\u4ee5\u901a\u8fc7\u8bbe\u8ba1\u4e00\u4e2a\u4f18\u79c0\u7684 hash \u7b97\u6cd5\u4ee3\u66ff\u5e73\u8861\u6811\uff0c\u6765\u5c06\u65f6\u95f4\u590d\u6742\u5ea6\u4f18\u5316\u5230\u63a5\u8fd1 O(1).\uff08\u8fd9\u91cc n \u8868\u793a\u96c6\u5408\u5927\u5c0f\uff0cm \u8868\u793a\u6574\u4e2a\u56fe\u7684\u5927\u5c0f\uff09\\n\\n\u6211\u4eec\u8fd9\u91cc\u9009\u62e9\u4f7f\u7528\u96c6\u5408\u6cd5\u3002\u5b9e\u9645\u4e0a\u8fd9\u4e24\u79cd\u7b97\u6cd5\u90fd\u5dee\u4e0d\u591a\u3002\\n\\n\\n## \u7b97\u6cd5\u5b9e\u73b0\\n\\n- \u6839\u636e\u63d0\u4ea4\u5efa\u56fe\\n- \u6211\u4eec\u5bf9`\u65e7\u8282\u70b9`\u4f7f\u7528`\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\uff08DFS\uff09`\u8ba1\u7b97\u51fa\u5176\u5230`\u6839\u8282\u70b9`\u7684\u5168\u90e8\u8def\u5f84\u6240\u7ecf\u8282\u70b9\uff0c\u6dfb\u52a0\u5230`\u96c6\u5408 A` \u4e2d\\n- \u63a5\u7740\uff0c\u6211\u4eec\u5bf9`\u65b0\u8282\u70b9`\u4f7f\u7528`\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\uff08DFS\uff09`\u8ba1\u7b97\u51fa\u5176\u5230`\u6839\u8282\u70b9`\u7684\u5168\u90e8\u8def\u5f84\u6240\u7ecf\u8282\u70b9\uff0c\u6dfb\u52a0\u5230`\u96c6\u5408 B`\\n- \u6ce8\u610f\uff0c\u8fd9\u91cc\u6709\u4e00\u4e2a\u4f18\u5316\uff0c\u8fd9\u4e2a\u4f18\u5316\u662f\u5efa\u7acb\u5728\u6211\u4eec\u7684\u9700\u6c42\u4e0a\\n- \u91cd\u590d\u4e00\u904d\u6211\u4eec\u7684\u9700\u6c42\\n- \u6211\u4eec\u53ea\u5173\u5fc3`\u76ee\u6807\u5206\u652f/\u6807\u7b7e`\u7f3a\u5c11\u4e86\u4ec0\u4e48\uff0c\u800c\u5e76\u4e0d\u5173\u5fc3`\u76ee\u6807\u5206\u652f/\u6807\u7b7e`\u591a\u51fa\u6765\u4e86\u4ec0\u4e48\u4e1c\u897f\u3002\\n- \u56e0\u6b64\u5f53\u5bf9`\u65b0\u8282\u70b9`\u4f7f\u7528`\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\uff08DFS\uff09`\u641c\u7d22\u5230\u5df2\u7ecf\u5728`\u96c6\u5408 A` \u4e2d\u7684\u8282\u70b9\u65f6\uff0c\u53ef\u4ee5\u8ba4\u4e3a\u8be5\u8282\u70b9\u5df2\u641c\u7d22\u8fc7\uff0c\u65e0\u9700\u518d\u6b21\u641c\u7d22\u3002\\n- \u6b64\u65f6\u7684`\u96c6\u5408 B`\uff0c\u53ef\u4ee5\u6070\u597d\u7684\u907f\u5f00`\u96c6\u5408 A` \u4e2d\u5df2\u6709\u7684\u6240\u6709\u8282\u70b9\uff0c\u56e0\u6b64\uff0c\u6070\u597d\u5c31\u662f\u6211\u4eec\u6240\u9700\u7684\u7ed3\u679c\u3002\\n\\n\u6838\u5fc3\u7684\u8ba1\u7b97\u4ee3\u7801\u5982\u4e0b\u6240\u793a\uff1a\\n```golang\\noldGroup := make(map[string]*CommitNode)\\nvar dfs func(*CommitNode)\\n// put all commit sha which can be depth-first-searched by old commit\\ndfs = func(now *CommitNode) {\\n    if _, ok = oldGroup[now.Sha]; ok {\\n        return\\n    }\\n    oldGroup[now.Sha] = now\\n    for _, node := range now.Parent {\\n        dfs(node)\\n    }\\n}\\ndfs(oldCommitNode)\\n\\nvar newGroup = make(map[string]*CommitNode)\\n// put all commit sha which can be depth-first-searched by new commit, will stop when find any in either group\\ndfs = func(now *CommitNode) {\\n    if _, ok = oldGroup[now.Sha]; ok {\\n        return\\n    }\\n    if _, ok = newGroup[now.Sha]; ok {\\n        return\\n    }\\n    newGroup[now.Sha] = now\\n    lostSha = append(lostSha, now.Sha)\\n    for _, node := range now.Parent {\\n        dfs(node)\\n    }\\n}\\ndfs(newCommitNode)\\n```\\n\\n\u8fd9\u91cc\u7684 lostSha \u5373\u4e3a\u6211\u4eec\u6700\u7ec8\u6c42\u5f97\u7684\u7f3a\u5931\u7684\u90e8\u5206\\n\\n## \u7b97\u6cd5\u6267\u884c\u7684\u6f14\u793a\u52a8\u753b\\n\\n\u6211\u4eec\u7528\u4e00\u4e2a\u7b80\u964b\u7684\u52a8\u753b\u6765\u7b80\u5355\u7684\u6f14\u793a\u4e00\u4e0b\uff0c\u4e0a\u8ff0\u7b97\u6cd5\u5728\u903b\u8f91\u4e0a\u6267\u884c\u7684\u60c5\u51b5\u3002\\n\\n- `\u65e7\u8282\u70b9`\u4e3a\u8282\u70b9 `8`\\n- `\u65b0\u8282\u70b9`\u4e3a\u8282\u70b9 `9`\\n\\n![](dfs.gif)\\n\\n\u5982\u4e0a\u8ff0[\u52a8\u753b](https://devlake.apache.org/assets/images/dfs-3464f1398b150e893646c4f21e95ea10.gif)\u6240\u6f14\u793a\u7684\u4e00\u822c\\n\u4ece\u8282\u70b9 `8` \u5f00\u59cb\u6267\u884c`\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\uff08DFS\uff09`\u5230`\u6839\u8282\u70b9`\u4e2d\u6b62\\n\u4ece\u8282\u70b9 `9` \u5f00\u59cb\u6267\u884c`\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\uff08DFS\uff09`\u5230\u5df2\u7ecf\u5728\u8282\u70b9 `8` \u7684\u96c6\u5408\u4e2d\u7684\u8282\u70b9\u4e3a\u6b62\\n\u6b64\u65f6\uff0c\u5728\u8282\u70b9 `9` \u6267\u884c`\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\uff08DFS\uff09`\u8fc7\u7a0b\u4e2d\u88ab\u8bbf\u95ee\u5230\u7684\u6240\u6709\u975e\u8282\u70b9 `8` \u7684\u8282\u70b9\\n\\n- \u8282\u70b9 `3`\\n- \u8282\u70b9 `6`\\n- \u8282\u70b9 `7`\\n- \u8282\u70b9 `9` \\n\\n\u5b83\u4eec\u6240\u5bf9\u5e94\u7684`\u63d0\u4ea4\u7248\u672c`\u5c31\u662f\u6211\u4eec\u8981\u6c42\u7684\u5dee\u96c6\\n\\n> \u6b64\u65f6\u6700\u77ed\u8def\u4e3a `9` -> `7` -> `5` -> `8`\\n> \u6b64\u65f6\u6700\u8fd1\u516c\u5171\u7236\u8282\u70b9\u4e3a `5`\uff0c\u5230\u8be5\u8282\u70b9\u7684\u8def\u5f84\u4e3a `9` -> `7` -> `5`\\n> \u4ece\u4e0a\u56fe\u4e2d\u4e5f\u53ef\u4ee5\u76f4\u89c2\u7684\u770b\u5230\u5982\u679c\u4f7f\u7528\u6700\u77ed\u8def\u7b97\u6cd5\uff0c\u6216\u8005\u6700\u8fd1\u516c\u5171\u7236\u8282\u70b9\u7b97\u6cd5\u7684\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u662f\u65e0\u6cd5\u5f97\u5230\u6b63\u786e\u7b54\u6848\u7684\u3002\\n\\n## \u65f6\u7a7a\u590d\u6742\u5ea6\\n\\n\u8bbe`\u63d0\u4ea4\u7248\u672c`\u7684\u603b\u5927\u5c0f\u4e3a m\uff0c\u6bcf\u4e00\u7ec4`\u6e90\u5206\u652f/\u6807\u7b7e`\u548c`\u76ee\u6807\u5206\u652f/\u6807\u7b7e`\u7684\u5e73\u5747\u5927\u5c0f\u4e3a n\uff0c\u4e00\u5171\u6709 k \u7ec4\u6570\u636e\\n\\nDFS \u6bcf\u8bbf\u95ee\u4e00\u4e2a\u8282\u70b9\uff0c\u9700\u8981\u6267\u884c\u4e00\u6b21\u52a0\u5165\u96c6\u5408\u64cd\u4f5c\u3002\u6211\u4eec\u6309\u7167\u6211\u4eec\u5b9e\u9645\u5b9e\u73b0\u4e2d\u4f7f\u7528\u7684 \u5e73\u8861\u6811\u7b97\u6cd5\u6765\u8ba1\u7b97 \u65f6\u95f4\u590d\u6742\u5ea6\u4e3a O(log(n))\\n\\n\u6b64\u65f6\u6211\u4eec\u53ef\u4ee5\u8ba1\u7b97\u5f97\u51fa\\n\\n- \u5efa\u56fe\u7684\u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(m)\\n- \u8ba1\u7b97\u4e00\u7ec4`\u6e90\u5206\u652f/\u6807\u7b7e`\u548c`\u76ee\u6807\u5206\u652f/\u6807\u7b7e`\u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(n\\\\*log(n))\\n- \u8ba1\u7b97\u6240\u6709`\u6e90\u5206\u652f/\u6807\u7b7e`\u548c`\u76ee\u6807\u5206\u652f/\u6807\u7b7e`\u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(k\\\\*n\\\\*log(n))\\n- \u8bfb\u53d6\u3001\u7edf\u8ba1\u7ed3\u679c\u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(k\\\\*n)\\n- \u603b\u4f53\u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(m + k\\\\*n\\\\*log(n))\\n\\n----------\\n\\n- \u56fe\u7684\u7a7a\u95f4\u590d\u6742\u5ea6\uff1aO(m)\\n- \u6bcf\u7ec4`\u6e90\u5206\u652f/\u6807\u7b7e`\u548c`\u76ee\u6807\u5206\u652f/\u6807\u7b7e`\u96c6\u5408\u7684\u7a7a\u95f4\u590d\u6742\u5ea6\uff1aO(n) \uff08\u975e\u5e76\u53d1\u60c5\u51b5\u4e0b\uff0ck\u7ec4\u6570\u636e\u53ef\u5171\u7528\uff09\\n- \u603b\u4f53\u7a7a\u95f4\u590d\u6742\u5ea6\uff1aO(m+n)\\n\\n\\n## \u5173\u952e\u8bcd\\n- `DevLake`\\n- `CalculateCommitsDiff`\\n- `\u7b97\u6cd5`\\n- `\u6570\u5b66\u5efa\u6a21`\\n- `\u8bc1\u660e\u903b\u8f91`\\n- `\u5145\u5206\u6761\u4ef6`\\n- `\u5fc5\u8981\u6761\u4ef6`\\n- `\u56fe\u8bba`\\n- `\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\uff08DFS\uff09`\\n- `\u5e7f/\u5bbd\u5ea6\u4f18\u5148\u641c\u7d22\uff08BFS\uff09`\\n- `\u65f6\u95f4\u590d\u6742\u5ea6`\\n- `\u7a7a\u95f4\u590d\u6742\u5ea6`\\n- `\u65f6\u7a7a\u590d\u6742\u5ea6`\\n\\n----------\\n## \u4e86\u89e3\u66f4\u591a\u6700\u65b0\u52a8\u6001\\n\\n\u5b98\u7f51\uff1a[https://devlake.incubator.apache.org/](https://devlake.incubator.apache.org/)\\n\\nGitHub\uff1a[https://github.com/apache/incubator-devlake/](https://github.com/apache/incubator-devlake/)\\n\\nSlack\uff1a\u901a\u8fc7 [Slack](https://devlake-io.slack.com/join/shared_invite/zt-18uayb6ut-cHOjiYcBwERQ8VVPZ9cQQw#/shared-invite/email) \u8054\u7cfb\u6211\u4eec"},{"id":"some-practices-of-supporting-postgresql","metadata":{"permalink":"/blog/some-practices-of-supporting-postgresql","editUrl":"https://github.com/apache/incubator-devlake-website/edit/main/blog/2022-06-17-Apache-DevLake\u517c\u5bb9PostgreSQL\u8e29\u5751\u5c0f\u7ed3/index.md","source":"@site/blog/2022-06-17-Apache-DevLake\u517c\u5bb9PostgreSQL\u8e29\u5751\u5c0f\u7ed3/index.md","title":"Apache DevLake \u517c\u5bb9 PostgreSQL \u8e29\u5751\u5c0f\u7ed3","description":"\u672c\u6587\u4f5c\u8005\uff1aZhangLiang","date":"2022-06-17T00:00:00.000Z","formattedDate":"June 17, 2022","tags":[{"label":"devlake","permalink":"/blog/tags/devlake"},{"label":"database","permalink":"/blog/tags/database"},{"label":"postgresql","permalink":"/blog/tags/postgresql"}],"readingTime":3.5933333333333333,"hasTruncateMarker":false,"authors":[{"name":"ZhangLiang","title":"Apache DevLake PPMC","url":"https://github.com/mindlesscloud","imageURL":"https://avatars.githubusercontent.com/u/8455907?s=400&v=4","key":"ZhangLiang"}],"frontMatter":{"slug":"some-practices-of-supporting-postgresql","title":"Apache DevLake \u517c\u5bb9 PostgreSQL \u8e29\u5751\u5c0f\u7ed3","authors":"ZhangLiang","tags":["devlake","database","postgresql"]},"prevItem":{"title":"refdiff\u63d2\u4ef6\u7684\u8ba1\u7b97\u63d0\u4ea4\u7248\u672c\u5dee\u5f02\u7b97\u6cd5","permalink":"/blog/refdiff-calculate-commits-diff"},"nextItem":{"title":"How DevLake is Up and Running","permalink":"/blog/how-DevLake-is-up-and-running"}},"content":"\u672c\u6587\u4f5c\u8005\uff1aZhangLiang  \\n\u4e2a\u4eba\u4e3b\u9875\uff1ahttps://github.com/mindlesscloud\\n\\nApache DevLake \u662f\u4e00\u4e2a\u7814\u53d1\u6570\u636e\u5e73\u53f0\uff0c\u53ef\u4ee5\u6536\u96c6\u548c\u6574\u5408\u5404\u7c7b\u7814\u53d1\u5de5\u5177\u7684\u6570\u636e\uff0c\u6bd4\u5982 Jira\u3001Github\u3001Gitlab\u3001Jenkins\u3002\\n\\n**\u672c\u6587\u5e76\u4e0d\u6253\u7b97\u5bf9\u6570\u636e\u5e93\u517c\u5bb9\u8fd9\u4e2a\u95ee\u9898\u505a\u5168\u9762\u7684\u603b\u7ed3\uff0c\u53ea\u662f\u5bf9\u6211\u4eec\u5b9e\u9645\u9047\u5230\u7684\u95ee\u9898\u505a\u4e00\u4e2a\u8bb0\u5f55\uff0c\u5e0c\u671b\u80fd\u5bf9\u6709\u76f8\u4f3c\u9700\u6c42\u7684\u4eba\u63d0\u4f9b\u4e00\u4e2a\u53c2\u8003\u3002**\\n\\n**1\u3001\u6570\u636e\u7c7b\u578b\u5dee\u5f02**\\n\\n### PostgreSQL \u4e0d\u652f\u6301 uint \u7c7b\u578b\u7684\u6570\u636e\u7c7b\u578b\\n```go\\ntype JenkinsBuild struct {\\n\\tcommon.NoPKModel\\n\\tJobName           string  `gorm:\\"primaryKey;type:varchar(255)\\"`\\n\\tDuration          float64 // build time\\n\\tDisplayName       string  // \\"#7\\"\\n\\tEstimatedDuration float64\\n\\tNumber            int64 `gorm:\\"primaryKey;type:INT(10) UNSIGNED NOT NULL\\"`\\n\\tResult            string\\n\\tTimestamp         int64     // start time\\n\\tStartTime         time.Time // convered by timestamp\\n\\tCommitSha         string\\n}\\n\\n```\\n\u5176\u4e2d\u7684`JenkinsBuild.Number`\u5b57\u6bb5\u7684`gorm` struct tag \u4f7f\u7528\u4e86`UNSIGNED`\u4f1a\u5bfc\u81f4\u5efa\u8868\u5931\u8d25\uff0c\u9700\u8981\u53bb\u6389\u3002\\n\\n![](df2f9837-121e-4a64-976c-c5039d452bfd.png)\\n\\n\\n### MySQL \u6ca1\u6709 bool \u578b\\n\u5bf9\u4e8e model \u91cc\u5b9a\u4e49\u4e3a bool \u578b\u7684\u5b57\u6bb5\uff0cgorm \u4f1a\u628a\u5b83\u6620\u5c04\u6210 MySQL \u7684 TINYINT \u7c7b\u578b\uff0c\u5728 SQL \u91cc\u53ef\u4ee5\u76f4\u63a5\u7528 0 \u6216\u8005 1 \u67e5\u8be2\uff0c\u4f46\u662f PostgreSQL \u91cc\u662f\u6709 bool \u7c7b\u578b\u7684\uff0c\u6240\u4ee5 gorm \u4f1a\u628a\u5b83\u6620\u5c04\u6210 BOOL \u7c7b\u578b\uff0c\u5982\u679c SQL \u91cc\u8fd8\u662f\u7528\u7684 0 \u6216\u8005 1 \u53bb\u67e5\u8be2\u5c31\u4f1a\u62a5\u9519\u3002\\n\\n\u4ee5\u4e0b\u662f\u4e00\u4e2a\u5177\u4f53\u7684\u4f8b\u5b50\uff08\u4e3a\u4e86\u6e05\u6670\u8d77\u89c1\u6211\u4eec\u5220\u6389\u4e86\u65e0\u5173\u7684\u5b57\u6bb5\uff09\uff0c\u4e0b\u9762\u7684\u67e5\u8be2\u8bed\u53e5\u5728 MySQL \u91cc\u662f\u6ca1\u6709\u95ee\u9898\u7684\uff0c\u4f46\u662f\u5728  PostgreSQL \u4e0a\u5c31\u4f1a\u62a5\u9519\u3002\\n```go\\ntype GitlabMergeRequestNote struct {\\n\\tMergeRequestId  int    `gorm:\\"index\\"`\\n\\tSystem          bool \\n}\\n\\t\\ndb.Where(\\"merge_request_id = ? AND `system` = 0\\", gitlabMr.GitlabId).\\n```\\n\u8bed\u53e5\u6539\u6210\u8fd9\u6837\u540e\u4ecd\u7136\u4f1a\u6709\u9519\u8bef\uff0c\u5177\u4f53\u8bf7\u89c1\u4e0b\u9762\u5173\u4e8e\u53cd\u5f15\u53f7\u7684\u95ee\u9898\u3002\\n```go\\ndb.Where(\\"merge_request_id = ? AND `system` = ?\\", gitlabMr.GitlabId, false)  \\n```\\n\\n**2\u3001\u884c\u4e3a\u5dee\u5f02**\\n\\n### \u6279\u91cf\u63d2\u5165\\n\u5982\u679c\u4f7f\u7528\u4e86`ON CONFLIT UPDATE ALL`\u4ece\u53e5\u6279\u91cf\u63d2\u5165\u7684\u65f6\u5019\uff0c\u672c\u6279\u6b21\u5982\u679c\u6709\u591a\u6761\u4e3b\u952e\u76f8\u540c\u7684\u8bb0\u5f55\u4f1a\u5bfc\u81f4 PostgreSQL \u62a5\u9519\uff0cMySQL \u5219\u4e0d\u4f1a\u3002\\n\\n![](efea0188-80e4-4519-a010-977a7fd5432e.png)\\n\\n![](7b2a6f29-ea2a-4a84-97c8-7eba5a5131a8.png)\\n\\n\\n### \u5b57\u6bb5\u7c7b\u578b model \u5b9a\u4e49\u4e0e schema \u4e0d\u4e00\u81f4\\n\u4f8b\u5982\u5728 model \u5b9a\u4e49\u4e2d`GithubPullRequest.AuthorId`\u662f int \u7c7b\u578b\uff0c\u4f46\u662f\u6570\u636e\u5e93\u91cc\u8fd9\u4e2a\u5b57\u6bb5\u662f VARCHAR \u7c7b\u578b\uff0c\u63d2\u5165\u6570\u636e\u7684\u65f6\u5019 MySQL \u662f\u5141\u8bb8\u7684\uff0cPostgreSQL \u5219\u4f1a\u62a5\u9519\u3002\\n```go\\ntype GithubPullRequest struct {\\n\\tGithubId        int    `gorm:\\"primaryKey\\"`\\n\\tRepoId          int    `gorm:\\"index\\"`\\n\\tNumber          int    `gorm:\\"index\\"` \\n\\tState           string `gorm:\\"type:varchar(255)\\"`\\n\\tTitle           string `gorm:\\"type:varchar(255)\\"`\\n\\tGithubCreatedAt time.Time\\n\\tGithubUpdatedAt time.Time `gorm:\\"index\\"`\\n\\tClosedAt        *time.Time\\n\\t// In order to get the following fields, we need to collect PRs individually from GitHub\\n\\tAdditions      int\\n\\tDeletions      int\\n\\tComments       int\\n\\tCommits        int\\n\\tReviewComments int\\n\\tMerged         bool\\n\\tMergedAt       *time.Time\\n\\tBody           string\\n\\tType           string `gorm:\\"type:varchar(255)\\"`\\n\\tComponent      string `gorm:\\"type:varchar(255)\\"`\\n\\tMergeCommitSha string `gorm:\\"type:varchar(40)\\"`\\n\\tHeadRef        string `gorm:\\"type:varchar(255)\\"`\\n\\tBaseRef        string `gorm:\\"type:varchar(255)\\"`\\n\\tBaseCommitSha  string `gorm:\\"type:varchar(255)\\"`\\n\\tHeadCommitSha  string `gorm:\\"type:varchar(255)\\"`\\n\\tUrl            string `gorm:\\"type:varchar(255)\\"`\\n\\tAuthorName     string `gorm:\\"type:varchar(100)\\"`\\n\\tAuthorId       int\\n\\tcommon.NoPKModel\\n}\\n\\n```\\n\\n![](8afb097c-a0b3-4bdc-80f3-7241c3fa566f.png)\\n\\n\\n**3\u3001MySQL \u7279\u6709\u7684\u51fd\u6570**\\n\\n\u5728\u4e00\u4e2a\u590d\u6742\u67e5\u8be2\u4e2d\u6211\u4eec\u66fe\u7ecf\u4f7f\u7528\u4e86 `GROUP_CONCAT` \u51fd\u6570\uff0c\u867d\u7136 PostgreSQL \u4e2d\u6709\u529f\u80fd\u7c7b\u4f3c\u7684\u51fd\u6570\u4f46\u662f\u51fd\u6570\u540d\u4e0d\u540c\uff0c\u4f7f\u7528\u65b9\u5f0f\u4e5f\u6709\u7ec6\u5fae\u5dee\u522b\u3002\\n\\n```go\\ncursor2, err := db.Table(\\"pull_requests pr1\\").\\n\\t\\tJoins(\\"left join pull_requests pr2 on pr1.parent_pr_id = pr2.id\\").Group(\\"pr1.parent_pr_id, pr2.created_date\\").Where(\\"pr1.parent_pr_id != \'\'\\").\\n\\t\\tJoins(\\"left join repos on pr2.base_repo_id = repos.id\\").\\n\\t\\tOrder(\\"pr2.created_date ASC\\").\\n\\t\\tSelect(`pr2.key as parent_pr_key, pr1.parent_pr_id as parent_pr_id, GROUP_CONCAT(pr1.base_ref order by pr1.base_ref ASC) as cherrypick_base_branches, \\n\\t\\t\\tGROUP_CONCAT(pr1.key order by pr1.base_ref ASC) as cherrypick_pr_keys, repos.name as repo_name, \\n\\t\\t\\tconcat(repos.url, \'/pull/\', pr2.key) as parent_pr_url`).Rows()\\n```\\n\u89e3\u51b3\u65b9\u6848\uff1a\\n\u6211\u4eec\u6700\u7ec8\u51b3\u5b9a\u628a` GROUP_CONCAT `\u51fd\u6570\u7684\u529f\u80fd\u62c6\u5206\u6210\u4e24\u6b65\uff0c\u5148\u7528\u6700\u7b80\u5355\u7684 SQL \u67e5\u8be2\u5f97\u5230\u6392\u5e8f\u597d\u7684\u591a\u6761\u6570\u636e\uff0c\u7136\u540e\u7528\u4ee3\u7801\u505a\u805a\u5408\u3002\\n\\n\\n\u4fee\u6539\u540e\uff1a\\n```go\\ncursor2, err := db.Raw(\\n\\t\\t`\\n\\t\\t\\tSELECT pr2.pull_request_key                 AS parent_pr_key,\\n\\t\\t\\t       pr1.parent_pr_id                     AS parent_pr_id,\\n\\t\\t\\t       pr1.base_ref                         AS cherrypick_base_branch,\\n\\t\\t\\t       pr1.pull_request_key                 AS cherrypick_pr_key,\\n\\t\\t\\t       repos.NAME                           AS repo_name,\\n\\t\\t\\t       Concat(repos.url, \'/pull/\', pr2.pull_request_key) AS parent_pr_url,\\n \\t\\t\\t\\t   pr2.created_date\\n\\t\\t\\tFROM   pull_requests pr1\\n\\t\\t\\t       LEFT JOIN pull_requests pr2\\n\\t\\t\\t              ON pr1.parent_pr_id = pr2.id\\n\\t\\t\\t       LEFT JOIN repos\\n\\t\\t\\t              ON pr2.base_repo_id = repos.id\\n\\t\\t\\tWHERE  pr1.parent_pr_id != \'\'\\n\\t\\t\\tORDER  BY pr1.parent_pr_id,\\n\\t\\t\\t          pr2.created_date,\\n\\t\\t\\t\\t\\t  pr1.base_ref ASC\\n\\t\\t\\t`).Rows()\\n```\\n\\n**4\u3001\u8bed\u6cd5\u5dee\u5f02**\\n\\n### \u53cd\u5f15\u53f7\\n\u67d0\u4e9b SQL \u8bed\u53e5\u4e2d\u6211\u4eec\u4f7f\u7528\u4e86\u53cd\u5f15\u53f7\uff0c\u7528\u6765\u4fdd\u62a4\u5b57\u6bb5\u540d\uff0c\u4ee5\u514d\u8ddf MySQL \u4fdd\u7559\u5b57\u6709\u51b2\u7a81\uff0c\u8fd9\u79cd\u505a\u6cd5\u5728 PostgreSQL \u4f1a\u5bfc\u81f4\u8bed\u6cd5\u9519\u8bef\u3002\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u6211\u4eec\u91cd\u65b0\u5ba1\u89c6\u4e86\u6211\u4eec\u7684\u4ee3\u7801\uff0c\u628a\u6240\u6709\u8ddf\u4fdd\u7559\u5b57\u51b2\u7a81\u7684\u5b57\u6bb5\u540d\u505a\u4e86\u4fee\u6539\uff0c\u540c\u65f6\u53bb\u6389\u4e86 SQL \u8bed\u53e5\u4e2d\u7684\u53cd\u5f15\u53f7\u3002\u4f8b\u5982\u521a\u624d\u63d0\u5230\u7684\u8fd9\u4e2a\u4f8b\u5b50\uff1a\\n```go\\ndb.Where(\\"merge_request_id = ? AND `system` = ?\\", gitlabMr.GitlabId, false)\\n```\\n\u89e3\u51b3\u65b9\u6848\uff1a\u6211\u4eec\u628a`system`\u6539\u4e2a\u540d\u5b57`is_system`\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u628a\u53cd\u5f15\u53f7\u53bb\u6389\u3002\\n```go\\ndb.Where(\\"merge_request_id = ? AND is_system = ?\\", gitlabMr.GitlabId, false)\\n```\\n### \u4e0d\u89c4\u8303\u7684\u5220\u9664\u8bed\u53e5\\n\u6211\u4eec\u7684\u4ee3\u7801\u4e2d\u66fe\u7ecf\u51fa\u73b0\u8fc7\u8fd9\u79cd\u5220\u9664\u8bed\u53e5\uff0c\u8fd9\u5728 MySQL \u4e2d\u662f\u5408\u6cd5\u7684\uff0c\u4f46\u662f\u5728 PostgreSQL \u4e2d\u4f1a\u62a5\u8bed\u6cd5\u9519\u8bef\u3002\\n```go\\nerr := db.Exec(`\\n\\tDELETE ic\\n\\tFROM jira_issue_commits ic\\n\\tLEFT JOIN jira_board_issues bi ON (bi.source_id = ic.source_id AND bi.issue_id = ic.issue_id)\\n\\tWHERE ic.source_id = ? AND bi.board_id = ?\\n\\t`, sourceId, boardId).Error\\n```\\n\u89e3\u51b3\u65b9\u6848\uff1a\u6211\u4eec\u628a` DELETE `\u540e\u9762\u7684\u8868\u522b\u540d\u53bb\u6389\u5c31\u53ef\u4ee5\u4e86\u3002\\n\\n**\u4e86\u89e3\u66f4\u591a\u6700\u65b0\u52a8\u6001**\\n\\n\u5b98\u7f51\uff1a[https://devlake.incubator.apache.org/](https://devlake.incubator.apache.org/)\\n\\nGitHub\uff1a[https://github.com/apache/incubator-devlake/](https://github.com/apache/incubator-devlake/)\\n\\nSlack\uff1a\u901a\u8fc7 [Slack](https://devlake-io.slack.com/join/shared_invite/zt-18uayb6ut-cHOjiYcBwERQ8VVPZ9cQQw#/shared-invite/email) \u8054\u7cfb\u6211\u4eec"},{"id":"how-DevLake-is-up-and-running","metadata":{"permalink":"/blog/how-DevLake-is-up-and-running","editUrl":"https://github.com/apache/incubator-devlake-website/edit/main/blog/2022-06-17-How DevLake is up and running/index.md","source":"@site/blog/2022-06-17-How DevLake is up and running/index.md","title":"How DevLake is Up and Running","description":"Apache DevLake is an integration tool with the DevOps data collection functionality, which presents a different stage of data to development teams via Grafana. which also can leverage teams to improve the development process with a data-driven model.","date":"2022-06-17T00:00:00.000Z","formattedDate":"June 17, 2022","tags":[{"label":"devlake","permalink":"/blog/tags/devlake"},{"label":"apache","permalink":"/blog/tags/apache"}],"readingTime":3.466666666666667,"hasTruncateMarker":true,"authors":[{"name":"Danna Wang","title":"DevLake Contributor","url":"https://github.com/banshengbushu","imageURL":"https://github.com/banshengbushu.png","key":"Danna"}],"frontMatter":{"slug":"how-DevLake-is-up-and-running","title":"How DevLake is Up and Running","authors":"Danna","tags":["devlake","apache"]},"prevItem":{"title":"Apache DevLake \u517c\u5bb9 PostgreSQL \u8e29\u5751\u5c0f\u7ed3","permalink":"/blog/some-practices-of-supporting-postgresql"},"nextItem":{"title":"Apache DevLake\u4ee3\u7801\u5e93\u5bfc\u89c8","permalink":"/blog/apache-devlake-codebase-walkthrough"}},"content":"[Apache DevLake](https://github.com/apache/incubator-devlake) is an integration tool with the DevOps data collection functionality, which presents a different stage of data to development teams via Grafana. which also can leverage teams to improve the development process with a data-driven model.\\n\\n### Apache DevLack Architecture Overview\\n- The left side of the following screenshot is an [integrative DevOps data plugin](https://devlake.apache.org/docs/DataModels/DataSupport), the existing plugins include Github, GitLab, JIRA, Jenkins, Tapd, Feishu, and the most featured analysis engine in the Simayi platform.\\n- The main framework in the middle of the following screenshot, completes data collection, expansion, and conversion to the domain layer by running subtasks in the plugins. The user can trigger the tasks by config-UI or all API.\\n- RMDBS currently supports Mysql and PostgresSQL, more databases will be supported in the future.\\n- Grafana can generate different types of needed data by using SQL.\\n\\n![Generated](Aspose.Words.093a76ac-457b-4498-a472-7dbea580bca9.001.png)\\n\\n> Then let\u2019s move on to how to start running DevLake.\\n\\n\x3c!--truncate--\x3e\\n\\n### Start the system\\nBefore the Golang program runs, it will automatically call the init() method in the package. We need to focus on the loading of the services package. The following code has detailed comments:\\n```go\\nfunc init() {\\nvar err error\\n// get initial config information\\ncfg = config.GetConfig()\\n// get Database\\ndb, err = runner.NewGormDb(cfg, logger.Global.Nested(\\"db\\"))\\n// configure time zone\\nlocation := cron.WithLocation(time.UTC)\\n// create scheduled task manager\\ncronManager = cron.New(location)\\nif err != nil {\\npanic(err)\\n}\\n// initialize the data migration\\nmigration.Init(db)\\n// register the framework\'s data migration scripts\\nmigrationscripts.RegisterAll()\\n// load plugin, loads all .so files in the folder cfg.GetString(\\"PLUGIN_DIR\\")\uff0cin th LoadPlugins method()\uff0cspecifically, LoadPlugins stores the pluginName:PluginMeta key-value pair into core.plugins by calling runner.\\nerr = runner.LoadPlugins(\\ncfg.GetString(\\"PLUGIN_DIR\\"),\\ncfg,\\nlogger.Global.Nested(\\"plugin\\"),\\ndb,\\n)\\nif err != nil {\\npanic(err)\\n}\\n// run data migration scripts to complete the initializztion work of tables in the databse framework layer.\\nerr = migration.Execute(context.Background())\\nif err != nil {\\npanic(err)\\n}\\n\\n// call service init\\npipelineServiceInit()\\n}\\n\\n```\\n### The execution principle of DevLake\\n**The running process of the pipeline**\\nBefore we go through the pipeline process, we need to know the [Blueprint](https://devlake.apache.org/docs/Glossary#blueprints) first.\\n\\nBlueprint is a timed task that contains all the subtasks and plans that need to be executed. Each execution record of Blueprint is a historical run, AKA Pipeline. Which presents a trigger for DevLack to complete one or more data collection transformation tasks through one or more plugins.\\n\\n![Generated](Aspose.Words.093a76ac-457b-4498-a472-7dbea580bca9.002.png)\\n\\nThe following is the pipeline running flow chart.\\n\\n![Generated](Aspose.Words.093a76ac-457b-4498-a472-7dbea580bca9.003.png)\\n\\nA pipeline contains a two-dimensional array of tasks, mainly to ensure that a series of tasks are executed in a preset order. Like the following screenshot if the plugin of Stage 3 needs to rely on the other plugin to prepare the data(eg: the operation of refdiff needs to rely on gitextractor and Github, for more information on data sources and plugins, please refer to the [documentation](https://devlake.apache.org/docs/DataModels/DataSupport), then when Stage 3 starts to execute, it needs to ensure that its dependencies have been executed in Stage 1 and Stage 2.\\n\\n![Generated](Aspose.Words.093a76ac-457b-4498-a472-7dbea580bca9.004.png)\\n\\n**Task running process**\\n\\nThe plugin tasks in stage1, stage2, and stage3 are executed in parallel:\\n\\n![Generated](Aspose.Words.093a76ac-457b-4498-a472-7dbea580bca9.005.png)\\n\\n**The next step is to execute the subtasks in the plugin sequentially.**\\n\\n![Generated](Aspose.Words.093a76ac-457b-4498-a472-7dbea580bca9.006.png)\\n\\n1. The work before the RunTask is to prepare the params for the RunTask method to call, like logger, db, context and etc.\\n2. The main method of RunTask is mainly to update the tasks in the Database, at the same time prepare to run the options of the plugins task.\\n3. RunpluginTask will obtain the corresponding  [PluginMeta](#pm) through core.Getplugin(pluginName), then obtains the [PluginTask](#pt) via PluginMeta, and then executes RunPluginSubTasks.\\n\\n**The running process of each plugin subtask(the relevant interface and func will be explained in the next section)**\\n\\n![Generated](Aspose.Words.093a76ac-457b-4498-a472-7dbea580bca9.007.png)\\n\\n1. Get all available subtasks subtaskMeta of all th4e plugins by calling SubTaskMetas().\\n2. Use options[\u2018task\u2019] and subtaskMeta to form a set of subtasks to be executed subtaskMetas.\\n3. Calculate how many subtasks in total\\n4. Build taskCtx via helper.NewDefaultTaskContext.\\n5. Build taskData via call pluginTask.PrepareTaskData.\\n6. Iterate over all subtasks in subtaskMetas.\\n    1. Get subtaskCtx of subtask via call taskCtx.SubTaskContext(subtaskMeta.Name).\\n    2. Run subtaskMeta.EntryPoint(subtaskCtx)\\n## Important interfaces in DevLake\\n1. <a id=\\"pm\\">PluginMeta</a>: Contains the two basic methods of plugins, which all plugins need to implement. And stored in core.plugins when the system starts. And obtained through core.GetPlugin when executing plugin tasks.\\n\\n```go\\ntype PluginMeta interface {\\n   Description() string\\n   //PkgPath information will be lost when compiled as plugin(.so), this func will return that info\\n   RootPkgPath() string\\n}\\n\\n```\\n\\n2. <a id=\\"pt\\">PluginTask</a>: It can be obtained by PluginMeta, after the plugin implemented this method, Framework can run the subtask directly, instead of letting the plugin itself run it, the biggest benefit of this is that the subtasks of the plugin are easier to implement, and we can more easily leverage(such as adding logs, etc.) during the operation of the plugin.\\n\\n```go\\ntype PluginTask interface {\\n   // return all available subtasks, framework will run them for you in order\\n   SubTaskMetas() []SubTaskMeta\\n   // based on task context and user input options, return data that shared among all subtasks\\n   PrepareTaskData(taskCtx TaskContext, options map[string]interface{}) (interface{}, error)\\n}\\n```\\n\\n3. Every plugin has a <a id=\\"td\\">taskData</a>, which contains configuration options, apiClient, and other properties of plugins.(like the github has repo information)\\n4. <a id=\\"stm\\">SubTaskMeta</a>:: the meta data of a subtask, every subtask will define a SubTaskMeta.\\n\\n```go\\nvar CollectMeetingTopUserItemMeta = core.SubTaskMeta{\\n   Name: \\"collectMeetingTopUserItem\\",\\n   EntryPoint: CollectMeetingTopUserItem,\\n   EnabledByDefault: true,\\n   Description: \\"Collect top user meeting data from Feishu api\\",\\n}\\n```\\n\\n5. <a id=\\"ec\\">ExecContext</a>: defines all resources needed to execute (sub)tasks.\\n6. <a id=\\"stc\\">SubTaskContext</a>: defines all resources need to execute subtask(including ExecContext).\\n7. <a id=\\"tc\\">TaskContext</a>: defines all resources need to execute tasks(including ExecContext). The difference with SubTaskContext is the TaskContext() method in SubTaskContext can retire TaskContext, but SubTaskContext(subtask string) method in TaskContext can return SubTaskContext, which means the subtask belongs to the plugin task, so we use the different contexts to distinguish this.\\n8. <a id=\\"step\\">SubTaskEntryPoint</a>: all the subtasks in the plugin have to implement this function so that they can be coordinated and arranged by the framework layer.\\n\\n## Further Plan\\nThis blog introduced the basics of the DevLack framework and how it starts and runs, there are 3 more contexts api\\\\_collector, api\\\\_extractor, and data\\\\_convertor will be explained in the next blog."},{"id":"apache-devlake-codebase-walkthrough","metadata":{"permalink":"/blog/apache-devlake-codebase-walkthrough","editUrl":"https://github.com/apache/incubator-devlake-website/edit/main/blog/2022-06-06-Apache-Devlake\u4ee3\u7801\u5e93\u5bfc\u89c8/index.md","source":"@site/blog/2022-06-06-Apache-Devlake\u4ee3\u7801\u5e93\u5bfc\u89c8/index.md","title":"Apache DevLake\u4ee3\u7801\u5e93\u5bfc\u89c8","description":"Apache DevLake\u662f\u4ec0\u4e48\uff1f","date":"2022-06-06T00:00:00.000Z","formattedDate":"June 6, 2022","tags":[{"label":"devlake","permalink":"/blog/tags/devlake"},{"label":"codebase","permalink":"/blog/tags/codebase"}],"readingTime":8.346666666666666,"hasTruncateMarker":false,"authors":[{"name":"abeizn","title":"Apache DevLake Committer","url":"https://github.com/abeizn","imageURL":"https://github.com/abeizn.png","key":"abeizn"}],"frontMatter":{"slug":"apache-devlake-codebase-walkthrough","title":"Apache DevLake\u4ee3\u7801\u5e93\u5bfc\u89c8","authors":"abeizn","tags":["devlake","codebase"]},"prevItem":{"title":"How DevLake is Up and Running","permalink":"/blog/how-DevLake-is-up-and-running"},"nextItem":{"title":"\u5982\u4f55\u8d21\u732eissues","permalink":"/blog/how-to-contribute-to-issues"}},"content":"### Apache DevLake\u662f\u4ec0\u4e48\uff1f\\n\u7814\u53d1\u6570\u636e\u6563\u843d\u5728\u8f6f\u4ef6\u7814\u53d1\u751f\u547d\u5468\u671f\u7684\u4e0d\u540c\u9636\u6bb5\u3001\u4e0d\u540c\u5de5\u4f5c\u6d41\u3001\u4e0d\u540cDevOps\u5de5\u5177\u4e2d\uff0c\u4e14\u6807\u51c6\u5316\u7a0b\u5ea6\u4f4e\uff0c\u5bfc\u81f4\u6548\u80fd\u6570\u636e\u96be\u4ee5\u7559\u5b58\u3001\u6c47\u96c6\u5e76\u8f6c\u5316\u4e3a\u6709\u6548\u6d1e\u89c1\u3002\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e00\u75db\u70b9\uff0c[Apache DevLake](https://github.com/apache/incubator-devlake) \u5e94\u8fd0\u800c\u751f\u3002Apache DevLake\u662f\u4e00\u6b3e\u5f00\u6e90\u7684\u7814\u53d1\u6570\u636e\u5e73\u53f0\uff0c\u5b83\u901a\u8fc7\u63d0\u4f9b\u81ea\u52a8\u5316\u3001\u4e00\u7ad9\u5f0f\u7684\u6570\u636e\u6536\u96c6\u3001\u5206\u6790\u4ee5\u53ca\u53ef\u89c6\u5316\u80fd\u529b\uff0c\u5e2e\u52a9\u7814\u53d1\u56e2\u961f\u66f4\u597d\u5730\u7406\u89e3\u5f00\u53d1\u8fc7\u7a0b\uff0c\u6316\u6398\u5173\u952e\u74f6\u9888\u4e0e\u63d0\u6548\u673a\u4f1a\u3002\\n\\n\\n### Apache DevLake\u67b6\u6784\u6982\u8ff0\\n![img](Architecture_Diagram.png)\\n<center>Apache DevLake \u67b6\u6784\u56fe</center> \\n<br />\\n\\n- Config UI: \u4eba\u5982\u5176\u540d\uff0c\u914d\u7f6e\u7684\u53ef\u89c6\u5316\uff0c\u5176\u4e3b\u8981\u627f\u8f7dApache DevLake\u7684\u914d\u7f6e\u5de5\u4f5c\u3002\u901a\u8fc7Config UI\uff0c\u7528\u6237\u53ef\u4ee5\u5efa\u7acb\u6570\u636e\u6e90\u8fde\u63a5\uff0c\u5e76\u5b9e\u73b0\u6570\u636e\u7684\u6536\u96c6\u8303\u56f4\uff0c\u90e8\u5206\u6570\u636e\u7684\u8f6c\u6362\u89c4\u5219\uff0c\u4ee5\u53ca\u6536\u96c6\u9891\u7387\u7b49\u4efb\u52a1\u3002\\n- Api Sever\uff1aApache DevLake\u7684Api\u63a5\u53e3\uff0c\u662f\u524d\u7aef\u8c03\u7528\u540e\u7aef\u6570\u636e\u7684\u901a\u9053\u3002\\n- Runner\uff1aApache DevLake\u8fd0\u884c\u7684\u5e95\u5c42\u652f\u6491\u673a\u5236\u3002\\n- Plugins\uff1a\u5177\u4f53\u6267\u884c\u7684\u63d2\u4ef6\u4e1a\u52a1\uff0c\u4e3b\u8981\u627f\u8f7dApache DevLake\u7684\u540e\u7aef\u6570\u636e\u6536\u96c6\u3001\u6269\u5c55\u548c\u8f6c\u6362\u7684\u5de5\u4f5c\u3002\u9664dbt\u63d2\u4ef6\u5916\u7684\u63d2\u4ef6\u4ea7\u51faApache DevLake\u7684\u9884\u7f6e\u6570\u636e\uff0c\u9884\u7f6e\u6570\u636e\u4e3b\u8981\u5305\u62ec\u4e09\u5c42\uff1b\\n    - raw layer\uff1a\u8d1f\u8d23\u50a8\u5b58\u6700\u539f\u59cb\u7684api response json\u3002\\n    - tool layer\uff1a\u6839\u636eraw layer\u63d0\u53d6\u51fa\u6b64\u63d2\u4ef6\u6240\u9700\u7684\u6570\u636e\u3002\\n    - domain layer\uff1a\u6839\u636etool layer\u5c42\u62bd\u8c61\u51fa\u5171\u6027\u7684\u6570\u636e\uff0c\u8fd9\u4e9b\u6570\u636e\u4f1a\u88ab\u4f7f\u7528\u5728Grafana\u56fe\u8868\u4e2d\uff0c\u7528\u4e8e\u591a\u79cd\u7814\u53d1\u6307\u6807\u7684\u5c55\u793a\u3002\\n- RDBS: \u5173\u7cfb\u578b\u6570\u636e\u5e93\u3002\u76ee\u524dApache DavLake\u652f\u6301MySQL\u548cPostgreSQL\uff0c\u540e\u671f\u8fd8\u4f1a\u7ee7\u7eed\u652f\u6301\u66f4\u591a\u7684\u6570\u636e\u5e93\u3002\\n- Grafana Dashboards: \u5176\u4e3b\u8981\u627f\u8f7dApache DevLake\u7684\u524d\u7aef\u5c55\u793a\u5de5\u4f5c\u3002\u6839\u636eApache DevLake\u6536\u96c6\u7684\u6570\u636e\uff0c\u901a\u8fc7sql\u8bed\u53e5\u6765\u751f\u6210\u56e2\u961f\u9700\u8981\u7684\u4ea4\u4ed8\u6548\u7387\u3001\u8d28\u91cf\u3001\u6210\u672c\u3001\u80fd\u529b\u7b49\u5404\u79cd\u7814\u53d1\u6548\u80fd\u6307\u6807\u3002\\n\\n### \u76ee\u5f55\u7ed3\u6784Tree\\n```\\n\u251c\u2500\u2500 api\\n\u2502\xa0\xa0 \u251c\u2500\u2500 blueprints\\n\u2502\xa0\xa0 \u251c\u2500\u2500 docs\\n\u2502\xa0\xa0 \u251c\u2500\u2500 domainlayer\\n\u2502\xa0\xa0 \u251c\u2500\u2500 ping\\n\u2502\xa0\xa0 \u251c\u2500\u2500 pipelines\\n\u2502\xa0\xa0 \u251c\u2500\u2500 push\\n\u2502\xa0\xa0 \u251c\u2500\u2500 shared\\n\u2502\xa0\xa0 \u251c\u2500\u2500 task\\n\u2502\xa0\xa0 \u2514\u2500\u2500 version\\n\u251c\u2500\u2500 config\\n\u251c\u2500\u2500 config-ui\\n\u251c\u2500\u2500 devops\\n\u2502\xa0\xa0 \u2514\u2500\u2500 lake-builder\\n\u251c\u2500\u2500 e2e\\n\u251c\u2500\u2500 errors\\n\u251c\u2500\u2500 grafana\\n\u2502\xa0\xa0 \u251c\u2500\u2500 _archive\\n\u2502\xa0\xa0 \u251c\u2500\u2500 dashboards\\n\u2502\xa0\xa0 \u251c\u2500\u2500 img\\n\u2502\xa0\xa0 \u2514\u2500\u2500 provisioning\\n\u2502\xa0\xa0     \u251c\u2500\u2500 dashboards\\n\u2502\xa0\xa0     \u2514\u2500\u2500 datasources\\n\u251c\u2500\u2500 img\\n\u251c\u2500\u2500 logger\\n\u251c\u2500\u2500 logs\\n\u251c\u2500\u2500 migration\\n\u251c\u2500\u2500 models\\n\u2502\xa0\xa0 \u251c\u2500\u2500 common\\n\u2502\xa0\xa0 \u251c\u2500\u2500 domainlayer\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 code\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 crossdomain\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 devops\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 didgen\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 ticket\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 user\\n\u2502\xa0\xa0 \u2514\u2500\u2500 migrationscripts\\n\u2502\xa0\xa0     \u2514\u2500\u2500 archived\\n\u251c\u2500\u2500 plugins\\n\u2502\xa0\xa0 \u251c\u2500\u2500 ae\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 api\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 models\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 migrationscripts\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0     \u2514\u2500\u2500 archived\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 tasks\\n\u2502\xa0\xa0 \u251c\u2500\u2500 core\\n\u2502\xa0\xa0 \u251c\u2500\u2500 dbt\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 tasks\\n\u2502\xa0\xa0 \u251c\u2500\u2500 feishu\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 apimodels\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 models\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 migrationscripts\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0     \u2514\u2500\u2500 archived\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 tasks\\n\u2502\xa0\xa0 \u251c\u2500\u2500 gitextractor\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 models\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 parser\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 store\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 tasks\\n\u2502\xa0\xa0 \u251c\u2500\u2500 github\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 api\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 models\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 migrationscripts\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0     \u2514\u2500\u2500 archived\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 tasks\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 utils\\n\u2502\xa0\xa0 \u251c\u2500\u2500 gitlab\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 api\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 e2e\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 tables\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 impl\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 models\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 migrationscripts\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0     \u2514\u2500\u2500 archived\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 tasks\\n\u2502\xa0\xa0 \u251c\u2500\u2500 helper\\n\u2502\xa0\xa0 \u251c\u2500\u2500 jenkins\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 api\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 models\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 migrationscripts\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0     \u2514\u2500\u2500 archived\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 tasks\\n\u2502\xa0\xa0 \u251c\u2500\u2500 jira\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 api\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 models\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 migrationscripts\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0     \u2514\u2500\u2500 archived\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 tasks\\n\u2502\xa0\xa0 \u2502\xa0\xa0     \u2514\u2500\u2500 apiv2models\\n\u2502\xa0\xa0 \u251c\u2500\u2500 refdiff\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 tasks\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 utils\\n\u2502\xa0\xa0 \u2514\u2500\u2500 tapd\\n\u2502\xa0\xa0     \u251c\u2500\u2500 api\\n\u2502\xa0\xa0     \u251c\u2500\u2500 models\\n\u2502\xa0\xa0     \u2502\xa0\xa0 \u2514\u2500\u2500 migrationscripts\\n\u2502\xa0\xa0     \u2502\xa0\xa0     \u2514\u2500\u2500 archived\\n\u2502\xa0\xa0     \u2514\u2500\u2500 tasks\\n\u251c\u2500\u2500 releases\\n\u2502\xa0\xa0 \u251c\u2500\u2500 lake-v0.10.0\\n\u2502\xa0\xa0 \u251c\u2500\u2500 lake-v0.10.0-beta1\\n\u2502\xa0\xa0 \u251c\u2500\u2500 lake-v0.10.1\\n\u2502\xa0\xa0 \u251c\u2500\u2500 lake-v0.7.0\\n\u2502\xa0\xa0 \u251c\u2500\u2500 lake-v0.8.0\\n\u2502\xa0\xa0 \u2514\u2500\u2500 lake-v0.9.0\\n\u251c\u2500\u2500 runner\\n\u251c\u2500\u2500 scripts\\n\u251c\u2500\u2500 services\\n\u251c\u2500\u2500 test\\n\u2502\xa0\xa0 \u251c\u2500\u2500 api\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 task\\n\u2502\xa0\xa0 \u2514\u2500\u2500 example\\n\u251c\u2500\u2500 testhelper\\n\u251c\u2500\u2500 utils\\n\u251c\u2500\u2500 version\\n\u251c\u2500\u2500 worker\\n\u251c\u2500\u2500 Dockerfile\\n\u251c\u2500\u2500 docker-compose.yml\\n\u251c\u2500\u2500 docker-compose-temporal.yml\\n\u251c\u2500\u2500 k8s-deploy.yaml\\n\u251c\u2500\u2500 Makefile\\n\u2514\u2500\u2500 .env.exemple\\n   \\n\\n```\\n\\n### \u76ee\u5f55\u5bfc\u89c8\\n- \u540e\u7aef\u90e8\u5206\uff1a\\n  - config\uff1a\u5bf9.env\u914d\u7f6e\u6587\u4ef6\u7684\u8bfb\u3001\u5199\u4ee5\u53ca\u4fee\u6539\u7684\u64cd\u4f5c\u3002\\n  - logger\uff1alog\u65e5\u5fd7\u7684level\u3001format\u7b49\u8bbe\u7f6e\u3002\\n  - errors\uff1aError\u7684\u5b9a\u4e49\u3002\\n  - utils\uff1a\u5de5\u5177\u5305\uff0c\u5b83\u5305\u542b\u4e00\u4e9b\u57fa\u7840\u901a\u7528\u7684\u51fd\u6570\u3002\\n  - runner\uff1a\u63d0\u4f9b\u57fa\u7840\u6267\u884c\u670d\u52a1\uff0c\u5305\u62ec\u6570\u636e\u5e93\uff0ccmd\uff0cpipelines\uff0ctasks\u4ee5\u53ca\u52a0\u8f7d\u7f16\u8bd1\u540e\u7684\u63d2\u4ef6\u7b49\u57fa\u7840\u670d\u52a1\u3002\\n  - models\uff1a\u5b9a\u4e49\u6846\u67b6\u7ea7\u522b\u7684\u5b9e\u4f53\u3002\\n    - common\uff1a\u57fa\u7840struct\u5b9a\u4e49\u3002\\n    - [domainlayer](https://devlake.apache.org/docs/DataModels/DevLakeDomainLayerSchema)\uff1a\u9886\u57df\u5c42\u662f\u6765\u81ea\u4e0d\u540c\u5de5\u5177\u6570\u636e\u7684\u901a\u7528\u62bd\u8c61\u3002\\n      - ticket\uff1aIssue Tracking\uff0c\u5373\u95ee\u9898\u8ddf\u8e2a\u9886\u57df\u3002\\n      - code\uff1a\u5305\u62ecSource Code\u6e90\u4ee3\u7801\u5173\u8054\u9886\u57df\u3002\u4ee5\u53caCode Review\u4ee3\u7801\u5ba1\u67e5\u9886\u57df\u3002\\n      - devops\uff1aCI/CD\uff0c\u5373\u6301\u7eed\u96c6\u6210\u3001\u6301\u7eed\u4ea4\u4ed8\u548c\u6301\u7eed\u90e8\u7f72\u9886\u57df\u3002\\n      - crossdomain\uff1a\u8de8\u57df\u5b9e\u4f53\uff0c\u8fd9\u4e9b\u5b9e\u4f53\u7528\u4e8e\u5173\u8054\u4e0d\u540c\u9886\u57df\u4e4b\u95f4\u7684\u5b9e\u4f53\uff0c\u8fd9\u662f\u5efa\u7acb\u5168\u65b9\u9762\u5206\u6790\u7684\u57fa\u7840\u3002\\n      - user\uff1a\u5bf9\u7528\u6237\u7684\u62bd\u8c61\u9886\u57df\uff0cuser\u4e5f\u5c5e\u4e8ecrossdomain\u8303\u7574\u3002\\n    - migrationscripts\uff1a\u521d\u59cb\u5316\u5e76\u66f4\u65b0\u6570\u636e\u5e93\u3002\\n  - plugins\uff1a\\n    - core\uff1a\u63d2\u4ef6\u901a\u7528\u63a5\u53e3\u7684\u5b9a\u4e49\u4ee5\u53ca\u7ba1\u7406\u3002\\n    - helper\uff1a\u63d2\u4ef6\u901a\u7528\u5de5\u5177\u7684\u96c6\u5408\uff0c\u63d0\u4f9b\u63d2\u4ef6\u6240\u9700\u8981\u7684\u8f85\u52a9\u7c7b\uff0c\u5982api\u6536\u96c6\uff0c\u6570\u636eETL\uff0c\u65f6\u95f4\u5904\u7406\u7b49\u3002\\n      - \u7f51\u7edc\u8bf7\u6c42Api Client\u5de5\u5177\u3002\\n      - \u6536\u96c6\u6570\u636eCollector\u8f85\u52a9\u7c7b\uff0c\u6211\u4eec\u57fa\u4e8eapi\u76f8\u540c\u7684\u5904\u7406\u6a21\u5f0f\uff0c\u7edf\u4e00\u4e86\u5e76\u53d1\uff0c\u9650\u901f\u4ee5\u53ca\u91cd\u8bd5\u7b49\u529f\u80fd\uff0c\u6700\u7ec8\u5b9e\u73b0\u4e86\u4e00\u5957\u901a\u7528\u7684\u6846\u67b6\uff0c\u6781\u5927\u5730\u51cf\u5c11\u4e86\u5f00\u53d1\u548c\u7ef4\u62a4\u6210\u672c\u3002\\n      - \u63d0\u53d6\u6570\u636eExtractor\u8f85\u52a9\u7c7b\uff0c\u540c\u65f6\u4e5f\u5185\u5efa\u4e86\u6279\u91cf\u5904\u7406\u673a\u5236\u3002\\n      - \u8f6c\u6362\u6570\u636eConvertor\u8f85\u52a9\u7c7b\u3002\\n      - \u6570\u636e\u5e93\u5904\u7406\u5de5\u5177\u3002\\n      - \u65f6\u95f4\u5904\u7406\u5de5\u5177\u3002\\n      - \u51fd\u6570\u5de5\u5177\u3002\\n    - ae\uff1a\u5206\u6790\u5f15\u64ce\uff0c\u7528\u4e8e\u5bfc\u5165merico ae\u5206\u6790\u5f15\u64ce\u7684\u6570\u636e\u3002\\n    - feishu\uff1a\u6536\u96c6\u98de\u4e66\u6570\u636e\uff0c\u76ee\u524d\u4e3b\u8981\u662f\u83b7\u53d6\u4e00\u6bb5\u65f6\u95f4\u5185\u7ec4\u7ec7\u5185\u4f1a\u8bae\u4f7f\u7528\u7684top\u7528\u6237\u5217\u8868\u7684\u6570\u636e\u3002\\n    - github\uff1a\u6536\u96c6Github\u6570\u636e\u5e76\u8ba1\u7b97\u76f8\u5173\u6307\u6807\u3002\uff08\u5176\u4ed6\u7684\u5927\u90e8\u5206\u63d2\u4ef6\u7684\u76ee\u5f55\u7ed3\u6784\u548c\u5b9e\u73b0\u529f\u80fd\u548cgithub\u5927\u540c\u5c0f\u5f02\uff0c\u8fd9\u91cc\u4ee5github\u4e3a\u4f8b\u6765\u4ecb\u7ecd\uff09\u3002\\n      - github.go\uff1agithub\u542f\u52a8\u5165\u53e3\u3002\\n      - tasks\uff1a\u5177\u4f53\u6267\u884c\u76844\u7c7b\u4efb\u52a1\u3002\\n        - *_collector.go\uff1a\u6536\u96c6\u6570\u636e\u5230raw layer\u5c42\u3002\\n        - *_extractor.go\uff1a\u63d0\u53d6\u6240\u9700\u7684\u6570\u636e\u5230tool layer\u5c42\u3002\\n        - *_convertor.go\uff1a\u8f6c\u6362\u6240\u9700\u7684\u6570\u636e\u5230domain layer\u5c42\u3002\\n        - *_enricher.go\uff1adomain layer\u5c42\u66f4\u8fdb\u4e00\u6b65\u7684\u6570\u636e\u8ba1\u7b97\u8f6c\u6362\u3002\\n      - models\uff1a\u5b9a\u4e49github\u5bf9\u5e94\u5b9e\u4f53entity\u3002\\n      - api\uff1aapi\u63a5\u53e3\u3002\\n      - utils\uff1agithub\u63d0\u53d6\u7684\u4e00\u4e9b\u57fa\u672c\u901a\u7528\u51fd\u6570\u3002\\n    - gitextractor\uff1agit\u6570\u636e\u63d0\u53d6\u5de5\u5177\uff0c\u8be5\u63d2\u4ef6\u53ef\u4ee5\u4ece\u8fdc\u7aef\u6216\u672c\u5730git\u4ed3\u5e93\u63d0\u53d6commit\u548creference\u4fe1\u606f\uff0c\u5e76\u4fdd\u5b58\u5230\u6570\u636e\u5e93\u6216csv\u6587\u4ef6\u3002\u7528\u6765\u4ee3\u66ffgithub\u63d2\u4ef6\u6536\u96c6commit\u4fe1\u606f\u4ee5\u51cf\u5c11api\u8bf7\u6c42\u7684\u6570\u91cf\uff0c\u63d0\u9ad8\u6536\u96c6\u901f\u5ea6\u3002\\n    - refdiff\uff1a\u5728\u5206\u6790\u5f00\u53d1\u5de5\u4f5c\u4ea7\u751f\u4ee3\u7801\u91cf\u65f6\uff0c\u7ecf\u5e38\u9700\u8981\u77e5\u9053\u4e24\u4e2a\u7248\u672c\u4e4b\u95f4\u7684diff\u3002\u672c\u63d2\u4ef6\u57fa\u4e8e\u6570\u636e\u5e93\u4e2d\u5b58\u50a8\u7684commits\u7236\u5b50\u5173\u7cfb\u4fe1\u606f\uff0c\u63d0\u4f9b\u4e86\u8ba1\u7b97ref(branch/tag)\u4e4b\u95f4\u76f8\u5deecommits\u5217\u8868\u7684\u80fd\u529b\u3002\\n    - gitlab\uff1a\u6536\u96c6Gitlab\u6570\u636e\u5e76\u8ba1\u7b97\u76f8\u5173\u6307\u6807\u3002\\n    - jenkins\uff1a\u6536\u96c6jenkins\u7684build\u548cjob\u76f8\u5173\u6307\u6807\u3002\\n    - jira\uff1a\u6536\u96c6jira\u6570\u636e\u5e76\u8ba1\u7b97\u76f8\u5173\u6307\u6807\u3002\\n    - tapd\uff1a\u6536\u96c6tapd\u6570\u636e\u5e76\u8ba1\u7b97\u76f8\u5173\u6307\u6807\u3002\\n    - dbt\uff1a(data build tool)\u662f\u4e00\u6b3e\u6d41\u884c\u7684\u5f00\u6e90\u6570\u636e\u8f6c\u6362\u5de5\u5177\uff0c\u80fd\u591f\u901a\u8fc7SQL\u5b9e\u73b0\u6570\u636e\u8f6c\u5316\uff0c\u5c06\u547d\u4ee4\u8f6c\u5316\u4e3a\u8868\u6216\u8005\u89c6\u56fe\uff0c\u63d0\u5347\u6570\u636e\u5206\u6790\u5e08\u7684\u5de5\u4f5c\u6548\u7387\u3002Apache DevLake\u589e\u52a0\u4e86dbt\u63d2\u4ef6\uff0c\u7528\u4e8e\u6570\u636e\u5b9a\u5236\u7684\u9700\u8981\u3002\\n  - services\uff1a\u521b\u5efa\u3001\u7ba1\u7406Apache DevLake\u5404\u79cd\u670d\u52a1\uff0c\u5305\u542bnotifications\u3001blueprints\u3001pipelines\u3001tasks\u3001plugins\u7b49\u3002\\n  - api\uff1a\u4f7f\u7528Gin\u6846\u67b6\u642d\u5efa\u7684\u4e00\u4e2a\u901a\u7528Apache DevLake API\u670d\u52a1\u3002\\n- \u524d\u7aef\u90e8\u5206\uff1a\\n  - congfig-ui\uff1a\u4e3b\u8981\u662fApache DevLake\u7684\u63d2\u4ef6\u914d\u7f6e\u4fe1\u606f\u7684\u53ef\u89c6\u5316\u3002[\u4e00\u4e9b\u672f\u8bed\u7684\u89e3\u91ca](https://devlake.apache.org/docs/Glossary)\\n    - \u5e38\u89c4\u6a21\u5f0f \\n      - blueprints\u7684\u914d\u7f6e\u3002\\n      - data connections\u7684\u914d\u7f6e\u3002\\n      - transformation rules\u7684\u914d\u7f6e\u3002\\n    - \u9ad8\u7ea7\u6a21\u5f0f\uff1a\u4e3b\u8981\u662f\u901a\u8fc7json\u7684\u65b9\u5f0f\u6765\u8bf7\u6c42api\uff0c\u53ef\u9009\u62e9\u5bf9\u5e94\u7684\u63d2\u4ef6\uff0c\u5bf9\u5e94\u7684subtasks\uff0c\u4ee5\u53ca\u63d2\u4ef6\u6240\u9700\u8981\u7684\u5176\u4ed6\u4fe1\u606f\u3002\\n  - Grafana\uff1a\u5176\u4e3b\u8981\u627f\u8f7dApache DevLake\u7684\u524d\u7aef\u5c55\u793a\u5de5\u4f5c\u3002\u6839\u636e\u6536\u96c6\u7684\u6570\u636e\uff0c\u901a\u8fc7sql\u8bed\u53e5\u6765\u751f\u6210\u56e2\u961f\u9700\u8981\u7684\u5404\u79cd\u6570\u636e\u3002\u76ee\u524dsql\u4e3b\u8981\u7528domain layer\u5c42\u7684\u8868\u6765\u5b9e\u73b0\u901a\u7528\u6570\u636e\u5c55\u793a\u9700\u6c42\u3002\\n- migration\uff1a\u6570\u636e\u5e93\u8fc1\u79fb\u5de5\u5177\u3002\\n  - migration\uff1a\u6570\u636e\u5e93\u8fc1\u79fb\u5de5\u5177migration\u7684\u5177\u4f53\u5b9e\u73b0\u3002\\n  - models/migrationscripts\uff1adomian layer\u5c42\u7684\u6570\u636e\u5e93\u8fc1\u79fb\u811a\u672c\u3002\\n  - plugins/xxx/models/migrationscripts\uff1a\u63d2\u4ef6\u7684\u6570\u636e\u5e93\u8fc1\u79fb\u811a\u672c\u3002\u4e3b\u8981\u662f_raw_\u548c_tool_\u5f00\u5934\u7684\u6570\u636e\u5e93\u7684\u8fc1\u79fb\u3002\\n- \u6d4b\u8bd5\u90e8\u5206\uff1a\\n  - testhelper\u548cplugins\u4e0b\u7684*_test.go\u6587\u4ef6\uff1a\u5373\u5355\u5143\u6d4b\u8bd5\uff0c\u5c5e\u4e8e\u767d\u76d2\u6d4b\u8bd5\u8303\u7574\u3002\u9488\u5bf9\u76ee\u6807\u5bf9\u8c61\u81ea\u8eab\u7684\u903b\u8f91\uff0c\u6267\u884c\u8def\u5f84\u7684\u6b63\u786e\u6027\u8fdb\u884c\u6d4b\u8bd5\uff0c\u5982\u679c\u76ee\u6807\u5bf9\u8c61\u6709\u4f9d\u8d56\u5176\u5b83\u8d44\u6e90\u6216\u5bf9\u591f\u7528\uff0c\u91c7\u7528\u6ce8\u5165\u6216\u8005 mock \u7b49\u65b9\u5f0f\u8fdb\u884c\u6a21\u62df\uff0c\u53ef\u4ee5\u6bd4\u8f83\u65b9\u4fbf\u5730\u5236\u9020\u4e00\u4e9b\u96be\u4ee5\u590d\u73b0\u7684\u6781\u7aef\u60c5\u51b5\u3002\\n  - test\uff1a\u96c6\u6210\u6d4b\u8bd5\uff0c\u7070\u76d2\u6d4b\u8bd5\u8303\u7574\u3002\u5728\u5355\u5143\u6d4b\u8bd5\u7684\u57fa\u7840\u4e0a\uff0c\u5c06\u6240\u6709\u6a21\u5757\u6309\u7167\u8bbe\u8ba1\u8981\u6c42\uff08\u5982\u6839\u636e\u7ed3\u6784\u56fe\uff09\u7ec4\u88c5\u6210\u4e3a\u5b50\u7cfb\u7edf\u6216\u7cfb\u7edf\uff0c\u8fdb\u884c\u96c6\u6210\u6d4b\u8bd5\u3002\\n  - e2e\uff1a \u7aef\u5230\u7aef\u6d4b\u8bd5\uff0c\u5c5e\u4e8e\u9ed1\u76d2\u6d4b\u8bd5\u8303\u7574\u3002\u76f8\u5bf9\u4e8e\u5355\u5143\u6d4b\u8bd5\u66f4\u6ce8\u91cd\u4e8e\u76ee\u6807\u81ea\u8eab\uff0ce2e\u66f4\u91cd\u89c6\u76ee\u6807\u4e0e\u7cfb\u7edf\u5176\u5b83\u90e8\u5206\u4e92\u52a8\u7684\u6574\u4f53\u6b63\u786e\u6027\uff0c\u76f8\u5bf9\u4e8e\u5355\u5143\u6d4b\u8bd5\u7740\u91cd\u903b\u8f91\u6d4b\u8bd5\uff0ce2e\u4fa7\u91cd\u4e8e\u8f93\u51fa\u7ed3\u679c\u7684\u6b63\u786e\u6027\u3002\\n- \u7f16\u8bd1\uff0c\u53d1\u5e03\u90e8\u5206\uff1a\\n  - devops/lake-builder\uff1a mericodev/lake-builder\u7684docker\u6784\u5efa\u3002\\n  - Dockerfile\uff1a\u4e3b\u8981\u7528\u4e8e\u6784\u5efadevlake\u955c\u50cf\u3002\\n  - docker-compose.yml\uff1a\u662f\u7528\u4e8e\u5b9a\u4e49\u548c\u8fd0\u884c\u591a\u5bb9\u5668Docker\u5e94\u7528\u7a0b\u5e8f\u7684\u5de5\u5177\uff0c\u7528\u6237\u53ef\u4ee5\u4f7f\u7528YML\u6587\u4ef6\u6765\u914d\u7f6eApache DevLake\u6240\u9700\u8981\u7684\u670d\u52a1\u7ec4\u4ef6\u3002\\n  - docker-compose-temporal.yml\uff1aTemporal\u662f\u4e00\u4e2a\u5fae\u670d\u52a1\u7f16\u6392\u5e73\u53f0\uff0c\u4ee5\u5206\u5e03\u5f0f\u7684\u6a21\u5f0f\u6765\u90e8\u7f72Apache DevLake\uff0c\u76ee\u524d\u5904\u4e8e\u8bd5\u9a8c\u9636\u6bb5\uff0c\u4ec5\u4f9b\u53c2\u8003\u3002\\n  - worker\uff1aTemporal\u5206\u5e03\u5f0f\u90e8\u7f72\u5f62\u5f0f\u4e2d\u7684worker\u5b9e\u73b0\uff0c\u76ee\u524d\u5904\u4e8e\u8bd5\u9a8c\u9636\u6bb5\uff0c\u4ec5\u4f9b\u53c2\u8003\u3002\\n  - k8s-deploy.yaml\uff1aKubernetes\u662f\u4e00\u4e2a\u53ef\u79fb\u690d\u3001\u53ef\u6269\u5c55\u7684\u5f00\u6e90\u5e73\u53f0\uff0c\u7528\u4e8e\u7ba1\u7406\u5bb9\u5668\u5316\u7684\u5de5\u4f5c\u8d1f\u8f7d\u548c\u670d\u52a1\uff0c\u53ef\u4fc3\u8fdb\u58f0\u660e\u5f0f\u914d\u7f6e\u548c\u81ea\u52a8\u5316\u3002\u76ee\u524dApache DevLake\u5df2\u652f\u6301\u5728k8s\u96c6\u7fa4\u4e0a\u90e8\u7f72\u3002\\n  - Makefile\uff1a\u662f\u4e00\u4e2a\u5de5\u7a0b\u6587\u4ef6\u7684\u7f16\u8bd1\u89c4\u5219\uff0c\u63cf\u8ff0\u4e86\u6574\u4e2a\u5de5\u7a0b\u7684\u7f16\u8bd1\u548c\u94fe\u63a5\u7b49\u89c4\u5219\u3002\\n  - releases\uff1aApache DevLake\u5386\u53f2release\u7248\u672c\u7684\u914d\u7f6e\u6587\u4ef6\uff0c\u5305\u62ecdocker-compose.yml\u548cenv.example\u3002\\n  - scripts\uff1ashell\u811a\u672c\uff0c\u5305\u62ec\u7f16\u8bd1plugins\u811a\u672c\u3002\\n- \u5176\u4ed6\uff1a\\n  - img\uff1alogo\u3001\u793e\u533a\u5fae\u4fe1\u4e8c\u7ef4\u7801\u7b49\u56fe\u50cf\u4fe1\u606f\u3002\\n  - version\uff1a\u5b9e\u73b0\u7248\u672c\u663e\u793a\u7684\u652f\u6301\uff0c\u5728\u6b63\u5f0f\u7684\u955c\u50cf\u4e2d\u4f1a\u663e\u793a\u5bf9\u5e94release\u7684\u7248\u672c\u3002\\n  - .env.exemple\uff1a\u914d\u7f6e\u6587\u4ef6\u5b9e\u4f8b\uff0c\u5305\u62ecDB URL, LOG\u4ee5\u53ca\u5404\u63d2\u4ef6\u7684\u914d\u7f6e\u793a\u4f8b\u4fe1\u606f\u3002\\n\\n### \u5982\u4f55\u8054\u7cfb\u6211\u4eec\\n- Github\u5730\u5740\uff1ahttps://github.com/apache/incubator-devlake\\n- \u5b98\u7f51\u5730\u5740\uff1ahttps://devlake.apache.org/\\n- <a href=\\"https://join.slack.com/t/devlake-io/shared_invite/zt-18uayb6ut-cHOjiYcBwERQ8VVPZ9cQQw\\" target=\\"_blank\\">Slack</a>: \u901a\u8fc7Slack\u8054\u7cfb\\n- \u5fae\u4fe1\u8054\u7cfb:<br />\\n  ![img](wechat_community_barcode.png)"},{"id":"how-to-contribute-to-issues","metadata":{"permalink":"/blog/how-to-contribute-to-issues","editUrl":"https://github.com/apache/incubator-devlake-website/edit/main/blog/2022-05-20-\u5982\u4f55\u8d21\u732eissues/index.md","source":"@site/blog/2022-05-20-\u5982\u4f55\u8d21\u732eissues/index.md","title":"\u5982\u4f55\u8d21\u732eissues","description":"\u4e0a\u5468(2022-05-12)\uff0c\u6211\u4eec\u4ee5\u5148\u5230\u5148\u5f97\u7684\u65b9\u5f0f\u4e3a\u5927\u5bb6\u5217\u51fa\u4e86\u4e24\u4e2a\\"good first issue\\"\u3002","date":"2022-05-20T00:00:00.000Z","formattedDate":"May 20, 2022","tags":[{"label":"devlake","permalink":"/blog/tags/devlake"},{"label":"apache","permalink":"/blog/tags/apache"}],"readingTime":1.46,"hasTruncateMarker":false,"authors":[{"name":"Klesh Wong","title":"Apache DevLake PPMC","url":"https://kleshwong.com","imageURL":"https://github.com/klesh.png","key":"klesh"}],"frontMatter":{"slug":"how-to-contribute-to-issues","title":"\u5982\u4f55\u8d21\u732eissues","authors":"klesh","tags":["devlake","apache"]},"prevItem":{"title":"Apache DevLake\u4ee3\u7801\u5e93\u5bfc\u89c8","permalink":"/blog/apache-devlake-codebase-walkthrough"},"nextItem":{"title":"Apache Incubator Welcomes DevLake, A Dev-Data Platform Serving Developers","permalink":"/blog/apache-welcomes-devlake"}},"content":"\u4e0a\u5468(2022-05-12)\uff0c\u6211\u4eec\u4ee5\u5148\u5230\u5148\u5f97\u7684\u65b9\u5f0f\u4e3a\u5927\u5bb6\u5217\u51fa\u4e86\u4e24\u4e2a\\"good first issue\\"\u3002\\n\u8fd9\u5f88\u6709\u8da3\uff0c\u5b83\u4eec\u51e0\u4e4e\u7acb\u523b\u5c31\u88ab\u62ff\u8d70\u4e86......\\n\u4f46\u5bf9\u4e8e\u90a3\u4e9b\u6709\u5174\u8da3\u4f46\u6ca1\u6709\u5f97\u5230\u7684\u4eba\u6765\u8bf4\u53ef\u80fd\u5c31\u4e0d\u90a3\u4e48\u6709\u8da3\u4e86\u3002\\n\\n### \u6240\u4ee5...\\n\\n\u6211\u4eec\u51b3\u5b9a\uff0c\u4e0d\u518d\u6709\u7ade\u4e89\uff0c\u4f60\u53ef\u4ee5\u4ece\u6211\u4eec\u7684github issue pages\u4e2d\u6311\u9009\u4f60\u559c\u6b22\u7684issue\u3002\u5982\u679c\u6ca1\u6709\u4e86\uff0c\u751a\u81f3\u53ef\u4ee5\u521b\u5efa\u4f60\u81ea\u5df1\u7684\u3002\\n\u6211\u4eec\u6bd5\u7adf\u662f\u793e\u533a\uff01\\n\\n### \u600e\u4e48\u505a\u5462\uff1f\u8fd9\u5f88\u7b80\u5355!\\n\\n\u8fdb\u5165\u6211\u4eec\u7684[\u95ee\u9898\u9875\u9762](https://github.com/apache/incubator-devlake/issues?q=is%3Aopen+is%3Aissue+label%3A%22good+first+issue%22)\uff0c\u7136\u540e\u70b9\u51fb\u8fd9\u91cc\u3002\u6211\u4eec\u6240\u6709\u7684Good First Issue\u90fd\u5217\u5728\u8fd9\u91cc!\\n![good first issue](/img/Community/screenshots/issue_page_screenshot.png)\\n\\n- \u9996\u5148\uff0c\u5bfb\u627e\u73b0\u6709\u7684issues\uff0c\u627e\u5230\u4e00\u4e2a\u4f60\u559c\u6b22\u7684\u3002\\n  \u4f60\u53ef\u4ee5\u901a\u8fc7\u8bc4\u8bba\\"I\'ll take it!\\"\u6765\u9884\u8ba2\u5b83\u3002\\n  \u63a5\u4e0b\u6765\u4f60\u53ef\u4ee5\u5199\u4e00\u4efd\u201c\u653b\u7565\u201d\uff0c\u4ee5\u5c55\u793a\u4f60\u5bf9\u95ee\u9898\u7684\u7406\u89e3\u548c\u4f60\u5c06\u91c7\u53d6\u4ec0\u4e48\u6837\u7684\u6b65\u9aa4\u6765\u89e3\u51b3\u8fd9\u4e2aissue\uff0c\u7136\u540e\u5f00\u59cbCoding\u3002\\n\\n- \u5982\u679c\u6ca1\u6709GFI\u4e86\u600e\u4e48\u529e\uff1f\u521b\u9020\u4f60\u81ea\u5df1\u7684issue! \u73b0\u5728\uff0c\u901a\u8fc7\u67e5\u770b\u6211\u4eec\u7684\u4ee3\u7801\u5e93\u3002\\n  \u4f60\u80af\u5b9a\u80fd\u53d1\u73b0\u5f88\u591a\u95ee\u9898\uff0c\u6bd4\u5982\u6587\u6863\u3001\u5355\u5143\u6d4b\u8bd5\uff0c\u751a\u81f3\u662f\u9519\u5b57\u3002\\n  \u628a\u4f60\u89c9\u5f97\u4e0d\u5bf9\u7684\u5730\u65b9\u63d0\u51fa\u6765\uff0c\u6211\u4eec\u4f1a\u9a8c\u8bc1\u5b83\u662f\u5426\u5fc5\u8981\uff0c\\n  \u7136\u540e\u4f60\u5c31\u53ef\u4ee5\u5f00\u59cbCoding\u4e86\u3002\\n\\n- \u6700\u540e\uff0c\u4f60\u53ef\u80fd\u4f1a\u95ee\uff0c\u6211\u4e3a\u4ec0\u4e48\u8981\u8d39\u5c3d\u5fc3\u601d\u4e3a\u4f60\u5199\u4ee3\u7801\uff1f\\n  \u4e0d\u4e0d\u4e0d\uff0c\u4f60\u4e0d\u662f\u4e3a\u6211\u4eec\u5199\u4ee3\u7801\uff0c\u4f60\u662f\u4e3a\u793e\u533a\u91cc\u7684\u6bcf\u4e2a\u4eba\u5199\u4ee3\u7801\uff0c\u4f60\u662f\u4e3a\u81ea\u5df1\u5199\u4ee3\u7801\u3002\\n  \u4e3a\u4e86\u63d0\u9ad8\u4f60\u7684\u6280\u80fd\uff0c\u4e3a\u4e86\u5b66\u4e60\u5982\u4f55\u4e0e\u4ed6\u4eba\u5408\u4f5c\u3002\u800c\u5bf9\u4e8e\u90a3\u4e9b\u505a\u51fa\u91cd\u5927\u8d21\u732e\u7684\u4eba\uff0c\\n  \u6211\u4eec\u4e3a\u60a8\u63d0\u4f9b\u4e00\u4e2aApache Committer\u7684\u5e2d\u4f4d\uff0c\u751a\u81f3\u662fPPMC\uff01\\n\\n### \u5c31\u8fd9\u4e9b\u4e86\uff0c\u6709\u4efb\u4f55\u95ee\u9898\u8bf7\u968f\u65f6\u63d0\u51fa\u3002\u7f16\u7801\u5feb\u4e50\uff01"},{"id":"apache-welcomes-devlake","metadata":{"permalink":"/blog/apache-welcomes-devlake","editUrl":"https://github.com/apache/incubator-devlake-website/edit/main/blog/2022-05-18-apache-welcomes-devLake/index.md","source":"@site/blog/2022-05-18-apache-welcomes-devLake/index.md","title":"Apache Incubator Welcomes DevLake, A Dev-Data Platform Serving Developers","description":"We are excited to share today that the Apache Software Foundation (ASF) voted to make DevLake an officially supported project of the Apache Incubator.","date":"2022-05-18T00:00:00.000Z","formattedDate":"May 18, 2022","tags":[{"label":"Devlake","permalink":"/blog/tags/devlake"},{"label":"Apache","permalink":"/blog/tags/apache"}],"readingTime":1.64,"hasTruncateMarker":true,"authors":[{"name":"Maxim Wheatley","title":"Apache DevLake PPMC","url":"https://github.com/MaximDub","imageURL":"https://github.com/MaximDub.png","key":"maxim"}],"frontMatter":{"slug":"apache-welcomes-devlake","title":"Apache Incubator Welcomes DevLake, A Dev-Data Platform Serving Developers","authors":"maxim","tags":["Devlake","Apache"]},"prevItem":{"title":"\u5982\u4f55\u8d21\u732eissues","permalink":"/blog/how-to-contribute-to-issues"},"nextItem":{"title":"Apache DevLake\u662f\u600e\u4e48\u8dd1\u8d77\u6765\u7684","permalink":"/blog/how-apache-devlake-runs"}},"content":"We are excited to share today that the Apache Software Foundation (ASF) voted to make DevLake an officially supported project of the Apache Incubator.\\n\\n\\n\\n### What is DevLake?\\n\\nLaunched in December of 2021, [Apache DevLake](https://github.com/apache/incubator-devlake) is an open-source dev data platform that ingests, analyzes, and visualizes the fragmented data in developer tools. \\n\\nSoftware development is complex, requiring many tools and processes, and as a result creates a storm of data scattered across tools in many formats. This makes it difficult to organize, query, and make sense of. We built Apache DevLake, to make it easy to make sense of this rich data and to translate it into actionable insights.\\n\\n\\n\x3c!--truncate--\x3e\\n\\n\\n### Apache DevLake\'s key features:\\n\\n- DevOps data collection across software development lifecycle (SDLC) to connect data islands\\n- Standardized data models with out-of-the-box metrics and customizable dashboards\\n- Flexible plugin system for user-defined data integration and transformation\\n\\nBelow is the architecture of Apache DevLake: \\n![architecture](0.11-architecture-diagram.jpg)\\n\\n\\n### Why join Apache Incubator?\\n\\nFirst and foremost, we firmly believe in Apache\'s principle of \\"Community over Code\\" and [\\"The Apache Way\\"](https://www.apache.org/theapacheway/index.html). We look forward to building a vibrant, inclusive, and diverse community under the guidance of our mentors through the incubator journey.\\n\\nWe also feel that the Apache community has one of the strongest ecosystems when it comes to data-oriented open-source projects. \\n\\nLast and not least, the support and enthusiasm of the Apache community and mentors made it clear to us that this would be a place where we can truly evolve and nurture Apache DevLake.\\n\\nIn the months leading up to DevLake\'s acceptance, our mentors provided guidance and suggestions instrumental to making this important moment a reality. We want to take this opportunity to thank and acknowledge them: \\n\\n\\n\\n- **[Willem Ning Jiang](https://github.com/WillemJiang)**: Apache DevLake Champion; ASF Member & Board Director\\n- **[Liang Zhang](https://github.com/terrymanu)**: Founder & CEO of SphereEx; ASF Member, Founder & PMC Chair of Apache ShardingSphere\\n- **[Lidong Dai](https://github.com/dailidong)**: ASF Member; Apache DolphinScheduler PMC Chair\\n- **[Sijie Guo](https://github.com/sijie)**: ASF Member, PMC member of Apache Pulsar; Founder & CEO of StreamNative\\n\\n- **[Felix Cheung](https://github.com/felixcheung)**: ASF Member, PMC on Spark, Superset, Yunikorn, Zeppelin, Pinot, and Incubator. SVP of Engineering at SafeGraph.\\n\\n- **[Jean-Baptiste Onofr\xe9](https://github.com/jbonofre)**: ASF Member, Karaf PMC Chair, PMC on ActiveMQ, Archiva, Aries, Beam, Brooklyn, Camel, Carbondata, Felix, Incubator, and [many more](http://people.apache.org/committer-index.html).\\n\\n\\n\\n### Apache DevLake Future Roadmap\\n\\n- Enhance system scalability and performance in large-scale data scenarios.\\n- Integrate more data sources and tools (JIRA, GitHub, GitLab, and Jenkins are already supported.)\\n- Enable support for OLAP databases, providing users with more choices.\\n- Provide more scenario-specific, out-of-the-box dashboards and templates reflecting best practices and well-known methodologies to improve usability.\\n\\n\\n\\n### Join us! \\n\\nWe invite developers and those passionate about data-driven engineering to \'dive into the lake\' with us, and welcome contributions of all kinds. \\nJoin us on Slack and at our weekly open source community meetups\ud83e\udd73\\n\\n**Apache DevLake (Incubating) Links:**\\n\\n- GitHub:  https://github.com/apache/incubator-devlake\\n- Official Website: https://devlake.apache.org/\\n- Slack:   https://join.slack.com/t/devlake-io/shared_invite/zt-18uayb6ut-cHOjiYcBwERQ8VVPZ9cQQw\\n- Podling Website\uff1ahttps://incubator.apache.org/projects/devlake.html"},{"id":"how-apache-devlake-runs","metadata":{"permalink":"/blog/how-apache-devlake-runs","editUrl":"https://github.com/apache/incubator-devlake-website/edit/main/blog/2022-05-18-how-apache-devlake-runs/index.md","source":"@site/blog/2022-05-18-how-apache-devlake-runs/index.md","title":"Apache DevLake\u662f\u600e\u4e48\u8dd1\u8d77\u6765\u7684","description":"Apache DevLake \u662f\u4e00\u4e2aDevOps\u6570\u636e\u6536\u96c6\u548c\u6574\u5408\u5de5\u5177\uff0c\u901a\u8fc7 Grafana \u4e3a\u5f00\u53d1\u56e2\u961f\u5448\u73b0\u51fa\u4e0d\u540c\u9636\u6bb5\u7684\u6570\u636e\uff0c\u8ba9\u56e2\u961f\u80fd\u591f\u4ee5\u6570\u636e\u4e3a\u9a71\u52a8\u6539\u8fdb\u5f00\u53d1\u6d41\u7a0b\u3002","date":"2022-05-18T00:00:00.000Z","formattedDate":"May 18, 2022","tags":[{"label":"devlake","permalink":"/blog/tags/devlake"},{"label":"apache","permalink":"/blog/tags/apache"}],"readingTime":4.8,"hasTruncateMarker":true,"authors":[{"name":"Warren Chen","title":"Apache DevLake PPMC","url":"https://github.com/warren830","imageURL":"https://github.com/warren830.png","key":"warren"}],"frontMatter":{"slug":"how-apache-devlake-runs","title":"Apache DevLake\u662f\u600e\u4e48\u8dd1\u8d77\u6765\u7684","authors":"warren","tags":["devlake","apache"]},"prevItem":{"title":"Apache Incubator Welcomes DevLake, A Dev-Data Platform Serving Developers","permalink":"/blog/apache-welcomes-devlake"},"nextItem":{"title":"\u4f7f\u7528ants\u5f15\u53d1\u7684\u6b7b\u9501","permalink":"/blog/deadlock-caused-by-using-ants"}},"content":"[Apache DevLake](https://github.com/apache/incubator-devlake) \u662f\u4e00\u4e2aDevOps\u6570\u636e\u6536\u96c6\u548c\u6574\u5408\u5de5\u5177\uff0c\u901a\u8fc7 Grafana \u4e3a\u5f00\u53d1\u56e2\u961f\u5448\u73b0\u51fa\u4e0d\u540c\u9636\u6bb5\u7684\u6570\u636e\uff0c\u8ba9\u56e2\u961f\u80fd\u591f\u4ee5\u6570\u636e\u4e3a\u9a71\u52a8\u6539\u8fdb\u5f00\u53d1\u6d41\u7a0b\u3002\\n\\n### Apache DevLake \u67b6\u6784\u6982\u8ff0\\n- \u5de6\u8fb9\u662f[\u53ef\u96c6\u6210\u7684DevOps\u6570\u636e\u63d2\u4ef6](https://devlake.apache.org/docs/DataModels/DataSupport)\uff0c\u76ee\u524d\u5df2\u6709\u7684\u63d2\u4ef6\u5305\u62ec Github\uff0cGitlab\uff0cJIRA\uff0cJenkins\uff0cTapd\uff0cFeishu \u4ee5\u53ca\u601d\u7801\u9038\u4e3b\u6253\u7684\u4ee3\u7801\u5206\u6790\u5f15\u64ce\\n- \u4e2d\u95f4\u662f\u4e3b\u4f53\u6846\u67b6\uff0c\u901a\u8fc7\u4e3b\u4f53\u6846\u67b6\u8fd0\u884c\u63d2\u4ef6\u4e2d\u7684\u5b50\u4efb\u52a1\uff0c\u5b8c\u6210\u6570\u636e\u7684\u6536\u96c6\uff0c\u6269\u5c55\uff0c\u5e76\u8f6c\u6362\u5230\u9886\u57df\u5c42\uff0c\u7528\u6237\u53ef\u4ee5\u901a\u8fc7 config-ui \u6216\u8005 api \u8c03\u7528\u7684\u5f62\u5f0f\u6765\u89e6\u53d1\u4efb\u52a1\\n- RMDBS \u76ee\u524d\u652f\u6301 Mysql \u548c PostgreSQL\uff0c\u540e\u671f\u8fd8\u4f1a\u7ee7\u7eed\u652f\u6301\u66f4\u591a\u7684\u6570\u636e\u5e93\\n- Grafana \u53ef\u4ee5\u901a\u8fc7sql\u8bed\u53e5\u751f\u6210\u56e2\u961f\u9700\u8981\u7684\u5404\u79cd\u6570\u636e\\n\\n![Generated](Aspose.Words.093a76ac-457b-4498-a472-7dbea580bca9.001.png)\\n\\n> \u63a5\u4e0b\u6765\u6211\u4eec\u5c31\u8be6\u7ec6\u804a\u4e00\u804a\u7cfb\u7edf\u662f\u600e\u4e48\u8dd1\u8d77\u6765\u7684\u3002\\n\\n\x3c!--truncate--\x3e\\n\\n### \u7cfb\u7edf\u542f\u52a8\\n\\n\u5728\u6211\u4eec\u7684 golang \u7a0b\u5e8f\u542f\u52a8\u4e4b\u524d\uff0c\u9996\u5148\u4f1a\u81ea\u52a8\u8c03\u7528\u5404\u4e2a package \u7684 init() \u65b9\u6cd5\uff0c\u6211\u4eec\u4e3b\u8981\u770b\u770bservices \u5305\u7684\u8f7d\u5165\uff0c\u4e0b\u9762\u7684\u4ee3\u7801\u6709\u8be6\u7ec6\u6ce8\u91ca\uff1a\\n\\n```go\\nfunc init() {\\nvar err error\\n// \u83b7\u53d6\u914d\u7f6e\u4fe1\u606f\\ncfg = config.GetConfig()\\n// \u83b7\u53d6\u5230\u6570\u636e\u5e93\\ndb, err = runner.NewGormDb(cfg, logger.Global.Nested(\\"db\\"))\\n// \u914d\u7f6e\u65f6\u533a\\nlocation := cron.WithLocation(time.UTC)\\n// \u521b\u5efa\u5b9a\u65f6\u4efb\u52a1\u7ba1\u7406\u5668\\ncronManager = cron.New(location)\\nif err != nil {\\npanic(err)\\n}\\n// \u521d\u59cb\u5316\u6570\u636e\u8fc1\u79fb\\nmigration.Init(db)\\n// \u6ce8\u518c\u6846\u67b6\u7684\u6570\u636e\u8fc1\u79fb\u811a\u672c\\nmigrationscripts.RegisterAll()\\n// \u8f7d\u5165\u63d2\u4ef6\uff0c\u4ececfg.GetString(\\"PLUGIN_DIR\\")\u83b7\u53d6\u5230\u7684\u6587\u4ef6\u5939\u4e2d\u8f7d\u5165\u6240\u6709.so\u6587\u4ef6\uff0c\u5728LoadPlugins\u65b9\u6cd5\u4e2d\uff0c\u5177\u4f53\u6765\u8bb2\uff0c\u901a\u8fc7\u8c03\u7528runner.LoadPlugins\u5c06pluginName:PluginMeta\u952e\u503c\u5bf9\u5b58\u5165\u5230core.plugins\u4e2d\\nerr = runner.LoadPlugins(\\ncfg.GetString(\\"PLUGIN_DIR\\"),\\ncfg,\\nlogger.Global.Nested(\\"plugin\\"),\\ndb,\\n)\\nif err != nil {\\npanic(err)\\n}\\n// \u6267\u884c\u6570\u636e\u8fc1\u79fb\u811a\u672c\uff0c\u5b8c\u6210\u6570\u636e\u5e93\u6846\u67b6\u5c42\u5404\u4e2a\u8868\u7684\u521d\u59cb\u5316\\nerr = migration.Execute(context.Background())\\nif err != nil {\\npanic(err)\\n}\\n\\n// call service init\\npipelineServiceInit()\\n}\\n\\n```\\n### DevLake\u7684\u4efb\u52a1\u6267\u884c\u539f\u7406\\n\\n**Pipeline\u7684\u8fd0\u884c\u6d41\u7a0b**\\n\\n\u5728\u8bb2\u89e3Pipeline\u6d41\u7a0b\u4e4b\u524d\uff0c\u6211\u4eec\u9700\u8981\u5148\u89e3\u91ca\u4e00\u4e0b[Blueprint](https://devlake.apache.org/docs/Glossary#blueprints)\u3002\\n\\nBlueprint\u662f\u4e00\u4e2a\u5b9a\u65f6\u4efb\u52a1\uff0c\u5305\u542b\u4e86\u9700\u8981\u6267\u884c\u7684\u5b50\u4efb\u52a1\u4ee5\u53ca\u6267\u884c\u8ba1\u5212\u3002Blueprint \u7684\u6bcf\u4e00\u6b21\u6267\u884c\u8bb0\u5f55\u662f\u4e00\u6761Historical Run\uff08\u4e5f\u79f0\u4e3a Pipeline\uff09\uff0c\u4ee3\u8868 DevLake \u4e00\u6b21\u89e6\u53d1\uff0c\u901a\u8fc7\u4e00\u4e2a\u6216\u591a\u4e2a\u63d2\u4ef6\uff0c\u5b8c\u6210\u4e86\u4e00\u4e2a\u6216\u591a\u4e2a\u6570\u636e\u6536\u96c6\u8f6c\u6362\u7684\u4efb\u52a1\u3002\\n\\n![Generated](Aspose.Words.093a76ac-457b-4498-a472-7dbea580bca9.002.png)\\n\\n\u4ee5\u4e0b\u662f Pipeline \u8fd0\u884c\u6d41\u7a0b\u56fe\uff1a\\n\\n![Generated](Aspose.Words.093a76ac-457b-4498-a472-7dbea580bca9.003.png)\\n\\n\u4e00\u4e2apipeline\u5305\u542b\u4e00\u4e2a\u4e8c\u7ef4\u6570\u7ec4tasks\uff0c\u4e3b\u8981\u662f\u4e3a\u4e86\u4fdd\u8bc1\u4e00\u7cfb\u5217\u4efb\u52a1\u6309\u9884\u8bbe\u987a\u5e8f\u6267\u884c\u3002\u5982\u679c\u4e0b\u56fe\u4e2d\u7684 Stage3 \u7684\u63d2\u4ef6\u9700\u8981\u4f9d\u8d56\u5176\u4ed6\u63d2\u4ef6\u51c6\u5907\u6570\u636e\uff08\u4f8b\u5982 refdiff \u7684\u8fd0\u884c\u9700\u8981\u4f9d\u8d56 gitextractor \u548c github\uff0c\u6570\u636e\u6e90\u4e0e\u63d2\u4ef6\u7684\u66f4\u591a\u4fe1\u606f\u8bf7\u770b[\u6587\u6863](https://devlake.apache.org/docs/DataModels/DataSupport)\uff09\uff0c\u90a3\u4e48 Stage 3 \u5f00\u59cb\u6267\u884c\u65f6\uff0c\u9700\u8981\u4fdd\u8bc1\u5176\u4f9d\u8d56\u9879\u5df2\u5728 Stage1 \u548c Stage2 \u6267\u884c\u5b8c\u6210\uff1a\\n\\n![Generated](Aspose.Words.093a76ac-457b-4498-a472-7dbea580bca9.004.png)\\n\\n**Task\u7684\u8fd0\u884c\u6d41\u7a0b**\\n\\n\u5728stage1\uff0cstage2\uff0cstage3\u4e2d\u7684\u5404\u63d2\u4ef6\u4efb\u52a1\u90fd\u662f\u5e76\u884c\u6267\u884c\uff1a\\n\\n![Generated](Aspose.Words.093a76ac-457b-4498-a472-7dbea580bca9.005.png)\\n\\n**\u63a5\u4e0b\u6765\u5c31\u662f\u987a\u5e8f\u6267\u884c\u63d2\u4ef6\u4e2d\u7684\u5b50\u4efb\u52a1**\\n\\n![Generated](Aspose.Words.093a76ac-457b-4498-a472-7dbea580bca9.006.png)\\n\\n1. RunTask \u4e4b\u524d\u7684\u5de5\u4f5c\u90fd\u662f\u5728\u51c6\u5907 RunTask \u65b9\u6cd5\u9700\u8981\u7684\u53c2\u6570\uff0c\u6bd4\u5982 logger\uff0cdb\uff0ccontext \u7b49\u7b49\u3002\\n2. RunTask \u65b9\u6cd5\u4e2d\u4e3b\u8981\u662f\u5bf9\u6570\u636e\u5e93\u4e2d\u7684tasks\u8fdb\u884c\u72b6\u6001\u66f4\u65b0\uff0c\u540c\u65f6\uff0c\u51c6\u5907\u8fd0\u884c\u63d2\u4ef6\u4efb\u52a1\u7684 options\uff08\u628a\u4ece config-ui \u4f20\u8fc7\u6765\u7684 json \u8f6c\u6210 map \u4f20\u5230 RunPluginTask \u4e2d\uff09\\n3. RunPluginTask \u9996\u5148\u901a\u8fc7 core.GetPlugin(pluginName) \u83b7\u53d6\u5230\u5bf9\u5e94 [PluginMeta](#pm)\uff0c\u7136\u540e\u901a\u8fc7 PluginMeta \u83b7\u53d6\u5230 [PluginTask](#pt)\uff0c\u518d\u6267\u884c RunPluginSubTasks\\n\\n**\u6bcf\u4e00\u4e2a\u63d2\u4ef6\u5b50\u4efb\u52a1\u7684\u8fd0\u884c\u6d41\u7a0b\uff08\u6d89\u53ca\u5230\u7684 interface \u53ca func \u4f1a\u5728[\u4e0b\u4e00\u8282](#DevLake\u4e2d\u7684\u91cd\u8981\u63a5\u53e3)\u8be6\u7ec6\u9610\u8ff0\uff09**\\n\\n![Generated](Aspose.Words.093a76ac-457b-4498-a472-7dbea580bca9.007.png)\\n\\n1. \u901a\u8fc7\u8c03\u7528SubTaskMetas()\u83b7\u53d6\u5230\u6240\u6709\u63d2\u4ef6\u6240\u6709\u7684\u53ef\u7528\u5b50\u4efb\u52a1[subtaskMeta](#stm)\\n2. \u901a\u8fc7`options[\\"tasks\\"]`\u4ee5\u53casubtaskMeta\u7ec4\u5efa\u9700\u8981\u6267\u884c\u7684\u5b50\u4efb\u52a1\u96c6\u5408subtaskMetas\\n3. \u8ba1\u7b97\u603b\u5171\u591a\u5c11\u4e2a\u5b50\u4efb\u52a1\\n4. \u901a\u8fc7`helper.NewDefaultTaskContext`\u6784\u5efa[taskCtx](#tc)\\n5. \u8c03\u7528`pluginTask.PrepareTaskData`\u6784\u5efa[taskData](#td)\uff0c\\n6. \u63a5\u4e0b\u6765\u8fed\u4ee3subtaskMetas\u91cc\u9762\u7684\u6240\u6709\u5b50\u4efb\u52a1\\n    1. \u901a\u8fc7`taskCtx.SubTaskContext(subtaskMeta.Name)`\u83b7\u53d6\u5230\u5b50\u4efb\u52a1\u7684[subtaskCtx](#sc)\\n    2. \u6267\u884c[`subtaskMeta.EntryPoint(subtaskCtx)`](#step)\\n### DevLake\u4e2d\u7684\u91cd\u8981\u63a5\u53e3\\n1. <a id=\\"pm\\">PluginMeta</a>: \u5305\u542b\u4e86\u63d2\u4ef6\u6700\u57fa\u672c\u7684\u4e24\u4e2a\u65b9\u6cd5\uff0c\u6240\u6709\u63d2\u4ef6\u90fd\u9700\u8981\u5b9e\u73b0\uff0c\u7cfb\u7edf\u542f\u52a8\u7684\u65f6\u5019\u5b58\u5728core.plugins\u4e2d\uff0c\u5728\u6267\u884c\u63d2\u4ef6\u4efb\u52a1\u7684\u65f6\u5019\u901a\u8fc7core.GetPlugin\u83b7\u53d6\\n\\n```go\\ntype PluginMeta interface {\\n   Description() string\\n   //PkgPath information will be lost when compiled as plugin(.so), this func will return that info\\n   RootPkgPath() string\\n}\\n\\n```\\n2. <a id=\\"pt\\">PluginTask</a>: \u901a\u8fc7PluginMeta\u83b7\u53d6\uff0c\u63d2\u4ef6\u5b9e\u73b0\u8fd9\u4e2a\u65b9\u6cd5\u4e4b\u540e\uff0cFramework\u5c31\u80fd\u76f4\u63a5\u8fd0\u884c\u5b50\u4efb\u52a1\uff0c\u800c\u4e0d\u662f\u6254\u7ed9\u63d2\u4ef6\u81ea\u5df1\u53bb\u6267\u884c\uff0c\u6700\u5927\u7684\u597d\u5904\u5c31\u662f\u63d2\u4ef6\u7684\u5b50\u4efb\u52a1\u5b9e\u73b0\u66f4\u52a0\u7b80\u5355\uff0c\u5728\u63d2\u4ef6\u8fd0\u884c\u5f53\u4e2d\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u66f4\u5bb9\u6613\u7684\u53bb\u5e72\u6d89\uff08\u6bd4\u5982\u589e\u52a0\u65e5\u5fd7\u7b49\u7b49\uff09\\n\\n```go\\ntype PluginTask interface {\\n   // return all available subtasks, framework will run them for you in order\\n   SubTaskMetas() []SubTaskMeta\\n   // based on task context and user input options, return data that shared among all subtasks\\n   PrepareTaskData(taskCtx TaskContext, options map[string]interface{}) (interface{}, error)\\n}\\n```\\n3. \u6bcf\u4e2a\u63d2\u4ef6\u8fd8\u6709\u4e00\u4e2a<a id=\\"td\\">taskData</a>\uff0c\u91cc\u9762\u5305\u542b\u4e86\u914d\u7f6e\u9009\u9879\uff0capiClient\u4ee5\u53ca\u4e00\u4e9b\u63d2\u4ef6\u5176\u5b83\u5c5e\u6027\uff08\u6bd4\u5982github\u6709Repo\u4fe1\u606f\uff09\\n4. <a id=\\"stm\\">SubTaskMeta</a>: \u4e00\u4e2a\u5b50\u4efb\u52a1\u7684\u5143\u6570\u636e\uff0c\u6bcf\u4e2a\u5b50\u4efb\u52a1\u90fd\u4f1a\u5b9a\u4e49\u4e00\u4e2aSubTaskMeta\\n\\n\\n```go\\nvar CollectMeetingTopUserItemMeta = core.SubTaskMeta{\\n   Name: \\"collectMeetingTopUserItem\\",\\n   EntryPoint: CollectMeetingTopUserItem,\\n   EnabledByDefault: true,\\n   Description: \\"Collect top user meeting data from Feishu api\\",\\n}\\n```\\n5. <a id=\\"ec\\">ExecContext</a>: \u5b9a\u4e49\u4e86\u6267\u884c(\u5b50)\u4efb\u52a1\u9700\u8981\u7684\u6240\u6709\u8d44\u6e90\\n6. <a id=\\"stc\\">SubTaskContext</a>: \u5b9a\u4e49\u4e86\u6267\u884c\u5b50\u4efb\u52a1\u6240\u9700\u8981\u7684\u8d44\u6e90\uff08\u5305\u542b\u4e86ExecContext\uff09\\n7. <a id=\\"tc\\">TaskContext</a>: \u5b9a\u4e49\u4e86\u6267\u884c\u63d2\u4ef6\u4efb\u52a1\u6240\u9700\u8981\u7684\u8d44\u6e90\uff08\u5305\u542b\u4e86ExecContext\uff09\u3002\u4e0eSubTaskContext\u7684\u533a\u522b\u5728\u4e8eSubTaskContext\u4e2d\u7684TaskContext()\u65b9\u6cd5\u53ef\u4ee5\u8fd4\u56deTaskContext\uff0c\u800cTaskContext\u4e2d\u7684\u65b9\u6cd5SubTaskContext(subtask string)\u65b9\u6cd5\u53ef\u4ee5\u8fd4\u56deSubTaskContext\uff0c\u5b50\u4efb\u52a1\u96b6\u5c5e\u4e8e\u63d2\u4ef6\u4efb\u52a1\uff0c\u6240\u4ee5\u628a\u8fd9\u4e24\u4e2aContext\u8fdb\u884c\u4e86\u533a\u5206\\n8. <a id=\\"step\\">SubTaskEntryPoint</a>: \u6240\u6709\u7684\u63d2\u4ef6\u5b50\u4efb\u52a1\u90fd\u9700\u8981\u5b9e\u73b0\u8fd9\u4e2a\u51fd\u6570\uff0c\u8fd9\u6837\u624d\u80fd\u7531\u6846\u67b6\u5c42\u7edf\u4e00\u534f\u8c03\u5b89\u6392\\n\\n### \u540e\u7eed\\n\\n\u8fd9\u7bc7\u6587\u7ae0\u4ecb\u7ecd\u4e86 DevLake \u7684\u67b6\u6784\u4ee5\u53ca\u8fd0\u884c\u6d41\u7a0b\uff0c\u8fd8\u6709\u4e09\u4e2a\u6838\u5fc3 api\\\\_collector\u3001api\\\\_extractor \u548c data\\\\_convertor \u5c06\u4f1a\u5728\u4e0b\u4e00\u7bc7\u6587\u7ae0\u8fdb\u884c\u5256\u6790\u3002"},{"id":"deadlock-caused-by-using-ants","metadata":{"permalink":"/blog/deadlock-caused-by-using-ants","editUrl":"https://github.com/apache/incubator-devlake-website/edit/main/blog/2022-04-30-deadlock-caused-by-using-ants/index.md","source":"@site/blog/2022-04-30-deadlock-caused-by-using-ants/index.md","title":"\u4f7f\u7528ants\u5f15\u53d1\u7684\u6b7b\u9501","description":"1. \u80cc\u666f","date":"2022-04-30T00:00:00.000Z","formattedDate":"April 30, 2022","tags":[{"label":"devlake","permalink":"/blog/tags/devlake"},{"label":"ants","permalink":"/blog/tags/ants"}],"readingTime":5.616666666666666,"hasTruncateMarker":true,"authors":[{"name":"Warren Chen","title":"Apache DevLake PPMC","url":"https://github.com/warren830","imageURL":"https://github.com/warren830.png","key":"warren"}],"frontMatter":{"slug":"deadlock-caused-by-using-ants","title":"\u4f7f\u7528ants\u5f15\u53d1\u7684\u6b7b\u9501","authors":"warren","tags":["devlake","ants"]},"prevItem":{"title":"Apache DevLake\u662f\u600e\u4e48\u8dd1\u8d77\u6765\u7684","permalink":"/blog/how-apache-devlake-runs"}},"content":"### 1. \u80cc\u666f\\n\\n\u6211\u4eec\u7684\u9879\u76ee\u6709\u5927\u91cf\u7684api\u8bf7\u6c42\u7531goroutine\u5b8c\u6210\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u5f15\u5165\u4e00\u4e2apool\u6765\u8282\u7701\u9891\u7e41\u521b\u5efagoroutine\u6240\u9020\u6210\u7684\u7684\u5f00\u9500\uff0c\u540c\u65f6\u4e5f\u53ef\u4ee5\u66f4\u7b80\u6613\u7684\u8c03\u5ea6goroutine\uff0c\u5728\u5bf9github\u4e0a\u591a\u4e2a\u534f\u7a0b\u6c60\u7684\u5bf9\u6bd4\u540e\uff0c\u6211\u4eec\u6700\u7ec8\u9009\u5b9a\u4e86[ants](https://github.com/panjf2000/ants)\u4f5c\u4e3a\u6211\u4eec\u7684\u8c03\u5ea6\u7ba1\u7406pool\u3002\\n\\n1. \u6700\u8fd1\u5728\u6d4b\u8bd5\u4e2d\u5076\u7136\u53d1\u73b0\u7cfb\u7edf\u51fa\u73b0\u4e86\u201c\u6b7b\u9501\u201d\u7684\u60c5\u51b5\uff0c\u8fdb\u800c\u91c7\u53d6\u65ad\u7f51\u7684\u65b9\u5f0f\u53d1\u73b0\u201c\u6b7b\u9501\u201d\u5728\u6781\u7aef\u60c5\u51b5\u4e0b\u662f\u7a33\u5b9a\u51fa\u73b0\uff0c\u7ecf\u8fc7\u6ee1\u7bc7\u7684log\uff0cbreak\uff0c\u6700\u7ec8\u628a\u95ee\u9898\u5b9a\u4f4d\u5230\u4e86ants\u7684submit\u65b9\u6cd5\u3002\u8fd9\u4e2a\u95ee\u9898\u6765\u81ea\u4e8e\u5728\u4f7f\u7528ants pool\u7684\u8fc7\u7a0b\u4e2d\uff0c\u4e3a\u4e86\u5b9e\u73b0\u91cd\u8bd5\uff0c\u6211\u4eec\u5728\u65b9\u6cd5\u4e2d\u53c8\u9012\u5f52\u8c03\u7528\u4e86\u65b9\u6cd5\u672c\u8eab\uff0c\u4e5f\u5c31\u662fsubmit task\u5185\u90e8\u53c8submit\u4e00\u4e2atask\uff0c\u4e0b\u9762\u662f\u7b80\u5316\u540e\u7684\u4ee3\u7801\uff1a\\n\\n\x3c!--truncate--\x3e\\n\\n\\n```Go\\nfunc (apiClient *ApiAsyncClient) DoAsync(\\n\\n   retry int,\\n\\n) error {\\n\\n   return apiClient.scheduler.Submit(func() error {\\n\\n      _, err := apiClient.Do()\\n\\n      if err != nil {\\n\\n         if retry < apiClient.maxRetry {\\n\\n            return apiClient.DoAsync(retry+1)\\n\\n         }\\n\\n      }\\n\\n      return err\\n\\n   })\\n\\n}\\n```\\n\\n\u5728\u4e0a\u9762\u7684\u4ee3\u7801\u5757\u4e2d\uff0c\u53ef\u4ee5\u770b\u5230return apiClient.DoAsync(retry+1)\u8fd9\u4e00\u6b65\u9012\u5f52\u8c03\u7528\u4e86\u81ea\u5df1\uff0c\u5373\u5728submit\u4e2d\u53c8\u8c03\u7528\u4e86submit\\n\\n\\n### 2. \u6df1\u5165ants\u5206\u6790\\n\\n![img](ants_source_code_1.png)\\n\\n- \u5728\u4e0a\u9762submit\u6e90\u7801\u4e2d\u53ef\u4ee5\u770b\u5230\uff0c\u9996\u5148\u662f\u901a\u8fc7retrieveWorker\u56de\u53bb\u4e00\u4e2aworker\uff0c\u7136\u540e\u628atask\u653e\u5165\u5230worker\u7684task channel\u5f53\u4e2d\uff0c\u5f88\u7b80\u5355\uff0c\u4e5f\u770b\u4e0d\u51fa\u6765\u4e3a\u4ec0\u4e48\u4f1a\u201cdead lock\u201d\uff0c\u6ca1\u529e\u6cd5\uff0c\u53bb\u5230retrieveWorker\\n\\n```Go\\n// retrieveWorker returns a available worker to run the tasks.\\n\\nfunc (p *Pool) retrieveWorker() (w *goWorker) {\\n\\n spawnWorker := func() {\\n\\n  w = p.workerCache.Get().(*goWorker)\\n\\n  w.run()\\n\\n }\\n\\n\\n\\n p.lock.Lock()\\n\\n\\n\\n w = p.workers.detach()\\n\\n if w != nil { // first try to fetch the worker from the queue\\n\\n  p.lock.Unlock()\\n\\n } else if capacity := p.Cap(); capacity == -1 || capacity > p.Running() {\\n\\n  // if the worker queue is empty and we don\'t run out of the pool capacity,\\n\\n  // then just spawn a new worker goroutine.\\n\\n  p.lock.Unlock()\\n\\n  spawnWorker()\\n\\n } else { // otherwise, we\'ll have to keep them blocked and wait for at least one worker to be put back into pool.\\n\\n  if p.options.Nonblocking {\\n\\n   p.lock.Unlock()\\n\\n   return\\n\\n  }\\n\\n retry:\\n\\n  if p.options.MaxBlockingTasks != 0 && p.blockingNum >= p.options.MaxBlockingTasks {\\n\\n   p.lock.Unlock()\\n\\n   return\\n\\n  }\\n\\n  p.blockingNum++\\n\\n  p.cond.Wait() // block and wait for an available worker\\n\\n  p.blockingNum--\\n\\n  var nw int\\n\\n  if nw = p.Running(); nw == 0 { // awakened by the scavenger\\n\\n   p.lock.Unlock()\\n\\n   if !p.IsClosed() {\\n\\n    spawnWorker()\\n\\n   }\\n\\n   return\\n\\n  }\\n\\n  if w = p.workers.detach(); w == nil {\\n\\n   if nw < capacity {\\n\\n    p.lock.Unlock()\\n\\n    spawnWorker()\\n\\n    return\\n\\n   }\\n\\n   goto retry\\n\\n  }\\n\\n\\n\\n  p.lock.Unlock()\\n\\n }\\n\\n return\\n\\n}\\n```\\n\\n![img](ants_source_code_flowchart.png)\\n\\n- \u8fd9\u4e2a\u65b9\u6cd5\u7684\u5927\u6982\u6d41\u7a0b\u5c31\u662f\u5148\u5bf9pool\u4e0a\u9501\uff0c\u7136\u540e\u4ecepool\u7684worker\u961f\u5217\u4e2d\u53bb\u53d6\u4e00\u4e2aworker\uff0cdetach\u5176\u5b9e\u5c31\u662f\u8fd4\u56de\u4e86worker\uff0c\u5e76\u4e14\u628a\u8fd9\u4e2aworker\u4ece\u961f\u5217\u4e2d\u5220\u9664\u6389\u4e86\uff0c\u63a5\u4e0b\u6765\u6709\u4e09\u79cd\u60c5\u51b5\\n  - \u5982\u679c\u6210\u529f\u53d6\u5230worker\uff0c\u89e3\u9501p\uff0c\u8fd4\u56de\u53d6\u5230\u7684worker\\n  - \u5982\u679cworker\u961f\u5217\u662f\u7a7a\u7684\u5e76\u4e14pool\u7684\u5bb9\u91cf\u6ca1\u6709\u8017\u5c3d\uff0c\u5c31\u89e3\u9501pool\u5e76\u751f\u6210\u4e00\u4e2a\u65b0\u7684worker\u8fd4\u56de\u7ed9submit\\n  - \u6700\u540e\u4e00\u79cd\u60c5\u51b5\u5c31\u662fpool\u5bb9\u91cf\u8017\u5c3d\u4e86\uff0cworker\u961f\u5217\u4e5f\u6ca1\u6709\u7a7a\u95f2\u7684worker\uff0c\u90a3\u5c31\u8981\u6839\u636e\u6211\u4eec\u521b\u5efapool\u65f6\u4f20\u5165\u7684\u53c2\u6570\u6765\u51b3\u5b9a\u4e0b\u4e00\u6b65\u60c5\u51b5\u4e86\\n    - \u9996\u5148\u8bf4\u4e00\u4e0b\u8fd9\u91cc\u6d89\u53ca\u7684\u4e24\u4e2a\u91cd\u8981\u53c2\u6570\uff0c\u4e00\u4e2a\u662fcapacity\uff0c\u8fd9\u4e2a\u503c\u5982\u679c\u5728new pool\u7684\u65f6\u5019\u4e0d\u8bbe\u7f6e\uff0c\u4f1a\u662fMaxInt32\uff0c\u76f8\u5f53\u4e8e\u65e0\u9650\u5236\u7684goroutine\uff0c\u4f46\u662f\u60c5\u51b5\u4e0d\u540c\u7684\u662f\uff0c\u6211\u4eec\u4f1a\u9996\u5148\u590d\u7528\u7a7a\u95f2\u7684worker\uff0c\u8fd8\u53ef\u4ee5\u5b9a\u65f6\u6e05\u7a7a\u591a\u4f59\u7684\u7a7a\u95f2worker\uff0cblockingNum\u4e3a\u6b63\u5728\u7b49\u5f85\u7684goroutine\uff0c\u521d\u59cb\u4e3a0\\n    - \u5982\u679c\u8bbe\u7f6e\u4e86Nonblocking\u4e3atrue\uff0c\u76f4\u63a5\u89e3\u9501\uff0c\u8fd4\u56denil\uff0csubmit\u5c31\u4f1a\u76f4\u63a5\u8fd4\u56de\u4e00\u4e2a\u9519\u8befErrPoolOverload\uff0c\u4ee3\u8868pool\u8d85\u8d1f\u8377\u4e86\uff0c\u4e0d\u505a\u4efb\u4f55\u5176\u4ed6\u5904\u7406\uff0csubmit\u5931\u8d25\uff0c\u7ed3\u675f~~\\n    - \u53e6\u4e00\u79cd\u60c5\u51b5\u5c31\u662f\u6ca1\u6709\u8bbe\u7f6eNonblocking\uff0c\u9ed8\u8ba4\u4e3afalse\uff0c\u5c31\u8fdb\u5165\u5230\u4e86\u4e00\u4e2aretry\u6807\u7b7e\uff0c\u8fd9\u91cc\u9762\u5c31\u6d89\u53ca\u5230\u4e86\u53e6\u4e00\u4e2a\u521b\u5efapool\u65f6\u5019\u7684\u53c2\u6570MaxBlockingTasks\uff0c\u8fd9\u4e2aMaxBlockingTasks\u5c31\u662f\u4e00\u4e2athreshold\\n      - \u9996\u5148\u5224\u65ad\u5982\u679c\u8bbe\u7f6e\u4e86MaxBlockingTasks\u5e76\u4e14\u5f53\u524dblockingNum\u5927\u4e8e\u6216\u8005\u7b49\u4e8eMaxBlockingTasks\uff0c\u90a3\u4e48\u76f4\u63a5\u89e3\u9501pool\u5e76\u4e14\u8fd4\u56denil\uff0csubmit\u5931\u8d25\uff0c\u7ed3\u675f~~\\n      - \u4e0a\u9762\u7684\u6761\u4ef6\u4e0d\u6ee1\u8db3\uff0c\u5219\u9996\u5148blockingNum++\uff0c\u7136\u540e\u5f00\u59cbwait\u4e00\u76f4\u5230\u6709worker\u6478\u5b8c\u9c7c\u56de\u6765\u5de5\u4f5c\uff0c\u5219blockingNum--\u3002\u95ee\u9898\u5c31\u5728\u8fd9\u91cc\u4e86\uff01\uff01\uff01\u5982\u679c\u6240\u6709\u7684worker\u90fd\u5728\u5de5\u4f5c\uff08\u4e5f\u8bb8\u662f\u770b\u8d77\u6765\u5728\u5de5\u4f5c\uff0c\u5b9e\u9645\u4e0a\u5728\u6478\u9c7c\uff09\uff0c\u8fd9\u91cc\u5c31\u4f1a\u4e00\u76f4wait()\uff0c\u4e5f\u5c31\u662f\u6211\u4eec\u81ea\u5df1\u4ee3\u7801\u4e2dreturn\u540e\u9762\u7684DoAsync\u4f1a\u4e00\u76f4wait()\uff0c\u4ece\u6211\u4eec\u81ea\u5df1\u7684\u9879\u76ee\u6765\u8bb2\uff0c\u5c31\u662f\u6240\u6709worker\u8fd9\u4e2a\u65f6\u5019\u90fd\u5728submit\u4e00\u4e2a\u65b0\u7684task\u5230\u540c\u4e00\u4e2apool\u4e2d\uff0c\u800c\u8fd9\u4e2a\u65f6\u5019pool\u5df2\u7ecf\u6ee1\u4e86\uff0c\u5bfc\u81f4\u6240\u6709worker\u90fd\u963b\u585e\u5728\u4e86\u8fd9\u91cc\uff0c\u201c\u6b7b\u9501\u201d\u4e5f\u5c31\u51fa\u73b0\u4e86\\n\\n### 3. \u6700\u540e\u804a\u51e0\u53e5\u81ea\u5df1\u5bf9\u4e8egolang\u5185\u5b58\u6a21\u578b\u7684\u7406\u89e3\\n\\n1. go\u7684\u8c03\u5ea6\u6d41\u7a0b\u672c\u8d28\u4e0a\u662f\u4e00\u4e2a\u751f\u4ea7-\u6d88\u8d39\u7684\u8fc7\u7a0b\uff0c\u6211\u4eec\u5229\u7528go func\u662f\u751f\u4ea7\u4e86\u4e00\u4e2atask\u653e\u5230\u961f\u5217\u4e2d\uff0c\u7531\u7cfb\u7edf\u7ebf\u7a0b\u4ece\u961f\u5217\u4e2d\u83b7\u53d6\u534f\u7a0b\u7136\u540e\u6267\u884c\\n2. \u8bb2\u5230go\u7684\u8c03\u5ea6\u6d41\u7a0b\uff0c\u54b1\u4eec\u5c31\u4e0d\u80fd\u4e0d\u8bf4\u4e00\u4e0bgo\u7684MPG\uff08\u5206\u522b\u89e3\u91ca\u4e00\u4e0b\uff0c\u5c31\u4e0d\u505a\u6df1\u5165\u4e86\uff0c\u5982\u679c\u6709\u4eba\u770b\uff0c\u540e\u671f\u518d\u52aa\u529b\u6574\u7406\u4e00\u4efd\u8be6\u7ec6\u804a\u804a\uff09\\n   1. M \u4ee3\u8868\u7740\u4e00\u4e2a\u5185\u6838\u7ebf\u7a0b\uff0c\u4e5f\u53ef\u4ee5\u79f0\u4e3a\u4e00\u4e2a\u5de5\u4f5c\u7ebf\u7a0b\uff0c\u6240\u6709\u7684goroutine\u90fd\u662f\u8dd1\u5728M\u4e4b\u4e0a\u7684\\n   2. P\u53ef\u4ee5\u7406\u89e3\u4e3a\u4e00\u4e2a\u903b\u8f91\u5904\u7406\u5668\uff0c\u4e3b\u8981\u7531P\u6765\u6267\u884cgoroutine\\n   3. G\u5c31\u662fgo func\u5c01\u88c5\u7684\u8fd9\u4e2a\u65b9\u6cd5\\n3. \u771f\u6b63\u7684\u5e76\u53d1\u6570\u662f\u7531GOMAXPROCS\u6765\u51b3\u5b9a\u7684\uff0c\u5e76\u4e0d\u662f\u63d0\u4ea4\u591a\u5c11goroutine\uff0c\u5e76\u53d1\u6570\u5c31\u662f\u591a\u5c11\uff0cGOMAXPROCS\u662f\u7531\u673a\u5668\u7684cpu\u6838\u6570\u6765\u51b3\u5b9a\u7684\\n4. \u6240\u4ee5\u56de\u5230\u7b2c2\u90e8\u5206\uff0cpool.cond.wait\u7b49\u5f85\u7684\u662f\u7ed1\u5b9a\u4e0a\u4e00\u4e2agoroutine\uff0c\u548c\u5176\u4ed6\u8bed\u8a00\u7684\u7b49\u5f85\u7ebf\u7a0b\u5177\u6709\u76f8\u4f3c\u5374\u5b8c\u5168\u4e0d\u540c\u7684\u610f\u4e49\uff0c\u6bcf\u4e00\u4e2aworker\u662f\u4e00\u4e2aG\uff0cpool\u4e5f\u5c31\u662f\u4e00\u4e2a\u961f\u5217\uff0c\u800cM\u4f1a\u4ece\u961f\u5217\u4e2d\u83b7\u53d6\u53ef\u4ee5\u6267\u884c\u7684G\uff0c\u5f53\u6240\u6709\u7684G\u90fd\u5728\u7b49\u5f85\u521b\u5efa\u65b0\u7684G\u65f6\uff0cM\u5168\u90e8\u90fd\u5904\u4e8e\u7a7a\u95f2\u72b6\u6001\\n\\n### 4. \u89e3\u51b3\u65b9\u6848\\n\\n1. \u5f53\u7136\uff0c\u6700\u9760\u8c31\u7684\u5e94\u8be5\u662f\u5c3d\u91cf\u907f\u514d\u7c7b\u4f3c\u8fd9\u6837\u7684\u9012\u5f52\u8c03\u7528\u64cd\u4f5c\\n2. \u5982\u679c\u5b9e\u5728\u4e0d\u884c\uff0c\u53ef\u4ee5\u8003\u8651\u6dfb\u52a0\u4e00\u4e2asub pool\uff0c\u4f5c\u4e3a\u6b21\u7ea7\u961f\u5217\uff0c\u8ba9\u9012\u5f52\u751f\u6210\u7684G\u53ef\u4ee5\u5728sub pool\u91cc\u7b49\u5f85\u7a7a\u95f2\u7684M\u6765\u5904\u7406\\n\\n### 5. \u5bf9\u6bd4\u4e0d\u540csize\u7684pool\u548c\u4e24\u4e2apool\u7684\u5185\u5b58\uff08alloc_space\uff09\u548cCPU\u5f00\u9500\\n\\n| Pool size           | CPU(ants)% | CPU(runtime.gcBgMarkWorker)% | CPU(runtime.mcall)% | \u5185\u5b58(runtime.allocm)kB | \u5185\u5b58(runtime.gcBgMarkWorker)kB | \u5185\u5b58(root) |\\n| ------------------- | ---------- | ---------------------------- | ------------------- | ---------------------- | ------------------------------ | ---------- |\\n| Two pools(158, 632) | 27.98      | 7.73                         | 25.44               | 2050.25                | 512.02                         | 8798       |\\n| Pool 158            | 28.11      | 6.61                         | 25.08               | 2050                   |                                | 6661       |\\n| Pool 1580           | 27.41      | 12.96                        | 23.17               | 3075.38                |                                | 10264      |\\n| Pool 7900           | 25.89      | 9.82                         | 22.52               | 3587.94                |                                | 5725       |\\n| Pool 790000         | 25.12      | 12.79                        | 23.44               | 3075.38                |                                | 9748       |\\n\\nruntime.gcBgMarkWorker: \u7528\u4e8e\u6807\u8bb0\u5783\u573e\u5bf9\u8c61\\n\\n\u4ece\u4e0a\u9762\u7684\u8868\u683c\u53ef\u4ee5\u770b\u5230\uff0c\u53ef\u80fd\u5b58\u5728\u591a\u6838\u7684\u5f71\u54cd\uff0c\u6240\u4ee5\u5bf9\u4e8e\u6211\u4eec\u516c\u53f8\u73b0\u5728\u9700\u8981\u7684\u5e76\u53d1\u6570\u91cf\u7ea7\u6765\u8bb2\uff0cpool\u7684size\u5bf9\u7cfb\u7edf\u5f71\u54cd\u5e76\u4e0d\u5927\u3002"}]}')}}]);